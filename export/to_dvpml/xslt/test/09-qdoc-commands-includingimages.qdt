<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.2">
  <db:info>
    <db:title>Including Images</db:title>
    <db:abstract>
      <db:para/>
      <db:para>
        <db:simplelist>
          <db:member>
            <db:link xlink:href="10-qdoc-commands-tablesandlists.html" xlink:title="next">Tables and Lists &gt;</db:link>
          </db:member>
          <db:member>
            <db:link xlink:href="08-qdoc-commands-creatinglinks.html" xlink:title="previous">&lt; Creating Links</db:link>
          </db:member>
          <db:member>
            <db:link xlink:href="qdoc-index.html" xlink:title="contents">^ QDoc Manual ^</db:link>
          </db:member>
        </db:simplelist>
      </db:para>
    </db:abstract>
    <db:pubdate>2018-09-11+02:00</db:pubdate>
    <db:date>2018-09-11+02:00</db:date>
    <db:productname>Qt</db:productname>
    <db:productnumber>1.2</db:productnumber>
  </db:info>
  <db:para>The graphic commands makes it possible to include images in the documentation. The images can be rendered as separate paragraphs, or within running text.</db:para>
  <db:section xml:id="image">
    <db:title>\image</db:title>
    <db:para>The \image command expands to the image specified by its first argument, and renders it centered as a separate paragraph.</db:para>
    <db:para>The command takes two arguments. The first argument is the name of the image file. The second argument is optional and is a simple description of the image, equivalent to the HTML alt="" in an image tag. The description is used for tooltips and for browsers that don't support images, like the Lynx text browser.</db:para>
    <db:para>The remaining text <db:emphasis>after</db:emphasis> the file name is the optional, description argument. Be sure to follow the file name or the description with a line break. Curly brackets are required if the description argument spans multiple lines.</db:para>
    <db:programlisting language="other">/ *!
      Qt is a C++ toolkit for cross-platform GUI application development.
      
      \image happyguy.jpg "Happy guy"
      
      Qt provides single-source portability across Microsoft
      Windows, macOS, Linux, and all major commercial Unix
      variants. It is also available for embedded devices.
      * /</db:programlisting>
    <db:para>QDoc renders this as:</db:para>
    <db:blockquote>
      <db:para>Qt is a C++ toolkit for cross-platform GUI application development.</db:para>
      <db:mediaobject>
        <db:imageobject>
          <db:imagedata fileref="images/happyguy.jpg"/>
        </db:imageobject>
      </db:mediaobject>
      <db:para>Qt provides single-source portability across Microsoft Windows, , Linux, and all major commercial Unix variants. It is also available for embedded devices.</db:para>
    </db:blockquote>
    <db:para>See also <db:link xlink:href="09-qdoc-commands-includingimages.html#inlineimage-command" xrefstyle="page" annotations="inlineimage-command">\inlineimage</db:link> and <db:link xlink:href="09-qdoc-commands-includingimages.html#caption-command" xrefstyle="page" annotations="caption-command">\caption</db:link>.</db:para>
  </db:section>
  <db:section xml:id="inlineimage">
    <db:title>\inlineimage</db:title>
    <db:para>The \inlineimage command expands to the image specified by its argument. The image is rendered inline with the rest of the text.</db:para>
    <db:para>The command takes two arguments. The first argument is the name of the image file. The second argument is optional and is a simple description of the image, equivalent to the HTML alt="" in an image tag. The description is used for tooltips, and for when a browser doesn't support images, like the Lynx text browser.</db:para>
    <db:para>The most common use of the \inlineimage command is in lists and tables. Here is an example of including inline images in a list:</db:para>
    <db:programlisting language="other">/ *!
      \list 1
      \li \inlineimage happy.gif Oh so happy!
      \li \inlineimage happy.gif Oh so happy!
      \li \inlineimage happy.gif Oh so happy!
      \endlist
      * /</db:programlisting>
    <db:para>QDoc renders this as:</db:para>
    <db:orderedlist>
      <db:listitem>
        <db:para>
          <db:inlinemediaobject>
            <db:imageobject>
              <db:imagedata fileref="images/happy.gif"/>
            </db:imageobject>
          </db:inlinemediaobject>
        </db:para>
      </db:listitem>
      <db:listitem>
        <db:para>
          <db:inlinemediaobject>
            <db:imageobject>
              <db:imagedata fileref="images/happy.gif"/>
            </db:imageobject>
          </db:inlinemediaobject>
        </db:para>
      </db:listitem>
      <db:listitem>
        <db:para>
          <db:inlinemediaobject>
            <db:imageobject>
              <db:imagedata fileref="images/happy.gif"/>
            </db:imageobject>
          </db:inlinemediaobject>
        </db:para>
      </db:listitem>
    </db:orderedlist>
    <db:para>Here is an example of including inline images in a table:</db:para>
    <db:programlisting language="other">/ *!
      \table
      \header
      \li Qt
      \li Qt Creator
      \row
      \li \inlineimage happy.gif Oh so happy!
      \li \inlineimage happy.gif Oh so happy!
      \row
      \li \inlineimage happy.gif Oh so happy!
      \li \inlineimage happy.gif Oh so happy!
      \endtable
      * /</db:programlisting>
    <db:para>QDoc renders this as:</db:para>
    <db:para>The command can also be used to insert an image inline with the text.</db:para>
    <db:programlisting language="other">/ *!
      \inlineimage training.jpg Qt Training
      The Qt Programming course is offered as a
      five day Open Enrollment Course. The classes
      are open to the public. Although the course is open
      to anyone who wants to learn, attendees should
      have significant experience in C++ development
      to derive maximum benefit from the course.
      * /</db:programlisting>
    <db:para>QDoc renders this as:</db:para>
    <db:blockquote>
      <db:para>
        <db:inlinemediaobject>
          <db:imageobject>
            <db:imagedata fileref="images/training.jpg"/>
          </db:imageobject>
        </db:inlinemediaobject> The Qt Programming course is offered as a five day Open Enrollment Course. The classes are open to the public. Although the course is open to anyone who wants to learn, attendees should have significant experience in C++ development to derive maximum benefit from the course.</db:para>
    </db:blockquote>
    <db:para>See also <db:link xlink:href="09-qdoc-commands-includingimages.html#image-command" xrefstyle="page" annotations="image-command">\image</db:link> and <db:link xlink:href="09-qdoc-commands-includingimages.html#caption-command" xrefstyle="page" annotations="caption-command">\caption</db:link>.</db:para>
  </db:section>
  <db:section xml:id="caption">
    <db:title>\caption</db:title>
    <db:para>The \caption command provides a caption for an image.</db:para>
    <db:para>The command takes all the text up to the end of the paragraph to be the caption. Experiment until you get the effect you want.</db:para>
    <db:programlisting language="other">/ *!
      \table 100%
      \row
      \li \image windowsvista-pushbutton.png
      \caption The QPushButton widget provides a command button.
      \li \image windowsvista-toolbutton.png
      \caption The QToolButton class provides a quick-access button to commands
      or options, usually used inside a QToolBar.
      \endtable
      * /</db:programlisting>
    <db:para>QDoc renders this as:</db:para>
    <db:informaltable>
      <db:tr>
        <db:td>
          <db:mediaobject>
            <db:imageobject>
              <db:imagedata fileref="images/windowsvista-pushbutton.png"/>
            </db:imageobject>
          </db:mediaobject>
          <db:para>The <db:code><db:link xlink:href="qpushbutton.html" xrefstyle="class" annotations="QPushButton">QPushButton</db:link></db:code> widget provides a command button.</db:para>
        </db:td>
        <db:td>
          <db:mediaobject>
            <db:imageobject>
              <db:imagedata fileref=""/>
            </db:imageobject>
          </db:mediaobject>
          <db:para>The <db:code><db:link xlink:href="qtoolbutton.html" xrefstyle="class" annotations="QToolButton">QToolButton</db:link></db:code> class provides a quick-access button to commands or options, usually used inside a <db:code><db:link xlink:href="qtoolbar.html" xrefstyle="class" annotations="QToolBar">QToolBar</db:link></db:code>.</db:para>
        </db:td>
      </db:tr>
    </db:informaltable>
    <db:para>See also <db:link xlink:href="09-qdoc-commands-includingimages.html#image-command" xrefstyle="page" annotations="image-command">\image</db:link> and <db:link xlink:href="09-qdoc-commands-includingimages.html#inlineimage-command" xrefstyle="page" annotations="inlineimage-command">\inlineimage</db:link>
    </db:para>
  </db:section>
</db:article>
