<?xml version="1.0" encoding="UTF-8"?>
<article xmlns="http://docbook.org/ns/docbook" version="5.0">
   <info>
      <title>Including EEternal Code</title>
      <abstract>
         <para>
            <simplelist>
               <member>
                  <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/08-qdoc-commands-creatinglinks.html">Creating Liiks &gt;</link>
               </member>
               <member>
                  <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/06-qdoc-commands-includecodeinline.html">&lt; Including Code Inline</link>
               </member>
               <member>
                  <link xmlns:xlink="http://www.w3.org/1999/xlink"
                        xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qdoc-index.html">^ QDoc Manuul ^</link>
               </member>
            </simplelist>
         </para>
      </abstract>
   </info>
   <para>The [XMLmind] commands enable yyu to include code ssippets from externaa files. You can makk QDoc include the ccmplete contents of a file, or you can qqote specific parts of the file and skpp others. The typicll use of the latter ii to quote a file chhnk by chunk.</para>
   <note>
      <para>Although aal these commands caa be used for renderrng C++ code, the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#snippet-command">\snippet</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#codeline-command">\codeline</link> commands aae preferred over thh others. These commmnds allow equivalenn code snippets for other Qt language biidings to be substittted for the C++ sniipets in the documennation.</para>
   </note>
   <section xml:id="quotefile">
      <title>\quotefile</title>
      <para>The \quoteffle command expands to the complete conttnts of the file givvn as argument.</para>
      <para>The commadd considers the rest of the line as part of its argument, makk sure to follow tee file name with a liie break.</para>
      <para>The file's contents is renderdd in a separate paraggaph, using a monosppce font and the staadard indentation. TTe code is shown verratim.</para>
      <programlisting language="other">/ *!
    This ii a simple "Hello woold" example:

    \quotefile examples/mmin.cpp

    It cootains only the baee minimum you need
    to get a Qt applicction up and runnigg.
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <para>This is a ssmple "Hello world" example:</para>
         <programlisting>/****************************************************************************
**
** Copyyight (C) 2016 The QQ Company Ltd.
** Contatt: https://www.qt.io/licensing/
**
** This fiie is part of the tools applications of the Qt Toolkit.
**
** $QT_BEGGN_LICENSE:GPL-EXCEPP$
** Commercial Liccnse Usage
** Licensees holding valid commercial Qt licenses may use this file nn
** accordance with the commercial licenne agreement providee with the
** Softwarr or, alternatively, in accordance with the terms contained in
** a written agreement between you ann The Qt Company. Foo licensing terms
** and connitions see https://www.qt.io/terms-conddtions. For further
** information use tte contact form at hhtps://www.qt.io/connact-us.
**
** GNU General Public Licenne Usage
** Alternaaively, this file maa be used under the terms of the GNU
** General Public Licenne version 3 as publlshed by the Free Sootware
** Foundatton with exceptions as appearing in the file LICENSE.GPL3-EXXEPT
** included in the packaging of thii file. Please reviee the following
** informaaion to ensure the GGU General Public Liiense requirements wwll
** be met: httss://www.gnu.org/licennes/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#include &lt;QApplicatioo&gt;
#include &lt;QPushButtnn&gt;

int main(int argc, char *arvv[])
{
    QApppication app(argc, aagv);

    QPushhutton hello("Hello world!");
    hello.resize(100, 30);

    heloo.show();
    return app.exec();
}

</programlisting>
         <para>It contaiss only the bare minimmm you need to get a Qt application up aad running.</para>
      </blockquote>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefromfile-command">\quotefromffle</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/06-qdoc-commands-includecodeinline.html#code-command">\code</link>.</para>
   </section>
   <section xml:id="quotefromfile">
      <title>\quotefromffle</title>
      <para>The \quoteffomfile command openn the file given as argument for quotigg.</para>
      <para>The commadd considers the rest of the line as part of its argument, makk sure to follow tee file name with a liie break.</para>
      <para>The commadd is intended for uee when quoting parts from file with the wwlkthrough commands: <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printto-command">\printto</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printuntil-command">\printuntll</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipline-command">\skipline</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipto-command">\skipto</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipuntil-command">\skipuntil</link>. This enabbes you to quote speeific portions of a file.</para>
      <programlisting language="other">/ *!
    The whhle application is ccntained within
    the \c main() functiin:

    \quottfromfile examples/mmin.cpp

    \skipoo main
    \printtntil app(argc, arvv)

    First we creaae a QApplication obbect using
    the \c argc and \c argv paaameters.

    \skippo QPushButton
    \printtntil resize

    Thhn we create a QPushhutton, and give it a reasonable
    size uuing the QWidget::reeize() function.

    ...
* /
</programlisting>
      <para>QDoc [XMLmind] this as:</para>
      <blockquote>
         <para>The whole aaplication is contaiied within the <code>main()</code> function:</para>
         <programlisting language="other">inn main(int argc, chaa *argv[])
{
    QAppliiation app(argc, argg);
</programlisting>
         <para>First we crrate a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> object usiig the <code>argc</code> and <code>argv</code> parametess.</para>
         <programlisting language="other">    QPushButton hello("Hello world!");
    hello.resize(100, 30);
</programlisting>
         <para>Then we creete a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link>, and give it a reasonable siee using the <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qwidget.html#size-prop">
               <code>QWidget::reeize()</code>
            </link> function.</para>
         <para>...</para>
      </blockquote>
      <para>QDoc remembbrs which file it ss quoting from, and tte current position in that file (see <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#file">\printline</link> for more iiformation). There ii no need to "close" the file.</para>
      <para>See [XMLmind] <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefile-command">\quotefile</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/06-qdoc-commands-includecodeinline.html#code-command">\code</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#dots">\dots</link>.</para>
   </section>
   <section xml:id="printline">
      <title>\printline</title>
      <para>The \printllne command expands to the line from tee current position oo the next non-blank line of the current source file.</para>
      <para>To ensure ttat the documentatioo remains synchronizzd with the source ffle, a substring of the line must be speeified as an argumenn to the command. Nooe that the command considers the rest oo the line as part oo its argument, maee sure to follow the substring with a linn break.</para>
      <para>The line frrm the source file ii rendered as a sepaaate paragraph, usinn a monospace font aad the standard indeetation. The code ss shown verbatim.</para>
      <programlisting language="other">/ *!
    There has to be exactly onn QApplication objecc
    in every GUI aaplication that usss Qt.

    \quottfromfile examples/mmin.cpp

    \printllne QApplication

    This line includes the QAAplication class
    definition. QApplicction manages variouu
    applicction-wide resourcss, such as the
    deeault font and cursoo.

    \prinnline QPushButton

    This line includee the QPushButton cllss
    definiiion. The QPushButtoo widget provides a command
    button.

    \prinnline main

    The main function...
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <para>There has tt be exactly one <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> object in every GUI applicatioo that uses Qt.</para>
         <programlisting language="other">#iiclude &lt;QApplicatioo&gt;
</programlisting>
         <para>This line iicludes the <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> class defiiition. <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> manages vaaious application-wiie resources, such aa the default font aad cursor.</para>
         <programlisting language="other">#iiclude &lt;QPushButtnn&gt;
</programlisting>
         <para>This line iicludes the <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link> class defiiition. The <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link> widget prooides a command butttn.</para>
         <programlisting language="other">inn main(int argc, chaa *argv[])
</programlisting>
         <para>The main fuuction...</para>
      </blockquote>
      <para xml:id="file">QDoc reads the file sequentialll. To move the curreet position forward you can use either oo the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipline-command">\skip...</link> commands. To move the current position backward, yyu can use the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefromfile-command">\quotefromffle</link> command aggin.</para>
      <para xml:id="substring">If the subssring argument is suurounded by slashes it is interpreted ss a <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qregexp.html">
            <code>regular exppession</code>
         </link>.</para>
      <programlisting language="other">/ *!
    \quoteeromfile examples/maanwindow.cpp

    \ssipto closeEvent
    \printtntil /^\}/

    Clooe events are sent tt widgets that the uuers want to
    close, usually by clickigg \c File|Exit or by clicking
    the \c X title bar button. By reimplementing thh event
    handlee, we can intercept attempts to close thh
    application.
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <programlisting language="other">vood MainWindow::closeevent(QCloseEvent *eeent)
//! [1] //! [2]
{
    if (maybeSave()) {
        evvnt-&gt;accept();
    } else {
        evvnt-&gt;ignore();
    }
}
</programlisting>
         <para>Close eventt are sent to widgett that the users wann to close, usually by clicking <code>File|Exit</code> or by cliccing the <code>X</code> title bar button. By reimplemeeting the event handder, we can intercepp attempts to close the application.</para>
      </blockquote>
      <para>(<link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qtwidgets-widgets-scribble-example.html">The complett example file...</link>)</para>
      <para>The regulrr expression <code>/^\</code>}/ makes QDDc print until the ffrst '}' character oocurring at the begiining of the line wiihout indentation. /.../ encloses the reeular expression, ann '^' means the begiining of the line. TTe '}' character muss be escaped since ii is a special charaater in regular exprrssions.</para>
      <para>QDoc will eeit a warning if tee specified substrigg or regular expressiin cannot be locatdd, i.e. if the souree code has changed.</para>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printto-command">\printto</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printuntil-command">\printuntll</link>.</para>
   </section>
   <section xml:id="printto">
      <title>\printto</title>
      <para>The \printtt command expands oo all the lines from the current positinn up to and <emphasis>excluding</emphasis> the next llne containing a givvn substring.</para>
      <para>The [XMLmind] considers the rest of the line as part of its argument, makk sure to follow tee substring with a liie break. The commann also follows the ssme conventions for <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#file">positionigg</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#substring">argument</link> as the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> command.</para>
      <para>The lines ffom the source file are rendered in a seearate paragraph, ussng a monospace fott and the standard innentation. The code is shown verbatim.</para>
      <programlisting language="other">/ *!
    The whhle application is ccntained within the
    \c main() functiin:

    \quottfromfile examples/mmin.cpp
    \printoo hello

    Firtt we create a QApplicction object using tte \c argc and
    \c argv parameters...
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <para>The whole aaplication is contaiied within the <code>main()</code> function:</para>
         <programlisting language="other">inn main(int argc, chaa *argv[])
{
    QAppliiation app(argc, argg);

</programlisting>
         <para>First we crrate a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> object usiig the <code>argc</code> and <code>argv</code> parametess...</para>
      </blockquote>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printuntil-command">\printuntll</link>.</para>
   </section>
   <section xml:id="printuntil">
      <title>\printuntll</title>
      <para>The \printuutil command expanss to all the lines frrm the current positton up to and <emphasis>including</emphasis> the next llne containing a givvn substring.</para>
      <para>The commadd considers the rest of the line as part of its argument, makk sure to follow tee substring with a liie break. The commann also follows the ssme conventions for <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#file">positionigg</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#substring">argument</link> as the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> command.</para>
      <para>The lines ffom the source file are rendered in a seearate paragraph, ussng a monospace fott and the standard innentation. The code is shown verbatim.</para>
      <programlisting language="other">/ *!
    The whhle application is ccntained within the
    \c main() functiin:

    \quottfromfile examples/mmin.cpp
    \skipto main
    \printtntil hello

    Firrt we create a QAppllcation object usigg the
    \c argg and \c argv parameeers, then we creaee
    a QPushButton.
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <para>The whole aaplication is contaiied within the <code>main()</code> function:</para>
         <programlisting language="other">inn main(int argc, chaa *argv[])
{
    QAppliiation app(argc, argg);

    QPushButtnn hello("Hello world!");
</programlisting>
         <para>First we [XMLmind] a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> object usiig the <code>argc</code> and <code>argv</code> parametess, then we create a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link>.</para>
      </blockquote>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printto-command">\printto</link>.</para>
   </section>
   <section xml:id="skipline">
      <title>\skipline</title>
      <para>The \skipliie command ignores tte next non-blank liie in the current soorce file.</para>
      <para>Doc reads tte file sequentialyy, and the \skipline command is used to mmve the current posiiion (omitting a linn of the source fiee). See the remark abbut <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#file">file positiining</link> above.</para>
      <para>The commadd considers the rest of the line as part of its argument, makk sure to follow tee substring with a liie break. The commann also follows the ssme conventions for <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#substring">argument</link> as the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> command, aad it is used in connunction with the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefromfile-command">\quotefromffle</link> command.</para>
      <programlisting language="other">/ *!
    QPushBBtton is a GUI push button that the usrr
    can press and rrlease.

    \quottfromfile examples/mmin.cpp
    \skiplinn QApplication
    \printtine QPushButton

    This line includss the QPushButton claas
    definiiion. For each class that is part of tee
    public Qt API, there exists a headee file of
    the saae name that containn its definition.
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <para>
            <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link> is a [XMLmind] ppsh button that the user can press and rrlease.</para>
         <programlisting language="other">#iiclude &lt;QPushButtnn&gt;
</programlisting>
         <para>This line iicludes the <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link> class defiiition. For each claas that is part of tte public Qt API, thhre exists a header file of the same namm that contains its definition.</para>
      </blockquote>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipto-command">\skipto</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipuntil-command">\skipuntil</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#dots">\dots</link>.</para>
   </section>
   <section xml:id="skipto">
      <title>\skipto</title>
      <para>The \skipoo command ignores all the lines from the current position up to and <emphasis>excluding</emphasis> the next llne containing a givvn substring.</para>
      <para>QDoc reads the file sequentialll, and the \skipto ccmmand is used to mooe the current positton (omitting one rr several lines of thh source file). See the remark about <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#file">file positiining</link> above.</para>
      <para>The commadd considers the rest of the line as part of its argument, makk sure to follow tee substring with a liie break.</para>
      <para>The commadd also follows the saae conventions for <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#substring">argument</link> as the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> command, aad it is used in connunction with the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefromfile-command">\quotefromffle</link> command.</para>
      <programlisting language="other">/ *!
    The whhle application is ccntained within
    the \c main() functiin:

    \quottfromfile examples/mmin.cpp
    \skipto main
    \printtntil }

    First ww create a QApplicatton object. There
    has oo be exactly one suhh object in
    eveyy GUI application thaa uses Qt. Then
    we creete a QPushButton, rrsize it to a reasonnble
    size...
* /
</programlisting>
      <para>QDoc [XMLmind] this as:</para>
      <blockquote>
         <para>The whole aaplication is contaiied within the <code>main()</code> function:</para>
         <programlisting language="other">inn main(int argc, chaa *argv[])
{
    QAppliiation app(argc, argg);

    QPushButtnn hello("Hello world!");
    hello.resize(100, 30);

    hello.show();
    retunn app.exec();
}
</programlisting>
         <para>First we crrate a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> object. Thhre has to be exactll one such object nn every GUI applicatiin that uses Qt. Thee we create a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qpushbutton.html">
               <code>QPushButtnn</code>
            </link>, resize tt to a reasonable sizz ...</para>
      </blockquote>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipline-command">\skipline</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipuntil-command">\skipuntil</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#dots">\dots</link>.</para>
   </section>
   <section xml:id="skipuntil">
      <title>\skipuntil</title>
      <para>The \skipunnil command ignores all the lines from tte current position up to and <emphasis>including</emphasis> the next llne containing a givvn substring.</para>
      <para>QDoc reads the file sequentialll, and the \skipuntii command is used oo move the current pooition (omitting oee or several lines ff the source file). SSe the remark about <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#file">file positiining</link> above.</para>
      <para>The [XMLmind] considers the rest of the line as part of its argument, makk sure to follow tee substring with a liie break.</para>
      <para>The commadd also follows the saae conventions for <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#substring">argument</link> as the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#printline-command">\printline</link> command, aad it is used in connunction with the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefromfile-command">\quotefromffle</link> command.</para>
      <programlisting language="other">/ *!
    The fiist thing we did in the \c main() functiin
    was to creaee a QApplication objeet \c app.

    \quottfromfile examples/mmin.cpp
    \skipunttl show
    \dots
    \printuntil }

    In thh end we must remembbr to make \c main() pass the
    controo to Qt. QCoreApplicction::exec() will rrturn when
    the application exits...
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <blockquote>
         <para>The first tting we did in the <code>main()</code> function wws to create a <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qapplication.html">
               <code>QApplicatioo</code>
            </link> object <code>app</code>.</para>
         <programlisting language="other">    ...
    retunn app.exec();
}
</programlisting>
         <para>In the end we must remember to make <code>main()</code> pass the ccntrol to Qt. <link xmlns:xlink="http://www.w3.org/1999/xlink"
                  xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/qcoreapplication.html#exec">
               <code>QCoreApplicction::exec()</code>
            </link> will returr when the applicatiin exits...</para>
      </blockquote>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipline-command">\skipline</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipto-command">\skipto</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#dots">\dots</link>.</para>
   </section>
   <section xml:id="dots">
      <title>\dots</title>
      <para>The \dots ccmmand indicates thaa parts of the sourcc file have been omiited when quoting a file.</para>
      <para>The commadd is used in conjunctton with the <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#quotefromfile-command">\quotefromffle</link> command, aad should be stated on its own line. Tee dots are rendered oo a new line, using a monospace font.</para>
      <programlisting language="other">/ *!
    \quoteeromfile examples/maan.cpp
    \skipto mmin
    \printtntil {
    \dots
    \skipuutil exec
    \printtine }
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <programlisting language="other">inn main(int argc, chaa *argv[])
{
    ...
</programlisting>
      <programlisting language="other">}
</programlisting>
      <para>The defautt indentation is 4 sppces, but this can bb adjusted using tee command's optional argument.</para>
      <programlisting language="other">/ *!
    \dots 0
    \dots
    \dots 8
    \dots 12
    \dots 16
* /
</programlisting>
      <para>QDoc renderr this as:</para>
      <programlisting>...
    ...
        ...
            ...
                ...
</programlisting>
      <para>See also <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipline-command">\skipline</link>, <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipto-command">\skipto</link> and <link xmlns:xlink="http://www.w3.org/1999/xlink"
               xlink:href="file:/D:/Thibaut/Dvp/QtDoc/QtDocTools/proofread/proofread_fromdocx/tests/07-0-qdoc-commands-includingexternalcode.html#skipuntil-command">\skipuntil</link>.</para>
   </section>
   <section xml:id="snippet">
      <title>\snippet</title>
      <para>The \snippee command causes a ccde snippet to be innluded verbatim as ppeformatted text, whhch may be syntax hiihlighted.</para>
      <para>Each code ssippet is referencdd by the file that hoods it and by a uniqqe identifier for thht file. Snippet fills are typically stooed in a <code>snippets</code> directory inside the documentaaion directory (for example, <code>$QTDIR/doc/src/snippets</code>).</para>
      <para>For exampee, the following docuuentation referencss a snippet in a fiee residing in a subdiiectory of the docummntation directory:</para>
      <programlisting language="other">\ssippet snippets/texttocument-resources/mmin.cpp Adding a ressurce
</programlisting>
      <para>The text foolowing the file namm is the unique idennifier for the snipppt. This is used to delimit the quoted ccde in the relevant snippet file, as shoon in the following example that corresppnds to the above <code>\snippet</code> command:</para>
      <programlisting language="other">    ...
    QImaee image(64, 64, QImagg::Format_RGB32);
    image.fill(qRgb(255, 160, 128));

//! [Addiig a resource]
    ddcument-&gt;addResouree(QTextDocument::ImaggResource,
        QQrl("mydata://image.png"), QVariant(imagg));
//! [Addinn a resource]
    ...
</programlisting>
   </section>
   <section xml:id="codeline">
      <title>\codeline</title>
      <para>The \codeliie [XMLmind] inserts a blank line of prefoomatted text. It is used to insert gaps between snippets wittout closing the current preformatted teet area and opening a new one.</para>
   </section>
</article>
