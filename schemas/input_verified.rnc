namespace html = "http://www.w3.org/1999/xhtml"
namespace s = "http://www.ascc.net/xml/schematron"


## Root. 
start =
    element html:html {
        attribute lang { xsd:NCName },
        element html:head {
            element html:meta {
                # Ignored for the transformation. 
                attribute content { text },
                attribute http-equiv { xsd:NCName }
            },
            element html:title { text },
            element html:link {
                # Ignored for the transformation. 
                attribute href { text },
                attribute rel { xsd:NCName },
                attribute type { text }
            }
        },
        element html:body {
            # qtdocheader (partly used) then footer. 
            qdocheaderdiv,
            element html:div {
                # Ignored for the transformation.
                attribute class { "footer" },
                p
            }
        }
    }

## Base elements.
block = p | pre | ul | table
anchor =
    element html:a {
        attribute name { text }
    }
table =
    element html:div {
        attribute class { "table" },
        html_table
    }
# Titles. 
h_html =
    attribute id { text }?,
    text
h6_html = element html:h6 { h_html }
h5_html = element html:h5 { h_html }
h4_html = element html:h4 { h_html }
h3_html = element html:h3 { h_html }
h2_html = element html:h2 { h_html }
h6 = anchor, h6_html, block*
h5 = anchor, h5_html, block*, h6*
h4 = anchor, h4_html, block*, h5*
h3 = anchor, h3_html, block*, h4*
h2 = anchor, h2_html, block*, h3*

## Main parts of the content. 
qdocheaderdiv =
    element html:div {
        attribute class { "header" },
        attribute id { "qtdocheader" },
        element html:div {
            attribute class { "main" },
            element html:div {
                # Ignored for the transformation. 
                attribute class { "main-rounded" },
                \div+
            },
            element html:div {
                attribute class { "content" },
                element html:div {
                    attribute class { "line" },
                    element html:div {
                        attribute class { "content mainContent" },
                        element html:div {
                            # Ignored for the transformation. 
                            attribute class { "sidebar" },
                            \div+
                        },
                        # Title and subtitle. 
                        element html:h1 {
                            attribute class { "title" },
                            text
                        },
                        element html:span {
                            attribute class { "subtitle" },
                            text
                        }?,
                        
                        ## Actual content. 
                        ## For class pages, first a brief description, then summary tables (whose order is important). 
                        (class_brief,
                         class_summary,
                         # @TODO: check whether those files exist (unparsed-text-available() or document-available()). 
                         class_relatedFiles?,
                         class_types?,
                         class_funcs,
                         class_statics?,
                         class_nonmems?)?,
                        
                        ## Then the main description. 
                        description,
                        seealso?,
                        \div*
                    }
                }
            }
        }
    }
# Class summary. 
class_brief = p
class_relatedFiles = ul
class_summary =
    element html:div {
        attribute class { "table" },
        element html:table {
            attribute class { "alignedsummary" },
            element html:tbody {
                # In this order: header to include, qmake addition, first availability. 
                tr,
                tr,
                tr?
            }
        }
    }
class_types =
    element html:a {
        attribute name { "public-types" }
    },
    element html:h2 {
        attribute id { "public-types" },
        "Public Types"
    },
    class_sub_divtable
class_funcs =
    element html:a {
        attribute name { "public-functions" }
    },
    element html:h2 {
        attribute id { "public-functions" },
        "Public Functions"
    },
    class_sub_divtable
class_statics =
    element html:a {
        attribute name { "static-public-members" }
    },
    element html:h2 {
        attribute id { "static-public-members" },
        "Static Public Members"
    },
    class_sub_divtable
class_nonmems =
    element html:a {
        attribute name { "related-non-members" }
    },
    element html:h2 {
        attribute id { "related-non-members" },
        "Related Non-Members"
    },
    class_sub_divtable
class_sub_divtable =
    element html:div {
        attribute class { "table" },
        element html:table {
            attribute class { "alignedsummary" },
            element html:tbody { tr+ }
        }
    }
# Textual description (only content for concept pages, after a title for class pages -- 
# and the anchor comes before the <div> for classes, but after it for concepts). 
description = description_class | description_concept
description_class = 
    element html:a {
        attribute name { "details" }
    },
    element html:div {
        attribute class { "descr" },
        element html:h2 {
            attribute id { "details" }, 
            "Detailed Description"
        }, 
        block*, 
        h3*
    }
description_concept =
    element html:div {
        attribute class { "descr" },
        element html:a {
            attribute name { "details" } 
        }, 
        block+,
        h2*
    }
# "See also" list of links.  
seealso =
    element html:p {
        element html:b { "See also " },
        (seealso_link | text)+
    }
seealso_link =
    element html:a {
        attribute href { text },
        text
    }

## HTML details. 
\div =
    element html:div {
        attribute class { text },
        attribute id { xsd:NCName }?,
        (element html:h1 {
             attribute class { xsd:NCName },
             text
         }?
         | span?
         | a
         | \div
         | p
         | pre
         | ul
         | element html:h2 {
               attribute id { xsd:NCName }?,
               text
           }
         | element html:h3 {
               attribute class { xsd:NCName }?,
               attribute id { xsd:NCName }?,
               (text | a | br | code | i | span)+
           }
         | html_table?)*
    }
html_table =
    element html:table {
        attribute class { xsd:NCName },
        element html:thead { tr }?,
        element html:tbody { tr+ }
    }
span =
    element html:span {
        attribute class { xsd:NCName },
        (text | a)+
    }
ul =
    element html:ul {
        element html:li {
            attribute class { xsd:NCName }?,
            attribute id { xsd:NCName }?,
            (text | a | code | i | p | ul)+
        }*
    }
a =
    element html:a {
        attribute href { xsd:anyURI }?,
        attribute name { xsd:NCName }?,
        xsd:anyURI
    }
br = element html:br { empty }
code = element html:code { text }
i = element html:i { xsd:NCName }
p =
    element html:p {
        attribute class { xsd:NCName }?,
        (text
         | a
         | b
         | br
         | code
         | i
         | img
         | element html:acronym {
               attribute title { xsd:NCName },
               text
           })+
    }
pre =
    element html:pre {
        attribute class { xsd:NCName },
        (text | span)+
    }
tr =
    element html:tr {
        attribute class { text }?,
        attribute valign { xsd:NCName }?,
        (element html:th {
             attribute class { xsd:NCName }?,
             xsd:NCName
         }+
         | element html:td {
               attribute class { text }?,
               attribute rowspan { xsd:integer }?,
               (text | b | code | i | img | p | pre | span)+
           }+)
    }
img =
    element html:img {
        attribute alt { text },
        attribute src { text }
    }
b = element html:b { (text | a)+ }
