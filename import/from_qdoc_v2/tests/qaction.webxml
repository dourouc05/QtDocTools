<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <class threadsafety="unspecified" name="QAction" href="qaction.html" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="60" bases="QObject" module="QtWidgets" groups="mainwindow-classes" brief="Abstract user interface action that can be inserted into widgets">
            <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="189" column="4">
                <brief>The <link raw="QAction" href="qaction.html" type="class">QAction</link> class provides an abstract user interface action that can be inserted into widgets.</brief>
                <para>In applications many common commands can be invoked via menus, toolbar buttons, and keyboard shortcuts. Since the user expects each command to be performed in the same way, regardless of the user interface used, it is useful to represent each command as an <italic>action</italic>.</para>
                <para>Actions can be added to menus and toolbars, and will automatically keep them in sync. For example, in a word processor, if the user presses a Bold toolbar button, the Bold menu item will automatically be checked.</para>
                <para>Actions can be created as independent objects, but they may also be created during the construction of menus; the <link raw="QMenu" href="qmenu.html" type="class">QMenu</link> class contains convenience functions for creating actions suitable for use as menu items.</para>
                <para>A <link raw="QAction" href="qaction.html" type="class">QAction</link> may contain an icon, menu text, a shortcut, status text, &quot;What's This?&quot; text, and a tooltip. Most of these can be set in the constructor. They can also be set independently with <link raw="setIcon()" href="qaction.html#icon-prop" type="function">setIcon()</link>, <link raw="setText()" href="qaction.html#text-prop" type="function">setText()</link>, <link raw="setIconText()" href="qaction.html#iconText-prop" type="function">setIconText()</link>, <link raw="setShortcut()" href="qaction.html#shortcut-prop" type="function">setShortcut()</link>, <link raw="setStatusTip()" href="qaction.html#statusTip-prop" type="function">setStatusTip()</link>, <link raw="setWhatsThis()" href="qaction.html#whatsThis-prop" type="function">setWhatsThis()</link>, and <link raw="setToolTip()" href="qaction.html#toolTip-prop" type="function">setToolTip()</link>. For menu items, it is possible to set an individual font with <link raw="setFont()" href="qaction.html#font-prop" type="function">setFont()</link>.</para>
                <para>Actions are added to widgets using <link raw="QWidget::addAction()" href="qwidget.html#addAction" type="function">QWidget::addAction()</link> or <link raw="QGraphicsWidget::addAction()" href="qgraphicswidget.html#addAction" type="function">QGraphicsWidget::addAction()</link>. Note that an action must be added to a widget before it can be used; this is also true when the shortcut should be global (i.e., <link raw="Qt::ApplicationShortcut" href="qt.html#ShortcutContext-enum" type="enum" enum="Qt::ShortcutContext">Qt::ApplicationShortcut</link> as <link raw="Qt::ShortcutContext" href="qt.html#ShortcutContext-enum" type="enum" enum="Qt::ShortcutContext">Qt::ShortcutContext</link>).</para>
                <para>Once a <link raw="QAction" href="qaction.html" type="class">QAction</link> has been created it should be added to the relevant menu and toolbar, then connected to the slot which will perform the action. For example:</para>
                <snippet location="mainwindows/application/mainwindow.cpp" path="C:/Qt/5.11.1/Src/qtbase/examples/widgets/mainwindows/application/mainwindow.cpp" identifier="19"/>
                <codeline> </codeline>
                <para>We recommend that actions are created as children of the window they are used in. In most cases actions will be children of the application's main window.</para>
                <see-also>
                    <link raw="QMenu" href="qmenu.html" type="class">QMenu</link>
                    <link raw="QToolBar" href="qtoolbar.html" type="class">QToolBar</link>
                    <link raw="Application Example" href="qtwidgets-mainwindows-application-example.html" type="page" page="Application Example">Application Example</link>
                </see-also>
            </description>
            <variable threadsafety="unspecified" name="staticMetaObject" fullname="QAction::staticMetaObject" href="qaction.html#staticMetaObject-var" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" type="const QMetaObject" static="true">
                <description path="" line="0" column="0"/>
            </variable>
            <function threadsafety="unspecified" name="metaObject" fullname="QAction::metaObject" href="qaction.html#metaObject" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * metaObject() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_metacast" fullname="QAction::qt_metacast" href="qaction.html#qt_metacast" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * qt_metacast(const char *)">
                <parameter type="const char *" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_metacall" fullname="QAction::qt_metacall" href="qaction.html#qt_metacall" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int qt_metacall(QMetaObject::Call , int , void **)">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="tr" fullname="QAction::tr" href="qaction.html#tr" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString tr(const char *s, const char *c, int n)">
                <parameter type="const char *" name="s" default=""/>
                <parameter type="const char *" name="c" default="Q_OBJECT"/>
                <parameter type="int" name="n" default="Q_OBJECT"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="trUtf8" fullname="QAction::trUtf8" href="qaction.html#trUtf8" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString trUtf8(const char *s, const char *c, int n)">
                <parameter type="const char *" name="s" default=""/>
                <parameter type="const char *" name="c" default="Q_OBJECT"/>
                <parameter type="int" name="n" default="Q_OBJECT"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_static_metacall" fullname="QAction::qt_static_metacall" href="qaction.html#qt_static_metacall" status="active" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call , int , void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <class threadsafety="unspecified" name="QPrivateSignal" fullname="QAction::QPrivateSignal" href="qaction-qprivatesignal.html" status="active" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="62">
                <description path="" line="0" column="0"/>
            </class>
            <function threadsafety="unspecified" name="d_func" fullname="QAction::d_func" href="qaction.html#d_func" status="active" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="63" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QActionPrivate *" signature="QActionPrivate * d_func()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="d_func" fullname="QAction::d_func" href="qaction.html#d_func-1" status="active" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="63" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QActionPrivate *" signature="const QActionPrivate * d_func() const">
                <description path="" line="0" column="0"/>
            </function>
            <property threadsafety="unspecified" name="checkable" fullname="QAction::checkable" href="qaction.html#checkable-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="65" type="bool" brief="Whether the action is a checkable action">
                <getter name="isCheckable"/>
                <setter name="setCheckable"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="916" column="4">
                    <brief>This property holds whether the action is a checkable action.</brief>
                    <para>A checkable action is one which has an on/off state. For example, in a word processor, a Bold toolbar button may be either on or off. An action which is not a toggle action is a command action; a command action is simply executed, e.g. file save. By default, this property is <teletype type="highlighted">false</teletype>.</para>
                    <para>In some situations, the state of one toggle action should depend on the state of others. For example, &quot;Left Align&quot;, &quot;Center&quot; and &quot;Right Align&quot; toggle actions are mutually exclusive. To achieve exclusive toggling, add the relevant toggle actions to a <link raw="QActionGroup" href="qactiongroup.html" type="class">QActionGroup</link> with the <link raw="QActionGroup::exclusive" href="qactiongroup.html#exclusive-prop" type="property" getter="QActionGroup::isExclusive()">QActionGroup::exclusive</link> property set to true.</para>
                    <see-also>
                        <link raw="QAction::setChecked()" href="qaction.html#checked-prop" type="function">QAction::setChecked()</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="checked" fullname="QAction::checked" href="qaction.html#checked-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="66" type="bool" brief="Whether the action is checked">
                <getter name="isChecked"/>
                <setter name="setChecked"/>
                <notifier name="toggled"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="964" column="4">
                    <brief>This property holds whether the action is checked..</brief>
                    <para>Only checkable actions can be checked. By default, this is false (the action is unchecked).</para>
                    <see-also>
                        <link raw="checkable" href="qaction.html#checkable-prop" type="property" getter="QAction::isCheckable()">checkable</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="enabled" fullname="QAction::enabled" href="qaction.html#enabled-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="67" type="bool" brief="Whether the action is enabled">
                <getter name="isEnabled"/>
                <setter name="setEnabled"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1000" column="4">
                    <brief>This property holds whether the action is enabled.</brief>
                    <para>Disabled actions cannot be chosen by the user. They do not disappear from menus or toolbars, but they are displayed in a way which indicates that they are unavailable. For example, they might be displayed using only shades of gray.</para>
                    <para>What's This? help on disabled actions is still available, provided that the <link raw="QAction::whatsThis" href="qaction.html#whatsThis-prop" type="property" getter="QAction::whatsThis()">QAction::whatsThis</link> property is set.</para>
                    <para>An action will be disabled when all widgets to which it is added (with <link raw="QWidget::addAction()" href="qwidget.html#addAction" type="function">QWidget::addAction()</link>) are disabled or not visible. When an action is disabled, it is not possible to trigger it through its shortcut.</para>
                    <para>By default, this property is <teletype type="highlighted">true</teletype> (actions are enabled).</para>
                    <see-also>
                        <link raw="text" href="qaction.html#text-prop" type="property" getter="QAction::text()">text</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="icon" fullname="QAction::icon" href="qaction.html#icon-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="68" type="QIcon" brief="The action's icon">
                <getter name="icon"/>
                <setter name="setIcon"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="626" column="4">
                    <brief>This property holds the action's icon.</brief>
                    <para>In toolbars, the icon is used as the tool button icon; in menus, it is displayed to the left of the menu text. There is no default icon.</para>
                    <para>If a null icon (<link raw="QIcon::isNull()" href="qicon.html#isNull" type="function">QIcon::isNull()</link>) is passed into this function, the icon of the action is cleared.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="text" fullname="QAction::text" href="qaction.html#text-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="69" type="QString" brief="The action's descriptive text">
                <getter name="text"/>
                <setter name="setText"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="710" column="4">
                    <brief>This property holds the action's descriptive text.</brief>
                    <para>If the action is added to a menu, the menu option will consist of the icon (if there is one), the text, and the shortcut (if there is one). If the text is not explicitly set in the constructor, or by using , the action's description icon text will be used as text. There is no default text.</para>
                    <see-also>
                        <link raw="iconText" href="qaction.html#iconText-prop" type="property" getter="QAction::iconText()">iconText</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="iconText" fullname="QAction::iconText" href="qaction.html#iconText-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="70" type="QString" brief="The action's descriptive icon text">
                <getter name="iconText"/>
                <setter name="setIconText"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="747" column="4">
                    <brief>This property holds the action's descriptive icon text.</brief>
                    <para>If <link raw="QToolBar::toolButtonStyle" href="qtoolbar.html#toolButtonStyle-prop" type="property" getter="QToolBar::toolButtonStyle()">QToolBar::toolButtonStyle</link> is set to a value that permits text to be displayed, the text defined held in this property appears as a label in the relevant tool button.</para>
                    <para>It also serves as the default text in menus and tooltips if the action has not been defined with <link raw="setText()" href="qaction.html#text-prop" type="function">setText()</link> or <link raw="setToolTip()" href="qaction.html#toolTip-prop" type="function">setToolTip()</link>, and will also be used in toolbar buttons if no icon has been defined using <link raw="setIcon()" href="qaction.html#icon-prop" type="function">setIcon()</link>.</para>
                    <para>If the icon text is not explicitly set, the action's normal text will be used for the icon text.</para>
                    <para>By default, this property contains an empty string.</para>
                    <see-also>
                        <link raw="setToolTip()" href="qaction.html#toolTip-prop" type="function">setToolTip()</link>
                        <link raw="setStatusTip()" href="qaction.html#statusTip-prop" type="function">setStatusTip()</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="toolTip" fullname="QAction::toolTip" href="qaction.html#toolTip-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="71" type="QString" brief="The action's tooltip">
                <getter name="toolTip"/>
                <setter name="setToolTip"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="784" column="4">
                    <brief>This property holds the action's tooltip.</brief>
                    <para>This text is used for the tooltip. If no tooltip is specified, the action's text is used.</para>
                    <para>By default, this property contains the action's text.</para>
                    <see-also>
                        <link raw="setStatusTip()" href="qaction.html#statusTip-prop" type="function">setStatusTip()</link>
                        <link raw="setShortcut()" href="qaction.html#shortcut-prop" type="function">setShortcut()</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="statusTip" fullname="QAction::statusTip" href="qaction.html#statusTip-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="72" type="QString" brief="The action's status tip">
                <getter name="statusTip"/>
                <setter name="setStatusTip"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="816" column="4">
                    <brief>This property holds the action's status tip.</brief>
                    <para>The status tip is displayed on all status bars provided by the action's top-level parent widget.</para>
                    <para>By default, this property contains an empty string.</para>
                    <see-also>
                        <link raw="setToolTip()" href="qaction.html#toolTip-prop" type="function">setToolTip()</link>
                        <link raw="showStatusText()" href="qaction.html#showStatusText" type="function">showStatusText()</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="whatsThis" fullname="QAction::whatsThis" href="qaction.html#whatsThis-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="73" type="QString" brief="The action's &quot;What's This?&quot; help text">
                <getter name="whatsThis"/>
                <setter name="setWhatsThis"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="843" column="4">
                    <brief>This property holds the action's &quot;What's This?&quot; help text.</brief>
                    <para>The &quot;What's This?&quot; text is used to provide a brief description of the action. The text may contain rich text. There is no default &quot;What's This?&quot; text.</para>
                    <see-also>
                        <link raw="QWhatsThis" href="qwhatsthis.html" type="class">QWhatsThis</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="font" fullname="QAction::font" href="qaction.html#font-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="74" type="QFont" brief="The action's font">
                <getter name="font"/>
                <setter name="setFont"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="532" column="4">
                    <brief>This property holds the action's font.</brief>
                    <para>The font property is used to render the text set on the <link raw="QAction" href="qaction.html" type="class">QAction</link>. The font will can be considered a hint as it will not be consulted in all cases based upon application and style.</para>
                    <para>By default, this property contains the application's default font.</para>
                    <see-also>
                        <link raw="QAction::setText()" href="qaction.html#text-prop" type="function">QAction::setText()</link>
                        <link raw="QStyle" href="qstyle.html" type="class">QStyle</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="shortcut" fullname="QAction::shortcut" href="qaction.html#shortcut-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="76" type="QKeySequence" brief="The action's primary shortcut key">
                <getter name="shortcut"/>
                <setter name="setShortcut"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="382" column="4">
                    <brief>This property holds the action's primary shortcut key.</brief>
                    <para>Valid keycodes for this property can be found in <link raw="Qt::Key" href="qt.html#Key-enum" type="enum" enum="Qt::Key">Qt::Key</link> and <link raw="Qt::Modifier" href="qt.html#Modifier-enum" type="enum" enum="Qt::Modifier">Qt::Modifier</link>. There is no default shortcut key.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="shortcutContext" fullname="QAction::shortcutContext" href="qaction.html#shortcutContext-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="77" type="Qt::ShortcutContext" brief="The context for the action's shortcut">
                <getter name="shortcutContext"/>
                <setter name="setShortcutContext"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="478" column="4">
                    <brief>This property holds the context for the action's shortcut.</brief>
                    <para>Valid values for this property can be found in <link raw="Qt::ShortcutContext" href="qt.html#ShortcutContext-enum" type="enum" enum="Qt::ShortcutContext">Qt::ShortcutContext</link>. The default value is <link raw="Qt::WindowShortcut" href="qt.html#ShortcutContext-enum" type="enum" enum="Qt::ShortcutContext">Qt::WindowShortcut</link>.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="autoRepeat" fullname="QAction::autoRepeat" href="qaction.html#autoRepeat-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="78" since="4.2" type="bool" brief="Whether the action can auto repeat">
                <getter name="autoRepeat"/>
                <setter name="setAutoRepeat"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="503" column="4">
                    <brief>This property holds whether the action can auto repeat.</brief>
                    <para>If true, the action will auto repeat when the keyboard shortcut combination is held down, provided that keyboard auto repeat is enabled on the system. The default value is true.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="visible" fullname="QAction::visible" href="qaction.html#visible-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="80" type="bool" brief="Whether the action can be seen (e.g. in menus and toolbars)">
                <getter name="isVisible"/>
                <setter name="setVisible"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1043" column="4">
                    <brief>This property holds whether the action can be seen (e.g. in menus and toolbars).</brief>
                    <para>If <italic>visible</italic> is true the action can be seen (e.g. in menus and toolbars) and chosen by the user; if <italic>visible</italic> is false the action cannot be seen or chosen by the user.</para>
                    <para>Actions which are not visible are <italic>not</italic> grayed out; they do not appear at all.</para>
                    <para>By default, this property is <teletype type="highlighted">true</teletype> (actions are visible).</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="menuRole" fullname="QAction::menuRole" href="qaction.html#menuRole-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="81" since="4.2" type="MenuRole" brief="The action's menu role">
                <getter name="menuRole"/>
                <setter name="setMenuRole"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1232" column="4">
                    <brief>This property holds the action's menu role.</brief>
                    <para>This indicates what role the action serves in the application menu on . By default all actions have the <link raw="TextHeuristicRole" href="qaction.html#MenuRole-enum" type="enum" enum="QAction::MenuRole">TextHeuristicRole</link>, which means that the action is added based on its text (see <link raw="QMenuBar" href="qmenubar.html" type="class">QMenuBar</link> for more information).</para>
                    <para>The menu role can only be changed before the actions are put into the menu bar in  (usually just before the first application window is shown).</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="iconVisibleInMenu" fullname="QAction::iconVisibleInMenu" href="qaction.html#iconVisibleInMenu-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="82" since="4.4" type="bool" brief="Whether or not an action should show an icon in a menu">
                <getter name="isIconVisibleInMenu"/>
                <setter name="setIconVisibleInMenu"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1261" column="4">
                    <brief>This property holds Whether or not an action should show an icon in a menu.</brief>
                    <para>In some applications, it may make sense to have actions with icons in the toolbar, but not in menus. If true, the icon (if valid) is shown in the menu, when it is false, it is not shown.</para>
                    <para>The default is to follow whether the <link raw="Qt::AA_DontShowIconsInMenus" href="qt.html#ApplicationAttribute-enum" type="enum" enum="Qt::ApplicationAttribute">Qt::AA_DontShowIconsInMenus</link> attribute is set for the application. Explicitly settings this property overrides the presence (or abscence) of the attribute.</para>
                    <para>For example:</para>
                    <snippet location="code/src_gui_kernel_qaction.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/widgets/doc/snippets/code/src_gui_kernel_qaction.cpp" identifier="0"/>
                    <see-also>
                        <link raw="QAction::icon" href="qaction.html#icon-prop" type="property" getter="QAction::icon()">QAction::icon</link>
                        <link raw="QCoreApplication::setAttribute()" href="qcoreapplication.html#setAttribute" type="function">QCoreApplication::setAttribute()</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="shortcutVisibleInContextMenu" fullname="QAction::shortcutVisibleInContextMenu" href="qaction.html#shortcutVisibleInContextMenu-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="83" since="5.10" type="bool" brief="Whether or not an action should show a shortcut in a context menu">
                <getter name="isShortcutVisibleInContextMenu"/>
                <setter name="setShortcutVisibleInContextMenu"/>
                <notifier name="changed"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1302" column="4">
                    <brief>This property holds Whether or not an action should show a shortcut in a context menu.</brief>
                    <para>In some applications, it may make sense to have actions with shortcuts in context menus. If true, the shortcut (if valid) is shown when the action is shown via a context menu, when it is false, it is not shown.</para>
                    <para>The default is to follow whether the <link raw="Qt::AA_DontShowShortcutsInContextMenus" href="qt.html#ApplicationAttribute-enum" type="enum" enum="Qt::ApplicationAttribute">Qt::AA_DontShowShortcutsInContextMenus</link> attribute is set for the application, falling back to the widget style hint. Explicitly setting this property overrides the presence (or abscence) of the attribute.</para>
                    <see-also>
                        <link raw="QAction::shortcut" href="qaction.html#shortcut-prop" type="property" getter="QAction::shortcut()">QAction::shortcut</link>
                        <link raw="QCoreApplication::setAttribute()" href="qcoreapplication.html#setAttribute" type="function">QCoreApplication::setAttribute()</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="priority" fullname="QAction::priority" href="qaction.html#priority-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="84" since="4.6" type="Priority" brief="The actions's priority in the user interface">
                <getter name="priority"/>
                <setter name="setPriority"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="887" column="4">
                    <brief>This property holds the actions's priority in the user interface..</brief>
                    <para>This property can be set to indicate how the action should be prioritized in the user interface.</para>
                    <para>For instance, when toolbars have the <link raw="Qt::ToolButtonTextBesideIcon" href="qt.html#ToolButtonStyle-enum" type="enum" enum="Qt::ToolButtonStyle">Qt::ToolButtonTextBesideIcon</link> mode set, then actions with <link raw="LowPriority" href="qaction.html#Priority-enum" type="enum" enum="QAction::Priority">LowPriority</link> will not show the text labels.</para>
                </description>
            </property>
            <enum threadsafety="unspecified" name="MenuRole" fullname="QAction::MenuRole" href="qaction.html#MenuRole-enum" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="88">
                <value name="NoRole" value="0"/>
                <value name="TextHeuristicRole" value="1"/>
                <value name="ApplicationSpecificRole" value="2"/>
                <value name="AboutQtRole" value="3"/>
                <value name="AboutRole" value="4"/>
                <value name="PreferencesRole" value="5"/>
                <value name="QuitRole" value="6"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="259" column="4">
                    <para>This enum describes how an action should be moved into the application menu on .</para>
                    <list type="enum">
                        <definition>
                            <term>QAction::NoRole</term>NoRole</definition>
                        <item>
                            <para>This action should not be put into the application menu</para>
                        </item>
                        <definition>
                            <term>QAction::TextHeuristicRole</term>TextHeuristicRole</definition>
                        <item>
                            <para>This action should be put in the application menu based on the action's text as described in the <link raw="QMenuBar" href="qmenubar.html" type="class">QMenuBar</link> documentation.</para>
                        </item>
                        <definition>
                            <term>QAction::ApplicationSpecificRole</term>ApplicationSpecificRole</definition>
                        <item>
                            <para>This action should be put in the application menu with an application specific role</para>
                        </item>
                        <definition>
                            <term>QAction::AboutQtRole</term>AboutQtRole</definition>
                        <item>
                            <para>This action handles the &quot;About Qt&quot; menu item.</para>
                        </item>
                        <definition>
                            <term>QAction::AboutRole</term>AboutRole</definition>
                        <item>
                            <para>This action should be placed where the &quot;About&quot; menu item is in the application menu. The text of the menu item will be set to &quot;About &lt;application name&gt;&quot;. The application name is fetched from the <teletype type="highlighted">Info.plist</teletype> file in the application's bundle (See <link raw="Qt for macOS - Deployment" href="osx-deployment.html" type="page" page="Qt for macOS - Deployment">Qt for macOS - Deployment</link>).</para>
                        </item>
                        <definition>
                            <term>QAction::PreferencesRole</term>PreferencesRole</definition>
                        <item>
                            <para>This action should be placed where the &quot;Preferences...&quot; menu item is in the application menu.</para>
                        </item>
                        <definition>
                            <term>QAction::QuitRole</term>QuitRole</definition>
                        <item>
                            <para>This action should be placed where the Quit menu item is in the application menu.</para>
                        </item>
                    </list>
                    <para>Setting this value only has effect on items that are in the immediate menus of the menubar, not the submenus of those menus. For example, if you have File menu in your menubar and the File menu has a submenu, setting the  for the actions in that submenu have no effect. They will never be moved.</para>
                </description>
            </enum>
            <enum threadsafety="unspecified" name="Priority" fullname="QAction::Priority" href="qaction.html#Priority-enum" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="91" since="4.6">
                <value name="LowPriority" value="0"/>
                <value name="NormalPriority" value="128"/>
                <value name="HighPriority" value="256"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="869" column="4">
                    <para>This enum defines priorities for actions in user interface.</para>
                    <list type="enum">
                        <definition>
                            <term>QAction::LowPriority</term>LowPriority</definition>
                        <item>
                            <para>The action should not be prioritized in the user interface.</para>
                        </item>
                        <definition>
                            <term>QAction::NormalPriority</term>NormalPriority</definition>
                        <item/>
                        <definition>
                            <term>QAction::HighPriority</term>HighPriority</definition>
                        <item>
                            <para>The action should be prioritized in the user interface.</para>
                        </item>
                    </list>
                    <see-also>
                        <link raw="priority" href="qaction.html#priority-prop" type="property" getter="QAction::priority()">priority</link>
                    </see-also>
                </description>
            </enum>
            <function threadsafety="unspecified" name="QAction" fullname="QAction::QAction" href="qaction.html#QAction" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="95" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAction(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="281" column="4">
                    <para>Constructs an action with <argument>parent</argument>. If <argument>parent</argument> is an action group the action will be automatically inserted into the group.</para>
                    <para>
                        <bold>Note:</bold> The <argument>parent</argument> argument is optional since Qt 5.7.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="QAction" fullname="QAction::QAction" href="qaction.html#QAction-1" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="96" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAction(const QString &amp;text, QObject *parent)">
                <parameter type="const QString &amp;" name="text" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="293" column="4">
                    <para>Constructs an action with some <argument>text</argument> and <argument>parent</argument>. If <argument>parent</argument> is an action group the action will be automatically inserted into the group.</para>
                    <para>The action uses a stripped version of <argument>text</argument> (e.g. &quot;&amp;Menu Option...&quot; becomes &quot;Menu Option&quot;) as descriptive text for tool buttons. You can override this by setting a specific description with <link raw="setText()" href="qaction.html#text-prop" type="function">setText()</link>. The same text will be used for tooltips unless you specify a different text using <link raw="setToolTip()" href="qaction.html#toolTip-prop" type="function">setToolTip()</link>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="QAction" fullname="QAction::QAction" href="qaction.html#QAction-2" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="97" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAction(const QIcon &amp;icon, const QString &amp;text, QObject *parent)">
                <parameter type="const QIcon &amp;" name="icon" default=""/>
                <parameter type="const QString &amp;" name="text" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="313" column="4">
                    <para>Constructs an action with an <argument>icon</argument> and some <argument>text</argument> and <argument>parent</argument>. If <argument>parent</argument> is an action group the action will be automatically inserted into the group.</para>
                    <para>The action uses a stripped version of <argument>text</argument> (e.g. &quot;&amp;Menu Option...&quot; becomes &quot;Menu Option&quot;) as descriptive text for tool buttons. You can override this by setting a specific description with <link raw="setText()" href="qaction.html#text-prop" type="function">setText()</link>. The same text will be used for tooltips unless you specify a different text using <link raw="setToolTip()" href="qaction.html#toolTip-prop" type="function">setToolTip()</link>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="~QAction" fullname="QAction::~QAction" href="qaction.html#dtor.QAction" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="99" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~QAction()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="562" column="4">
                    <para>Destroys the object and frees allocated resources.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="setActionGroup" fullname="QAction::setActionGroup" href="qaction.html#setActionGroup" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="101" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setActionGroup(QActionGroup *group)">
                <parameter type="QActionGroup *" name="group" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="591" column="4">
                    <para>Sets this action group to <argument>group</argument>. The action will be automatically added to the group's list of actions.</para>
                    <para>Actions within the group will be mutually exclusive.</para>
                    <see-also>
                        <link raw="QActionGroup" href="qactiongroup.html" type="class">QActionGroup</link>
                        <link raw="QAction::actionGroup()" href="qaction.html#actionGroup" type="function">QAction::actionGroup()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="actionGroup" fullname="QAction::actionGroup" href="qaction.html#actionGroup" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="102" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QActionGroup *" signature="QActionGroup * actionGroup() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="613" column="4">
                    <para>Returns the action group for this action. If no action group manages this action then 0 will be returned.</para>
                    <see-also>
                        <link raw="QActionGroup" href="qactiongroup.html" type="class">QActionGroup</link>
                        <link raw="QAction::setActionGroup()" href="qaction.html#setActionGroup" type="function">QAction::setActionGroup()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setIcon" fullname="QAction::setIcon" href="qaction.html#icon-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="103" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="icon" type="void" signature="void setIcon(const QIcon &amp;icon)">
                <parameter type="const QIcon &amp;" name="icon" default=""/>
                <description path="" line="0" column="0">
                    <see-also>icon()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="icon" fullname="QAction::icon" href="qaction.html#icon-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="104" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="icon" type="QIcon" signature="QIcon icon() const">
                <description path="" line="0" column="0">
                    <see-also>setIcon()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setText" fullname="QAction::setText" href="qaction.html#text-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="106" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="text" type="void" signature="void setText(const QString &amp;text)">
                <parameter type="const QString &amp;" name="text" default=""/>
                <description path="" line="0" column="0">
                    <see-also>text()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="text" fullname="QAction::text" href="qaction.html#text-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="107" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="text" type="QString" signature="QString text() const">
                <description path="" line="0" column="0">
                    <see-also>setText()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setIconText" fullname="QAction::setIconText" href="qaction.html#iconText-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="109" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconText" type="void" signature="void setIconText(const QString &amp;text)">
                <parameter type="const QString &amp;" name="text" default=""/>
                <description path="" line="0" column="0">
                    <see-also>iconText()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="iconText" fullname="QAction::iconText" href="qaction.html#iconText-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="110" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconText" type="QString" signature="QString iconText() const">
                <description path="" line="0" column="0">
                    <see-also>setIconText()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setToolTip" fullname="QAction::setToolTip" href="qaction.html#toolTip-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="112" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="toolTip" type="void" signature="void setToolTip(const QString &amp;tip)">
                <parameter type="const QString &amp;" name="tip" default=""/>
                <description path="" line="0" column="0">
                    <see-also>toolTip()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="toolTip" fullname="QAction::toolTip" href="qaction.html#toolTip-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="113" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="toolTip" type="QString" signature="QString toolTip() const">
                <description path="" line="0" column="0">
                    <see-also>setToolTip()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setStatusTip" fullname="QAction::setStatusTip" href="qaction.html#statusTip-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="115" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="statusTip" type="void" signature="void setStatusTip(const QString &amp;statusTip)">
                <parameter type="const QString &amp;" name="statusTip" default=""/>
                <description path="" line="0" column="0">
                    <see-also>statusTip()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="statusTip" fullname="QAction::statusTip" href="qaction.html#statusTip-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="116" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="statusTip" type="QString" signature="QString statusTip() const">
                <description path="" line="0" column="0">
                    <see-also>setStatusTip()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setWhatsThis" fullname="QAction::setWhatsThis" href="qaction.html#whatsThis-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="118" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="whatsThis" type="void" signature="void setWhatsThis(const QString &amp;what)">
                <parameter type="const QString &amp;" name="what" default=""/>
                <description path="" line="0" column="0">
                    <see-also>whatsThis()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="whatsThis" fullname="QAction::whatsThis" href="qaction.html#whatsThis-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="119" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="whatsThis" type="QString" signature="QString whatsThis() const">
                <description path="" line="0" column="0">
                    <see-also>setWhatsThis()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setPriority" fullname="QAction::setPriority" href="qaction.html#priority-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="121" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="priority" type="void" signature="void setPriority(QAction::Priority priority)">
                <parameter type="QAction::Priority" name="priority" default=""/>
                <description path="" line="0" column="0">
                    <see-also>priority()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="priority" fullname="QAction::priority" href="qaction.html#priority-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="122" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="priority" type="QAction::Priority" signature="QAction::Priority priority() const">
                <description path="" line="0" column="0">
                    <see-also>setPriority()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="menu" fullname="QAction::menu" href="qaction.html#menu" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="125" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QMenu *" signature="QMenu * menu() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="651" column="4">
                    <para>Returns the menu contained by this action. Actions that contain menus can be used to create menu items with submenus, or inserted into toolbars to create buttons with popup menus.</para>
                    <see-also>
                        <link raw="setMenu()" href="qaction.html#setMenu" type="function">setMenu()</link>
                        <link raw="QMenu::addAction()" href="qmenu.html#addAction" type="function">QMenu::addAction()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setMenu" fullname="QAction::setMenu" href="qaction.html#setMenu" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setMenu(QMenu *menu)">
                <parameter type="QMenu *" name="menu" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="664" column="4">
                    <para>Sets the menu contained by this action to the specified <argument>menu</argument>.</para>
                    <see-also>
                        <link raw="menu()" href="qaction.html#menu" type="function">menu()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setSeparator" fullname="QAction::setSeparator" href="qaction.html#setSeparator" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSeparator(bool b)">
                <parameter type="bool" name="b" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="679" column="4">
                    <para>If <argument>b</argument> is true then this action will be considered a separator.</para>
                    <para>How a separator is represented depends on the widget it is inserted into. Under most circumstances the text, submenu, and icon will be ignored for separator actions.</para>
                    <see-also>
                        <link raw="QAction::isSeparator()" href="qaction.html#isSeparator" type="function">QAction::isSeparator()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isSeparator" fullname="QAction::isSeparator" href="qaction.html#isSeparator" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="130" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isSeparator() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="698" column="4">
                    <para>Returns <teletype type="highlighted">true</teletype> if this action is a separator action; otherwise it returns <teletype type="highlighted">false</teletype>.</para>
                    <see-also>
                        <link raw="QAction::setSeparator()" href="qaction.html#setSeparator" type="function">QAction::setSeparator()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setShortcut" fullname="QAction::setShortcut" href="qaction.html#shortcut-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="shortcut" type="void" signature="void setShortcut(const QKeySequence &amp;shortcut)">
                <parameter type="const QKeySequence &amp;" name="shortcut" default=""/>
                <description path="" line="0" column="0">
                    <see-also>
                        <link raw="shortcut()" href="qaction.html#shortcut" type="function">shortcut()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="shortcut" fullname="QAction::shortcut" href="qaction.html#shortcut" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="134" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="shortcut" type="QKeySequence" signature="QKeySequence shortcut() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="448" column="4">
                    <para>Returns the primary shortcut.</para>
                    <see-also>
                        <link raw="setShortcuts()" href="qaction.html#setShortcuts" type="function">setShortcuts()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setShortcuts" fullname="QAction::setShortcuts" href="qaction.html#setShortcuts" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="136" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setShortcuts(const QList&lt;QKeySequence&gt; &amp;shortcuts)">
                <parameter type="const QList&lt;QKeySequence&gt; &amp;" name="shortcuts" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="402" column="4">
                    <para>Sets <argument>shortcuts</argument> as the list of shortcuts that trigger the action. The first element of the list is the primary shortcut.</para>
                    <see-also>
                        <link raw="shortcuts()" href="qaction.html#shortcuts" type="function">shortcuts()</link>
                        <link raw="shortcut" href="qaction.html#shortcut-prop" type="property" getter="QAction::shortcut()">shortcut</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setShortcuts" fullname="QAction::setShortcuts" href="qaction.html#setShortcuts-1" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="137" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setShortcuts(QKeySequence::StandardKey key)">
                <parameter type="QKeySequence::StandardKey" name="key" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="432" column="4">
                    <para>Sets a platform dependent list of shortcuts based on the <argument>key</argument>. The result of calling this function will depend on the currently running platform. Note that more than one shortcut can assigned by this action. If only the primary shortcut is required, use <link raw="setShortcut" href="qaction.html#shortcut-prop" type="function">setShortcut</link> instead.</para>
                    <see-also>
                        <link raw="QKeySequence::keyBindings()" href="qkeysequence.html#keyBindings" type="function">QKeySequence::keyBindings()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="shortcuts" fullname="QAction::shortcuts" href="qaction.html#shortcuts" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="138" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QKeySequence&gt;" signature="QList&lt;QKeySequence&gt; shortcuts() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="459" column="4">
                    <para>Returns the list of shortcuts, with the primary shortcut as the first element of the list.</para>
                    <see-also>
                        <link raw="setShortcuts()" href="qaction.html#setShortcuts" type="function">setShortcuts()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setShortcutContext" fullname="QAction::setShortcutContext" href="qaction.html#shortcutContext-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="140" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="shortcutContext" type="void" signature="void setShortcutContext(Qt::ShortcutContext context)">
                <parameter type="Qt::ShortcutContext" name="context" default=""/>
                <description path="" line="0" column="0">
                    <see-also>shortcutContext()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="shortcutContext" fullname="QAction::shortcutContext" href="qaction.html#shortcutContext-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="141" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="shortcutContext" type="Qt::ShortcutContext" signature="Qt::ShortcutContext shortcutContext() const">
                <description path="" line="0" column="0">
                    <see-also>setShortcutContext()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setAutoRepeat" fullname="QAction::setAutoRepeat" href="qaction.html#autoRepeat-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="143" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoRepeat" type="void" signature="void setAutoRepeat(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0">
                    <see-also>autoRepeat()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="autoRepeat" fullname="QAction::autoRepeat" href="qaction.html#autoRepeat-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="144" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoRepeat" type="bool" signature="bool autoRepeat() const">
                <description path="" line="0" column="0">
                    <see-also>setAutoRepeat()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setFont" fullname="QAction::setFont" href="qaction.html#font-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="147" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="font" type="void" signature="void setFont(const QFont &amp;font)">
                <parameter type="const QFont &amp;" name="font" default=""/>
                <description path="" line="0" column="0">
                    <see-also>font()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="font" fullname="QAction::font" href="qaction.html#font-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="148" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="font" type="QFont" signature="QFont font() const">
                <description path="" line="0" column="0">
                    <see-also>setFont()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setCheckable" fullname="QAction::setCheckable" href="qaction.html#checkable-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="150" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="checkable" type="void" signature="void setCheckable(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0">
                    <see-also>isCheckable()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isCheckable" fullname="QAction::isCheckable" href="qaction.html#checkable-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="151" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="checkable" type="bool" signature="bool isCheckable() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="data" fullname="QAction::data" href="qaction.html#data" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="153" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVariant" signature="QVariant data() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1100" column="4">
                    <para>Returns the user data as set in <link raw="QAction::setData" href="qaction.html#setData" type="function">QAction::setData</link>.</para>
                    <see-also>
                        <link raw="setData()" href="qaction.html#setData" type="function">setData()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setData" fullname="QAction::setData" href="qaction.html#setData" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="154" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setData(const QVariant &amp;var)">
                <parameter type="const QVariant &amp;" name="var" default=""/>
                <description path="" line="0" column="0">
                    <see-also>
                        <link raw="data()" href="qaction.html#data" type="function">data()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isChecked" fullname="QAction::isChecked" href="qaction.html#checked-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="156" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="checked" type="bool" signature="bool isChecked() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="isEnabled" fullname="QAction::isEnabled" href="qaction.html#enabled-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="158" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="enabled" type="bool" signature="bool isEnabled() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="isVisible" fullname="QAction::isVisible" href="qaction.html#visible-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="160" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="visible" type="bool" signature="bool isVisible() const">
                <description path="" line="0" column="0"/>
            </function>
            <enum threadsafety="unspecified" name="ActionEvent" fullname="QAction::ActionEvent" href="qaction.html#ActionEvent-enum" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="162">
                <value name="Trigger" value="0"/>
                <value name="Hover" value="1"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1222" column="4">
                    <para>This enum type is used when calling <link raw="QAction::activate()" href="qaction.html#activate" type="function">QAction::activate()</link></para>
                    <list type="enum">
                        <definition>
                            <term>QAction::Trigger</term>Trigger</definition>
                        <item>
                            <para>this will cause the <link raw="QAction::triggered()" href="qaction.html#triggered" type="function">QAction::triggered()</link> signal to be emitted.</para>
                        </item>
                        <definition>
                            <term>QAction::Hover</term>Hover</definition>
                        <item>
                            <para>this will cause the <link raw="QAction::hovered()" href="qaction.html#hovered" type="function">QAction::hovered()</link> signal to be emitted.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <function threadsafety="unspecified" name="activate" fullname="QAction::activate" href="qaction.html#activate" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="163" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void activate(QAction::ActionEvent event)">
                <parameter type="QAction::ActionEvent" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1145" column="4">
                    <para>Sends the relevant signals for <link raw="ActionEvent" href="qaction.html#ActionEvent-enum" type="enum" enum="QAction::ActionEvent">ActionEvent</link> <argument>event</argument>.</para>
                    <para>Action based widgets use this API to cause the <link raw="QAction" href="qaction.html" type="class">QAction</link> to emit signals as well as emitting their own.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="showStatusText" fullname="QAction::showStatusText" href="qaction.html#showStatusText" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool showStatusText(QWidget *widget)">
                <parameter type="QWidget *" name="widget" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1130" column="4">
                    <para>Updates the relevant status bar for the <argument>widget</argument> specified by sending a <link raw="QStatusTipEvent" href="qstatustipevent.html" type="class">QStatusTipEvent</link> to its parent widget. Returns <teletype type="highlighted">true</teletype> if an event was sent; otherwise returns <teletype type="highlighted">false</teletype>.</para>
                    <para>If a null widget is specified, the event is sent to the action's parent.</para>
                    <see-also>
                        <link raw="statusTip" href="qaction.html#statusTip-prop" type="property" getter="QAction::statusTip()">statusTip</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setMenuRole" fullname="QAction::setMenuRole" href="qaction.html#menuRole-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="166" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="menuRole" type="void" signature="void setMenuRole(QAction::MenuRole menuRole)">
                <parameter type="QAction::MenuRole" name="menuRole" default=""/>
                <description path="" line="0" column="0">
                    <see-also>menuRole()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="menuRole" fullname="QAction::menuRole" href="qaction.html#menuRole-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="167" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="menuRole" type="QAction::MenuRole" signature="QAction::MenuRole menuRole() const">
                <description path="" line="0" column="0">
                    <see-also>setMenuRole()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setIconVisibleInMenu" fullname="QAction::setIconVisibleInMenu" href="qaction.html#iconVisibleInMenu-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconVisibleInMenu" type="void" signature="void setIconVisibleInMenu(bool visible)">
                <parameter type="bool" name="visible" default=""/>
                <description path="" line="0" column="0">
                    <see-also>isIconVisibleInMenu()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isIconVisibleInMenu" fullname="QAction::isIconVisibleInMenu" href="qaction.html#iconVisibleInMenu-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="170" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconVisibleInMenu" type="bool" signature="bool isIconVisibleInMenu() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setShortcutVisibleInContextMenu" fullname="QAction::setShortcutVisibleInContextMenu" href="qaction.html#shortcutVisibleInContextMenu-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="shortcutVisibleInContextMenu" type="void" signature="void setShortcutVisibleInContextMenu(bool show)">
                <parameter type="bool" name="show" default=""/>
                <description path="" line="0" column="0">
                    <see-also>isShortcutVisibleInContextMenu()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isShortcutVisibleInContextMenu" fullname="QAction::isShortcutVisibleInContextMenu" href="qaction.html#shortcutVisibleInContextMenu-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="173" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="shortcutVisibleInContextMenu" type="bool" signature="bool isShortcutVisibleInContextMenu() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="parentWidget" fullname="QAction::parentWidget" href="qaction.html#parentWidget" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="175" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QWidget *" signature="QWidget * parentWidget() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="344" column="4">
                    <para>Returns the parent widget.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="associatedWidgets" fullname="QAction::associatedWidgets" href="qaction.html#associatedWidgets" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="177" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QWidget *&gt;" signature="QList&lt;QWidget *&gt; associatedWidgets() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="355" column="4">
                    <para>Returns a list of widgets this action has been added to.</para>
                    <see-also>
                        <link raw="QWidget::addAction()" href="qwidget.html#addAction" type="function">QWidget::addAction()</link>
                        <link raw="associatedGraphicsWidgets()" href="qaction.html#associatedGraphicsWidgets" type="function">associatedGraphicsWidgets()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="associatedGraphicsWidgets" fullname="QAction::associatedGraphicsWidgets" href="qaction.html#associatedGraphicsWidgets" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="179" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QGraphicsWidget *&gt;" signature="QList&lt;QGraphicsWidget *&gt; associatedGraphicsWidgets() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="368" column="4">
                    <para>Returns a list of widgets this action has been added to.</para>
                    <see-also>
                        <link raw="QWidget::addAction()" href="qwidget.html#addAction" type="function">QWidget::addAction()</link>
                        <link raw="associatedWidgets()" href="qaction.html#associatedWidgets" type="function">associatedWidgets()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="event" fullname="QAction::event" href="qaction.html#event" status="active" access="protected" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="183" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool event(QEvent *e) override">
                <parameter type="QEvent *" name="e" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="1078" column="4"/>
            </function>
            <function threadsafety="unspecified" name="QAction" fullname="QAction::QAction" href="qaction.html#QAction-3" status="internal" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="184" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAction(QActionPrivate &amp;dd, QObject *parent)">
                <parameter type="QActionPrivate &amp;" name="dd" default=""/>
                <parameter type="QObject *" name="parent" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/kernel/qaction.cpp" line="332" column="4"/>
            </function>
            <function threadsafety="unspecified" name="trigger" fullname="QAction::trigger" href="qaction.html#trigger" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="187" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void trigger()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="hover" fullname="QAction::hover" href="qaction.html#hover" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="188" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void hover()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setChecked" fullname="QAction::setChecked" href="qaction.html#checked-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="189" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="checked" type="void" signature="void setChecked(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0">
                    <see-also>isChecked()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="toggle" fullname="QAction::toggle" href="qaction.html#toggle" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="190" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void toggle()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setEnabled" fullname="QAction::setEnabled" href="qaction.html#enabled-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="191" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="enabled" type="void" signature="void setEnabled(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0">
                    <see-also>isEnabled()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setDisabled" fullname="QAction::setDisabled" href="qaction.html#setDisabled" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="192" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDisabled(bool b)">
                <parameter type="bool" name="b" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setVisible" fullname="QAction::setVisible" href="qaction.html#visible-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="193" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="visible" type="void" signature="void setVisible(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0">
                    <see-also>isVisible()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="changed" fullname="QAction::changed" href="qaction.html#changed" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="196" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoRepeat,checkable,enabled,font,icon,iconText,iconVisibleInMenu,menuRole,shortcut,shortcutContext,shortcutVisibleInContextMenu,statusTip,text,toolTip,visible,whatsThis" type="void" signature="void changed()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="triggered" fullname="QAction::triggered" href="qaction.html#triggered" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="197" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void triggered(bool checked)">
                <parameter type="bool" name="checked" default="false"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="hovered" fullname="QAction::hovered" href="qaction.html#hovered" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="198" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void hovered()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="toggled" fullname="QAction::toggled" href="qaction.html#checked-prop" status="active" access="public" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="199" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="checked" type="void" signature="void toggled(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="QAction" fullname="QAction::QAction" href="qaction.html#QAction-4" status="active" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="202" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAction(const QAction &amp;)">
                <parameter type="const QAction &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="QAction::operator=" href="qaction.html#operator-eq" status="active" access="private" location="qaction.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qaction.h" lineno="202" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAction &amp;" signature="QAction &amp; operator=(const QAction &amp;)">
                <parameter type="const QAction &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
        </class>
    </document>
</WebXML>
