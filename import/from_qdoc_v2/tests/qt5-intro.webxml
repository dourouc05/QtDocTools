<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <page name="qt5-intro.html" href="qt5-intro.html" status="active" location="qt5-intro.qdoc" filepath="C:/Qt/5.11.1/Src/qtdoc/doc/src/qt5-intro.qdoc" lineno="28" subtype="page" title="What's New in Qt 5" fulltitle="What's New in Qt 5" subtitle="" module="QtDoc" brief="Qt 5 features and its benefits">
            <contents name="qt-everywhere-on-mobile" title="Qt Everywhere on Mobile" level="1"/>
            <contents name="amazing-graphics-capability-and-performance" title="Amazing Graphics Capability and Performance" level="1"/>
            <contents name="qt-quick-in-qt-5" title="Qt Quick in Qt 5" level="1"/>
            <contents name="designing-ui-made-simpler" title="Designing UI Made Simpler" level="1"/>
            <contents name="sensor-and-location" title="Sensor and Location" level="1"/>
            <contents name="web-engine-and-html5" title="Web Engine and HTML5" level="1"/>
            <contents name="multimedia" title="Multimedia" level="1"/>
            <contents name="platform-specific-extras" title="Platform-specific Extras" level="1"/>
            <contents name="modularized-qt-libraries" title="Modularized Qt Libraries" level="1"/>
            <contents name="widgets-in-qt-5" title="Widgets in Qt 5" level="2"/>
            <contents name="provide-map-based-solutions-with-qt" title="Provide Map-based Solutions with Qt" level="1"/>
            <contents name="qt-platform-abstraction" title="Qt Platform Abstraction" level="1"/>
            <contents name="new-connection-syntax" title="New Connection Syntax" level="1"/>
            <contents name="connectivity-and-networking" title="Connectivity and Networking" level="1"/>
            <contents name="extended-connectivity" title="Extended Connectivity" level="2"/>
            <contents name="json-support" title="JSON Support" level="1"/>
            <contents name="user-input" title="User Input" level="1"/>
            <contents name="related-topics" title="Related Topics" level="1"/>
            <description path="C:/Qt/5.11.1/Src/qtdoc/doc/src/qt5-intro.qdoc" line="28" column="4">
                <brief>Qt 5 features and its benefits</brief>
                <para>Qt 5 is the latest version of Qt. It enables developers to develop applications with intuitive user interfaces for multiple targets, faster than ever before. Qt 5 makes it easier to address the latest UI paradigm shifts that touch screens and tablets require.</para>
                <para>Developers can be more productive and flexible with the improved support for JavaScript and QML in Qt 5, while still having the C++ foundation and Qt Widget support. HTML5 developers will feel at home with the Web offering that includes Chromium-based Qt  and Qt .</para>
                <para>Qt 5 is highly compatible with Qt 4. It is possible for developers of Qt 4 applications to seamlessly move on to Qt 5 with their current functionality and gradually develop new things leveraging all the great items Qt 5 makes possible.</para>
                <para>Cross-platform portability is made simpler in Qt 5, thanks to the new modularized codebase consisting of the <link raw="All Modules" href="qtmodules.html" type="page" page="All Modules">essential and add-on</link> modules, and the consolidation of the <link raw="Qt Platform Abstraction" href="qpa.html" type="page" page="Qt Platform Abstraction">Qt Platform Abstraction</link>.</para>
                <para>The following sections summarize some of the key features that Qt 5 brings to the table.</para>
                <section id="qt-everywhere-on-mobile">
                    <heading level="1">Qt Everywhere on Mobile</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <para>Qt now comes with production-ready ports for Android, iOS, and <link raw="WinRT" href="build-sources.html#winrt" type="page" page="Building Qt Sources">WinRT</link>. Extensive work has gone into these platform ports, which now extend Qtâ€™s multi-platform promise to cover desktop, embedded, and mobile platforms.</para>
                    <raw format="HTML">     &lt;br&gt;
    </raw>
                    <para>With full support for Android, iOS, and <link raw="WinRT" href="build-sources.html#winrt" type="page" page="Building Qt Sources">WinRT</link>, Qt is a great solution for targeting the mobile markets with a single codebase. It is fast and easy to bring existing desktop or embedded application to mobile, by simply recompiling it.</para>
                    <raw format="HTML">     &lt;br&gt;
    </raw>
                    <para>You can install several demo applications that showcase the power of Qt on these mobile platforms. Here is a small list of such applications:</para>
                    <raw format="HTML">     &lt;br&gt;
    </raw>
                    <para>Demo applications:</para>
                    <list type="bullet">
                        <item>
                            <para>
                                <link raw="Google Play: Introduction to Qt 5" href="https://play.google.com/store/apps/details?id=com.digia.Qt5Intro" type="page" page="Google Play: Introduction to Qt 5">Introduction to Qt 5</link> (Google Play)</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Google Play: Qt 5 Everywhere" href="https://play.google.com/store/apps/details?id=com.digia.Qt5Everywhere" type="page" page="Google Play: Qt 5 Everywhere">Qt 5 Everywhere</link> (Google Play)</para>
                        </item>
                        <item>
                            <para>
                                <link raw="iTunes: SubAttack" href="https://itunes.apple.com/us/app/subattack/id659283830" type="page" page="iTunes: SubAttack">SubAttack</link> (App Store)</para>
                        </item>
                        <item>
                            <para>
                                <link raw="iTunes: QtQuicksand" href="https://itunes.apple.com/us/app/qtquicksand/id666273528" type="page" page="iTunes: QtQuicksand">QtQuicksand</link> (App Store)</para>
                        </item>
                        <item>
                            <para>Quick Forecast on <link raw="iTunes: Quick Forecast" href="https://itunes.apple.com/us/app/quick-forecast/id736658981" type="page" page="iTunes: Quick Forecast">App Store</link>, <link raw="Google Play: Quick Forecast" href="https://play.google.com/store/apps/details?id=org.qtproject.quickforecast" type="page" page="Google Play: Quick Forecast">Google Play</link>, and <link raw="Windows Store: QuickForeCast" href="http://www.windowsphone.com/en-us/store/app/quickforecast/35572287-c6d6-4d5c-9799-46555f7fc459" type="page" page="Windows Store: QuickForecast">Windows Store</link>.</para>
                        </item>
                        <item>
                            <para>Qt Hangman on <link raw="iTunes: Qt Hangman" href="https://itunes.apple.com/us/app/qt-hangman/id762381104" type="page" page="iTunes: Qt Hangman">App Store</link> and <link raw="Google Play: Qt Hangman" href="https://play.google.com/store/apps/details?id=com.digia.QtHangman" type="page" page="Google Play: Qt Hangman">Google Play</link></para>
                        </item>
                        <item>
                            <para>Flyingbus on <link raw="iTunes: Flyingbus" href="https://itunes.apple.com/us/app/flyingbus/id762515926?mt=8" type="page" page="iTunes: Flyingbus">App Store</link> and <link raw="Google Play: Flyingbus" href="https://play.google.com/store/apps/details?id=com.digia.Flyingbus" type="page" page="Google Play: Flyingbus">Google Play</link></para>
                        </item>
                    </list>
                    <para>Platform pages:</para>
                    <list type="bullet">
                        <item>
                            <para>
                                <link raw="Qt for Android" href="android-support.html" type="page" page="Qt for Android">Qt for Android</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt for iOS" href="ios-support.html" type="page" page="Qt for iOS">Qt for iOS</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt for WinRT" href="winrt-support.html" type="page" page="Qt for WinRT">Qt for WinRT</link></para>
                        </item>
                    </list>
                    <raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <image href="images/qt5_everywhere_demo.jpg"/>Qt Everywhere demo on Nexus 7<raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="amazing-graphics-capability-and-performance">
                    <heading level="1">Amazing Graphics Capability and Performance</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <image href="images/qt5_shadereffect.jpg"/>
                    <link raw="ShaderEffect" href="qml-qtquick-shadereffect.html" type="">ShaderEffect</link> on an <link raw="Image" href="09-qdoc-commands-includingimages.html#image" type="page" page="Including Images">Image</link><raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <para>Qt 5 uses an OpenGL-based scene graph to accelerate the graphics of Qt Quick, making it possible to do visually appealing user interfaces with animations, impressive graphical effects and particle systems, even on the constrained hardware environments of mobile and embedded devices.</para>
                    <raw format="HTML">     &lt;br&gt;
    </raw>
                    <para>The benefits of this architectural change in the rendering engine are well demonstrated by the following projects:</para>
                    <list type="bullet">
                        <item>
                            <para>
                                <link raw="Livecoding video effects with Qt5" href="https://www.youtube.com/watch?v=P4kv-AoAJ-Q" type="page" page="Livecoding video effects with Qt5">Livecoding video effects with Qt5</link> - The Big Buck Bunny you never saw before. Video effects created using Qt Quick.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Pimp my video" href="http://blog.qt.io/2012/02/29/pimp-my-video-shader-effects-and-multimedia/" type="page" page="Pimp my video">Pimp my video</link> - Video effects implemented using the shader language with QML.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="QtMediaHub" href="http://wiki.qt.io/QtMediaHub" type="page" page="QtMediaHub">QtMediaHub</link> - The power and convenience of Qt Quick.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="QtonPi" href="http://wiki.qt.io/Qt_RaspberryPi" type="page" page="QtonPi">QtonPi</link> - Good example of Qt 5 running on the low cost hardware, Raspberry PI.</para>
                        </item>
                    </list>
                    <raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="qt-quick-in-qt-5">
                    <heading level="1">Qt Quick in Qt 5</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none;&quot;&gt;
      &lt;tr&gt;&lt;td style=&quot;width:50%; vertical-align:top;&quot;&gt;
    </raw>
                    <para>
                        <link raw="Qt Quick" href="qtquick-index.html" type="page" page="Qt Quick">Qt Quick</link> provides the necessary infrastructure to develop QML applications. The latest version (v2.0) of this technology also introduces a set of new C++ classes as a replacement for the QDeclarative* equivalents in Qt Quick 1. New features in Qt Quick include:</para>
                    <list type="bullet">
                        <item>
                            <para>
                                <link raw="Canvas" href="qml-qtquick-canvas.html" type="">Canvas</link> for drawing. Canvas provides an API that is similar to the HTML5 Canvas API, along with some additional features.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="ShaderEffect" href="qml-qtquick-shadereffect.html" type="">Shader Effects</link> which enable GLSL shader programs to be integrated directly into QML code and applied to items and images.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Using the Qt Quick Particle System" href="qtquick-effects-particles.html" type="page" page="Using the Qt Quick Particle System">Particle Effects</link> for creating a variety of 2D particle systems.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Sprite Animations" href="qtquick-effects-sprites.html" type="page" page="Sprite Animations">Sprites</link> can be used in animating 2D graphical objects and as a source for particle systems.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt Quick Local Storage QML Types" href="qtquick-localstorage-qmlmodule.html" type="">Offline storage</link> is a JavaScript API that conforms with the HTML5 Web Database API for storing data in Qt Quick applications.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt Quick Window QML Types" href="qtquick-window-qmlmodule.html" type="">Window</link> provides a top-level window and the Screen type for accessing a screen's resolution and other details. This is useful for desktop applications developed using Qt Quick.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt Quick Scene Graph" href="topics-graphics.html#qt-quick-scene-graph" type="page" page="Graphics">OpenGL-based rendering architecture</link> for optimal performance.</para>
                        </item>
                    </list>
                    <raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <image href="images/qt5_particles.jpg"/>Qt Quick's <link raw="Qt Quick Particles QML Types" href="qtquick-particles-qmlmodule.html" type="">Particle System</link><raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <para>The <link raw="qtgraphicaleffects-index.html" href="qtgraphicaleffects-index.html" type="page" page="Qt Graphical Effects">Qt Graphical Effects</link> module provides a number of ready-made effects for use in Qt Quick applications, including soft drop shadow, blur, glow and colorize.</para>
                    <raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <image href="images/qt5_graphicaleffects.jpg"/>Excerpts from the Qt Graphical Effects module<raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="designing-ui-made-simpler">
                    <heading level="1">Designing UI Made Simpler</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <image href="images/qtquickcontrols2-material.png"/>Qt Quick Controls 2 Material style<raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <para>UI designing can be time consuming if there are not enough tools to help. Qt Quick reduces the effort considerably compared to the traditional native (C or C++) approach, especially if the <link raw="Qt Quick Controls" href="qtquickcontrols-index.html" type="page" page="Qt Quick Controls">Qt Quick Controls</link> or <link raw="Qt Quick Controls 2" href="qtquickcontrols2-index.html" type="page" page="Qt Quick Controls 2">Qt Quick Controls 2</link> and <link raw="Qt Quick Layouts" href="qtquicklayouts-index.html" type="page" page="Qt Quick Layouts">Qt Quick Layouts</link> modules are used. These modules provide ready-to-use UI controls and layouts to enable faster application development with less code. For a comparison of the two sets of controls, see <link raw="Differences between Qt Quick Controls" href="qtquickcontrols2-differences.html" type="page" page="Differences between Qt Quick Controls">Differences between Qt Quick Controls</link>.</para>
                    <raw format="HTML">      &lt;br&gt;
    </raw>
                    <para>Qt Quick Controls and Qt Quick Layouts provide a vast set of UI controls ranging from the most basic text field and button to the more complex stack view and tumbler. The controls are also made available in <link raw="Qt Creator: Using Qt Quick Designer" href="http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html" type="page" page="Qt Creator: Using Qt Quick Designer">Qt Quick Designer</link>.</para>
                    <raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="sensor-and-location">
                    <heading level="1">Sensor and Location</heading>
                    <para>Reacting to sensor value changes and locating a place on the world map are the common use cases supported on most portable devices. Now you can support such use cases in your Qt application using the <link raw="Qt Sensors" href="qtsensors-index.html" type="page" page="Qt Sensors">Qt Sensors</link> and <link raw="Qt Positioning" href="qtpositioning-index.html" type="page" page="Qt Positioning">Qt Positioning</link> modules.</para>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <image href="images/qtsensors_accelbubble_ex.jpg"/>Accelerating SVG image<raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <image href="images/qtpositioning_weatherinfo_ex.jpg"/>Location-based weather information<raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="web-engine-and-html5">
                    <heading level="1">Web Engine and HTML5</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td colspan=2 style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <image href="images/qtwebengine_quicknanobrowser.jpg"/>Qt Quick nano browser<raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <para>
                        <link raw="Qt WebEngine" href="qtwebengine-index.html" type="page" page="Qt WebEngine">Qt WebEngine</link> is a web content rendering engine based on Chromium featuring broad support for standard web technologies. It provides integration with both Qt Quick and traditional widgets. The module brings the latest in HTML5 advancements to Qt 5, including CSS filters, animations and video, and Canvas.</para>
                    <raw format="HTML">     &lt;br&gt;
    </raw>
                    <para>This Chromium-based Web Engine support in Qt is complemented with <link raw="Qt WebChannel" href="qtwebchannel-index.html" type="page" page="Qt WebChannel">Qt WebChannel</link>, which bridges the gap between QML/C++ and HTML/JavaScript. It enables sharing QObjects from QML/C++ with HTML/JavaScript-based clients.</para>
                    <raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="multimedia">
                    <heading level="1">Multimedia</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td colspan=2 style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <para>
                        <link raw="Qt Multimedia" href="qtmultimedia-index.html" type="page" page="Qt Multimedia">Qt Multimedia</link> provides a rich set of QML types and C++ classes to handle multimedia content. It also provides necessary APIs to access the camera and radio functionality. Qt 5 brings the Qt Multimedia module into the set of essential modules with support on all major platforms.</para>
                    <raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; border: none;&quot;&gt;
    </raw>
                    <image href="images/qt5_video.jpg"/>Video embedded into a Qt Quick application with a displacement effect<raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="platform-specific-extras">
                    <heading level="1">Platform-specific Extras</heading>
                    <para>Qt is a cross-platform development framework enabling you to target multiple platforms with a single codebase. It provides common APIs across all supported platforms to access a feature without having to worry about how that feature is implemented on a platform. In some applications there will be a need to use a platform-specific feature, and that's when the following modules can be useful:</para>
                    <list type="bullet">
                        <item>
                            <para>
                                <link raw="Qt Android Extras" href="qtandroidextras-index.html" type="page" page="Qt Android Extras">Qt Android Extras</link> enables you to integrate Java code into your Qt application.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt Mac Extras" href="qtmacextras-index.html" type="page" page="Qt Mac Extras">Qt Mac Extras</link> enables you to access specific features on  and iOS.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt Windows Extras" href="qtwinextras-index.html" type="page" page="Qt Windows Extras">Qt Windows Extras</link> enables you to use Windows-specific features such as jump lists, progress indicator on a taskbar button, and so on.</para>
                        </item>
                        <item>
                            <para>
                                <link raw="Qt X11 Extras" href="qtx11extras-index.html" type="page" page="Qt X11 Extras">Qt X11 Extras</link> enables you to access the display configuration on Linux (X11).</para>
                        </item>
                    </list>
                </section>
                <section id="modularized-qt-libraries">
                    <heading level="1">Modularized Qt Libraries</heading>
                    <para>Qt 5 splits the Qt libraries into domain specific libraries and modules. This means that an application can choose which libraries it requires and only compile, use and deploy those.</para>
                    <para>For a complete list of modules and libraries, see <link raw="All Modules" href="qtmodules.html" type="page" page="All Modules">all Qt modules</link>.</para>
                </section>
                <section id="widgets-in-qt-5">
                    <heading level="2">Widgets in Qt 5</heading>
                    <para>The <link raw="Qt Widgets" href="qtwidgets-index.html" type="page" page="Qt Widgets">Qt Widgets</link> have been separated into their own module in Qt 5, the Qt Widgets module. It is part of the essential modules.</para>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td colspan=2 style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <image href="images/qt5_widgets.jpg"/>Screen capture of a widget application.<raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                    <para>Designing the UI for widget-based applications can be quick with <link raw="Qt Designer Manual" href="qtdesigner-manual.html" type="page" page="Qt Designer Manual">Qt Designer</link>.</para>
                </section>
                <section id="provide-map-based-solutions-with-qt">
                    <heading level="1">Provide Map-based Solutions with Qt</heading>
                    <raw format="HTML">    &lt;div class=&quot;table&quot;&gt;
     &lt;table style=&quot;background:transparent; border: none&quot;&gt;
      &lt;tr&gt;&lt;td style=&quot;width:50%; vertical-align:top;border: none;&quot;&gt;
    </raw>
                    <para>In today's world, location and maps information is more widely used, be it to look up nearby restaurants or plan commute to the office. With Qt, it is now possible to cater to these use cases by consuming map data provided by the third-party vendors. The <link raw="QtLocation" href="qtlocation-module.html" type="module">Qt Location</link> module provides the APIs and the necessary backend to fetch map data from some of the popular third-party mapping solutions. Here is a snapshot of the demo application running on Android, presenting OpenStreetMap data from www.mapquest.com.</para>
                    <raw format="HTML">      &lt;/td&gt;&lt;td style=&quot;width:50%; border: none; vertical-align: top&quot;&gt;
    </raw>
                    <image href="images/qtlocation-mapviewer-demo.jpg"/>Mapviewer example screenshot<raw format="HTML">      &lt;/td&gt;&lt;/tr&gt;
     &lt;/table&gt;
    &lt;/div&gt;
    </raw>
                </section>
                <section id="qt-platform-abstraction">
                    <heading level="1">Qt Platform Abstraction</heading>
                    <para>The windowing system dependent parts of Qt have been completely rewritten for Qt 5, based on the Qt Platform Abstraction, a plugin architecture which allows Qt to dynamically load a windowing system integration based on what system it is running on. This gives several benefits:</para>
                    <list type="bullet">
                        <item>
                            <para>Centralize the windowing system integration codebase into classes shared for all platforms.</para>
                        </item>
                        <item>
                            <para>Simplify the work required when porting Qt to new platforms.</para>
                        </item>
                        <item>
                            <para>Remove the windowing system dependency from Qt, making it possible to have the same Qt binaries run against multiple windowing systems. For instance, the Qt Linux binaries can run against both X11 and Wayland.</para>
                        </item>
                    </list>
                </section>
                <section id="new-connection-syntax">
                    <heading level="1">New Connection Syntax</heading>
                    <para>In addition to the still available well known way to connect signals and slots, new overloads of <link raw="QObject::connect" href="qobject.html#connect" type="function">QObject::connect</link> have been added allowing you to connect signals and slot using pointer to member functions:</para>
                    <code>QObject::connect(sender, &amp;Sender::valueChanged, receiver, &amp;Receiver::updateValue);</code>
                    <para>The new syntax provides compile time checking of the compatibility between signals and slots, automatic conversion of the arguments if there is an implicit cast between the types, and solve many problems occurring because of typedef or namespaces.</para>
                    <para>Additionally, if your compiler supports C++11 lambdas, you can even connect directly to a lambda function.</para>
                    <code>connect(sender, &amp;QObject::destroyed, [=](){ this-&gt;m_objects.remove(sender); });</code>
                    <para>For a detailed comparison with the original string-based syntax, see <link raw="Differences between String-Based and Functor-Based Connections" href="signalsandslots-syntaxes.html" type="page" page="Differences between String-Based and Functor-Based Connections">Differences between String-Based and Functor-Based Connections</link>.</para>
                </section>
                <section id="connectivity-and-networking">
                    <heading level="1">Connectivity and Networking</heading>
                    <para>Qt 5 provides better support for IPv6 and dual mode networks. Most applications using host names and network layer transparent protocols can now gain IPv6 support transparently. Such applications can also choose to receive both IPv4 and IPv6 connections or bind to only one of the two connection types. In the case of outgoing HTTP connections using <teletype type="highlighted">QNetworkAccessManager</teletype>, both IPv4 and IPv6 connections are attempted in parallel, and the one that succeeds first is used. This is useful in environments where one of the two types has limited connectivity.</para>
                    <para>Qt 5 also provides better ways to handle TCP socket-based connections and SSL certificates. This means developers can now:</para>
                    <list type="bullet">
                        <item>
                            <para>bind a TCP socket to an IP address before connecting,</para>
                        </item>
                        <item>
                            <para>verify an SSL certificate chain,</para>
                        </item>
                        <item>
                            <para>and access legacy systems.</para>
                        </item>
                    </list>
                    <para>Stricter client authentication is one of the primary concerns for many applications handling confidential or critical data. The opaque Private Keys support in Qt 5 enables applications to read private keys from devices such as PKCS#11 dongles for stricter client authentication. The <link raw="qsslkey example" href="https://github.com/iksaif/qsslkey-p11" type="page" page="qsslkey example">qsslkey example</link> illustrates reading private keys from a device.</para>
                </section>
                <section id="extended-connectivity">
                    <heading level="2">Extended Connectivity</heading>
                    <para>The connectivity options are endless with Qt 5. The two new modules, <link raw="Qt Bluetooth" href="qtbluetooth-index.html" type="page" page="Qt Bluetooth">Qt Bluetooth</link> and <link raw="Qt NFC" href="qtnfc-index.html" type="page" page="Qt NFC">Qt NFC</link>, enable developers to add support for sophisticated ways to connect and share information in their application.</para>
                </section>
                <section id="json-support">
                    <heading level="1">JSON Support</heading>
                    <para>Qt applications that use simple data structures to store small amount of data, can now choose to use JSON documents over the complex database backends that need necessary drivers or plugins to access data. The fact that JSON is a text-based open standard derived from JavaScript, makes it the obvious choice for QML applications as well.</para>
                    <para>The Qt Core provides a set of classes to enable parsing and generating JSON documents. These classes also allow you to convert between an in-memory binary representation of JSON to a standard textual JSON format. The goal is to make common operations on JSON faster.</para>
                </section>
                <section id="user-input">
                    <heading level="1">User Input</heading>
                    <para>Qt 4 already had support for handling multi-point touch input in C++. Qt 5 extends this support to include Qt Quick, covering all the information about the touch points, including the touch position, pressure, and velocity.</para>
                    <para>The mouse event handling in Qt 5 has been improved from its predecessor. Applications have more control to handle mouse events in Qt Quick. The mouse area in a QML document can propagate the mouse wheel and click events and also ignore propagated events.</para>
                    <para>Besides this, Qt 5 adds support for more mouse buttons on platforms where this is supported. This comes in handy for gaming applications developed using Qt.</para>
                </section>
                <section id="related-topics">
                    <heading level="1">Related Topics</heading>
                    <list type="bullet">
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.11" href="whatsnew511.html" type="page" page="What's New in Qt 5.11">What's New in Qt 5.11</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.10" href="whatsnew510.html" type="page" page="What's New in Qt 5.10">What's New in Qt 5.10</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.9" href="whatsnew59.html" type="page" page="What's New in Qt 5.9">What's New in Qt 5.9</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.8" href="whatsnew58.html" type="page" page="What's New in Qt 5.8">What's New in Qt 5.8</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.7" href="whatsnew57.html" type="page" page="What's New in Qt 5.7">What's New in Qt 5.7</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.6" href="whatsnew56.html" type="page" page="What's New in Qt 5.6">What's New in Qt 5.6</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.5" href="whatsnew55.html" type="page" page="What's New in Qt 5.5">What's New in Qt 5.5</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.4" href="whatsnew54.html" type="page" page="What's New in Qt 5.4">What's New in Qt 5.4</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.3" href="whatsnew53.html" type="page" page="What's New in Qt 5.3">What's New in Qt 5.3</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.2" href="whatsnew52.html" type="page" page="What's New in Qt 5.2">What's New in Qt 5.2</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.1" href="whatsnew51.html" type="page" page="What's New in Qt 5.1">What's New in Qt 5.1</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="What's New in Qt 5.0" href="whatsnew50.html" type="page" page="What's New in Qt 5.0">What's New in Qt 5.0</link></para>
                        </item>
                        <item>
                            <para>
                                <link raw="Porting Guide" href="portingguide.html" type="page" page="Porting Guide">Porting Guide</link></para>
                        </item>
                    </list>
                </section>
            </description>
        </page>
    </document>
</WebXML>
