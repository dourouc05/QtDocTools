<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <page name="tools/customtypesending" href="activeqt-tools-customtypesending-example.html" status="active" location="customtypesending.qdoc" filepath="C:/Qt/5.11.1/Src/qtbase/doc/src/examples/customtypesending.qdoc" lineno="28" subtype="example" title="Custom Type Sending Example" fulltitle="Custom Type Sending Example" subtitle="" module="ActiveQt">
            <contents name="overview" title="Overview" level="1"/>
            <contents name="the-window-and-message-class-definitions" title="The Window and Message Class Definitions" level="1"/>
            <contents name="the-window-class-implementation" title="The Window Class Implementation" level="1"/>
            <contents name="making-the-connection" title="Making the Connection" level="1"/>
            <contents name="further-reading" title="Further Reading" level="1"/>
            <description path="C:/Qt/5.11.1/Src/qtbase/doc/src/examples/customtypesending.qdoc" line="28" column="4">
                <para>The Custom Type Sending example shows how to use a custom type with signals and slots.</para>
                <image href=""/>
                <section id="overview">
                    <heading level="1">Overview</heading>
                    <para>In the <link raw="Custom Type Example" href="qtcore-tools-customtype-example.html" type="page" page="Custom Type Example">Custom Type Example</link>, we showed how to integrate custom types with the meta-object system, enabling them to be stored in <link raw="QVariant" href="qvariant.html" type="class">QVariant</link> objects, written out in debugging information and used in signal-slot communication.</para>
                    <para>In this example, we demonstrate that the preparations made to the <teletype type="highlighted">Message</teletype> class and its declaration with <link raw="Q_DECLARE_METATYPE()" href="qmetatype.html#Q_DECLARE_METATYPE" type="function">Q_DECLARE_METATYPE()</link> enable it to be used with direct signal-slot connections. We do this by creating a <teletype type="highlighted">Window</teletype> class containing signals and slots whose signatures include <teletype type="highlighted">Message</teletype> arguments.</para>
                </section>
                <section id="the-window-and-message-class-definitions">
                    <heading level="1">The Window and Message Class Definitions</heading>
                    <para>We define a simple <teletype type="highlighted">Window</teletype> class with a signal and public slot that allow a <teletype type="highlighted">Message</teletype> object to be sent via a signal-slot connection:</para>
                    <snippet location="examples/tools/customtypesending/window.h" identifier="Window class definition"/>
                    <para>The window will contain a text editor to show the contents of a message and a push button that the user can click to send a message. To facilitate this, we also define the <teletype type="highlighted">sendMessage()</teletype> slot. We also keep a <teletype type="highlighted">Message</teletype> instance in the <teletype type="highlighted">thisMessage</teletype> private variable which holds the actual message to be sent.</para>
                    <para>The <teletype type="highlighted">Message</teletype> class is defined in the following way:</para>
                    <snippet location="examples/tools/customtypesending/message.h" identifier="custom type definition"/>
                    <para>The type is declared to the meta-type system with the <link raw="Q_DECLARE_METATYPE()" href="qmetatype.html#Q_DECLARE_METATYPE" type="function">Q_DECLARE_METATYPE()</link> macro:</para>
                    <snippet location="examples/tools/customtypesending/message.h" identifier="custom type meta-type declaration"/>
                    <para>This will make the type available for use in direct signal-slot connections.</para>
                </section>
                <section id="the-window-class-implementation">
                    <heading level="1">The Window Class Implementation</heading>
                    <para>The <teletype type="highlighted">Window</teletype> constructor sets up a user interface containing a text editor and a push button.</para>
                    <snippet location="examples/tools/customtypesending/window.cpp" identifier="Window constructor"/>
                    <para>The button's <link raw="QPushButton::clicked()" href="qabstractbutton.html#clicked" type="function">clicked()</link> signal is connected to the window's <teletype type="highlighted">sendMessage()</teletype> slot, which emits the <teletype type="highlighted">messageSent(Message)</teletype> signal with the <teletype type="highlighted">Message</teletype> held by the <teletype type="highlighted">thisMessage</teletype> variable:</para>
                    <snippet location="examples/tools/customtypesending/window.cpp" identifier="sending a message"/>
                    <para>We implement a slot to allow the message to be received, and this also lets us set the message in the window programatically:</para>
                    <snippet location="examples/tools/customtypesending/window.cpp" identifier="receiving a message"/>
                    <para>In this function, we simply assign the new message to <teletype type="highlighted">thisMessage</teletype> and update the text in the editor.</para>
                </section>
                <section id="making-the-connection">
                    <heading level="1">Making the Connection</heading>
                    <para>In the example's <teletype type="highlighted">main()</teletype> function, we perform the connection between two instances of the <teletype type="highlighted">Window</teletype> class:</para>
                    <snippet location="examples/tools/customtypesending/main.cpp" identifier="main function"/>
                    <para>We set the message for the first window and connect the <teletype type="highlighted">messageSent(Message)</teletype> signal from each window to the other's <teletype type="highlighted">setMessage(Message)</teletype> slot. Since the signals and slots mechanism is only concerned with the type, we can simplify the signatures of both the signal and slot when we make the connection.</para>
                    <para>When the user clicks on the Send message button in either window, the message shown will be emitted in a signal that the other window will receive and display.</para>
                </section>
                <section id="further-reading">
                    <heading level="1">Further Reading</heading>
                    <para>Although the custom <teletype type="highlighted">Message</teletype> type can be used with direct signals and slots, an additional registration step needs to be performed if you want to use it with queued signal-slot connections. See the <link raw="Queued Custom Type Example" href="qtcore-threads-queuedcustomtype-example.html" type="page" page="Queued Custom Type Example">Queued Custom Type Example</link> for details.</para>
                    <para>More information on using custom types with Qt can be found in the <link raw="Creating Custom Qt Types" href="custom-types.html" type="page" page="Creating Custom Qt Types">Creating Custom Qt Types</link> document.</para>
                </section>
            </description>
        </page>
    </document>
</WebXML>
