<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="5.2">
   <db:info>
      <db:title>XML Classes</db:title>
      <db:abstract>
         <db:para>Classes that support XML, via, for example DOM and SAX</db:para>
      </db:abstract>
      <db:pubdate>2018-09-17+02:00</db:pubdate>
      <db:date>2018-09-17+02:00</db:date>
      <db:productname>Qt</db:productname>
      <db:productnumber>1.2</db:productnumber>
   </db:info>
   <db:section>
      <db:title>XML Classes</db:title>
      <db:para>Classes that support XML, via, for example DOM and SAX.</db:para>
      <db:para>These classes are relevant to XML users.</db:para>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractmessagehandler.webxml" xlink:title="QAbstractMessageHandler" xrefstyle="class" annotations="QAbstractMessageHandler">QAbstractMessageHandler</db:link>
               </db:td>
               <db:td>Callback interface for handling messages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracturiresolver.webxml" xlink:title="QAbstractUriResolver" xrefstyle="class" annotations="QAbstractUriResolver">QAbstractUriResolver</db:link>
               </db:td>
               <db:td>Callback interface for resolving Uniform Resource Identifiers. A Uniform Resource Identifier (URI) is a string that uniquely identifies a resource. URIs are versatile global identifiers. It is often useful to transform a URI that identifies something logical into a URI that locates something physical (a URL), or to simply map a URI to a different URI. QAbstractUriResolver::resolve() provides this functionality</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractxmlnodemodel.webxml" xlink:title="QAbstractXmlNodeModel" xrefstyle="class" annotations="QAbstractXmlNodeModel">QAbstractXmlNodeModel</db:link>
               </db:td>
               <db:td>Abstract base class for modeling non-XML data to look like XML for QXmlQuery</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractxmlreceiver.webxml" xlink:title="QAbstractXmlReceiver" xrefstyle="class" annotations="QAbstractXmlReceiver">QAbstractXmlReceiver</db:link>
               </db:td>
               <db:td>Callback interface for transforming the output of a QXmlQuery</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomattr.webxml" xlink:title="QDomAttr" xrefstyle="class" annotations="QDomAttr">QDomAttr</db:link>
               </db:td>
               <db:td>Represents one attribute of a QDomElement</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomcdatasection.webxml" xlink:title="QDomCDATASection" xrefstyle="class" annotations="QDomCDATASection">QDomCDATASection</db:link>
               </db:td>
               <db:td>Represents an XML CDATA section</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomcharacterdata.webxml" xlink:title="QDomCharacterData" xrefstyle="class" annotations="QDomCharacterData">QDomCharacterData</db:link>
               </db:td>
               <db:td>Represents a generic string in the DOM</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomcomment.webxml" xlink:title="QDomComment" xrefstyle="class" annotations="QDomComment">QDomComment</db:link>
               </db:td>
               <db:td>Represents an XML comment</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomdocument.webxml" xlink:title="QDomDocument" xrefstyle="class" annotations="QDomDocument">QDomDocument</db:link>
               </db:td>
               <db:td>Represents an XML document</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomdocumentfragment.webxml" xlink:title="QDomDocumentFragment" xrefstyle="class" annotations="QDomDocumentFragment">QDomDocumentFragment</db:link>
               </db:td>
               <db:td>Tree of QDomNodes which is not usually a complete QDomDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomdocumenttype.webxml" xlink:title="QDomDocumentType" xrefstyle="class" annotations="QDomDocumentType">QDomDocumentType</db:link>
               </db:td>
               <db:td>The representation of the DTD in the document tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomelement.webxml" xlink:title="QDomElement" xrefstyle="class" annotations="QDomElement">QDomElement</db:link>
               </db:td>
               <db:td>Represents one element in the DOM tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomentity.webxml" xlink:title="QDomEntity" xrefstyle="class" annotations="QDomEntity">QDomEntity</db:link>
               </db:td>
               <db:td>Represents an XML entity</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomentityreference.webxml" xlink:title="QDomEntityReference" xrefstyle="class" annotations="QDomEntityReference">QDomEntityReference</db:link>
               </db:td>
               <db:td>Represents an XML entity reference</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomimplementation.webxml" xlink:title="QDomImplementation" xrefstyle="class" annotations="QDomImplementation">QDomImplementation</db:link>
               </db:td>
               <db:td>Information about the features of the DOM implementation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnamednodemap.webxml" xlink:title="QDomNamedNodeMap" xrefstyle="class" annotations="QDomNamedNodeMap">QDomNamedNodeMap</db:link>
               </db:td>
               <db:td>Contains a collection of nodes that can be accessed by name</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnode.webxml" xlink:title="QDomNode" xrefstyle="class" annotations="QDomNode">QDomNode</db:link>
               </db:td>
               <db:td>The base class for all the nodes in a DOM tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnodelist.webxml" xlink:title="QDomNodeList" xrefstyle="class" annotations="QDomNodeList">QDomNodeList</db:link>
               </db:td>
               <db:td>List of QDomNode objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnotation.webxml" xlink:title="QDomNotation" xrefstyle="class" annotations="QDomNotation">QDomNotation</db:link>
               </db:td>
               <db:td>Represents an XML notation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomprocessinginstruction.webxml" xlink:title="QDomProcessingInstruction" xrefstyle="class" annotations="QDomProcessingInstruction">QDomProcessingInstruction</db:link>
               </db:td>
               <db:td>Represents an XML processing instruction</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomtext.webxml" xlink:title="QDomText" xrefstyle="class" annotations="QDomText">QDomText</db:link>
               </db:td>
               <db:td>Represents text data in the parsed XML document</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsimplexmlnodemodel.webxml" xlink:title="QSimpleXmlNodeModel" xrefstyle="class" annotations="QSimpleXmlNodeModel">QSimpleXmlNodeModel</db:link>
               </db:td>
               <db:td>Implementation of QAbstractXmlNodeModel sufficient for many common cases</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsourcelocation.webxml" xlink:title="QSourceLocation" xrefstyle="class" annotations="QSourceLocation">QSourceLocation</db:link>
               </db:td>
               <db:td>Identifies a location in a resource by URI, line, and column</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlattributes.webxml" xlink:title="QXmlAttributes" xrefstyle="class" annotations="QXmlAttributes">QXmlAttributes</db:link>
               </db:td>
               <db:td>XML attributes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlcontenthandler.webxml" xlink:title="QXmlContentHandler" xrefstyle="class" annotations="QXmlContentHandler">QXmlContentHandler</db:link>
               </db:td>
               <db:td>Interface to report the logical content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmldtdhandler.webxml" xlink:title="QXmlDTDHandler" xrefstyle="class" annotations="QXmlDTDHandler">QXmlDTDHandler</db:link>
               </db:td>
               <db:td>Interface to report DTD content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmldeclhandler.webxml" xlink:title="QXmlDeclHandler" xrefstyle="class" annotations="QXmlDeclHandler">QXmlDeclHandler</db:link>
               </db:td>
               <db:td>Interface to report declaration content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmldefaulthandler.webxml" xlink:title="QXmlDefaultHandler" xrefstyle="class" annotations="QXmlDefaultHandler">QXmlDefaultHandler</db:link>
               </db:td>
               <db:td>Default implementation of all the XML handler classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlentityresolver.webxml" xlink:title="QXmlEntityResolver" xrefstyle="class" annotations="QXmlEntityResolver">QXmlEntityResolver</db:link>
               </db:td>
               <db:td>Interface to resolve external entities contained in XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlerrorhandler.webxml" xlink:title="QXmlErrorHandler" xrefstyle="class" annotations="QXmlErrorHandler">QXmlErrorHandler</db:link>
               </db:td>
               <db:td>Interface to report errors in XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlformatter.webxml" xlink:title="QXmlFormatter" xrefstyle="class" annotations="QXmlFormatter">QXmlFormatter</db:link>
               </db:td>
               <db:td>Implementation of QXmlSerializer for transforming XQuery output into formatted XML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlinputsource.webxml" xlink:title="QXmlInputSource" xrefstyle="class" annotations="QXmlInputSource">QXmlInputSource</db:link>
               </db:td>
               <db:td>The input data for the QXmlReader subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlitem.webxml" xlink:title="QXmlItem" xrefstyle="class" annotations="QXmlItem">QXmlItem</db:link>
               </db:td>
               <db:td>Contains either an XML node or an atomic value</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmllexicalhandler.webxml" xlink:title="QXmlLexicalHandler" xrefstyle="class" annotations="QXmlLexicalHandler">QXmlLexicalHandler</db:link>
               </db:td>
               <db:td>Interface to report the lexical content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmllocator.webxml" xlink:title="QXmlLocator" xrefstyle="class" annotations="QXmlLocator">QXmlLocator</db:link>
               </db:td>
               <db:td>The XML handler classes with information about the parsing position within a file</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlname.webxml" xlink:title="QXmlName" xrefstyle="class" annotations="QXmlName">QXmlName</db:link>
               </db:td>
               <db:td>Represents the name of an XML node, in an efficient, namespace-aware way. QXmlName represents the name of an XML node in a way that is both efficient and safe for comparing names. Normally, an XML node represents an XML element or attribute, but QXmlName can also represent the names of other kinds of nodes, e.g., QAbstractXmlReceiver::processingInstruction() and QAbstractXmlReceiver::namespaceBinding()</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlnamepool.webxml" xlink:title="QXmlNamePool" xrefstyle="class" annotations="QXmlNamePool">QXmlNamePool</db:link>
               </db:td>
               <db:td>Table of shared strings referenced by instances of QXmlName</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlnamespacesupport.webxml" xlink:title="QXmlNamespaceSupport" xrefstyle="class" annotations="QXmlNamespaceSupport">QXmlNamespaceSupport</db:link>
               </db:td>
               <db:td>Helper class for XML readers which want to include namespace support</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlnodemodelindex.webxml" xlink:title="QXmlNodeModelIndex" xrefstyle="class" annotations="QXmlNodeModelIndex">QXmlNodeModelIndex</db:link>
               </db:td>
               <db:td>Identifies a node in an XML node model subclassed from QAbstractXmlNodeModel</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlparseexception.webxml" xlink:title="QXmlParseException" xrefstyle="class" annotations="QXmlParseException">QXmlParseException</db:link>
               </db:td>
               <db:td>Used to report errors with the QXmlErrorHandler interface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlquery.webxml" xlink:title="QXmlQuery" xrefstyle="class" annotations="QXmlQuery">QXmlQuery</db:link>
               </db:td>
               <db:td>Performs XQueries on XML data, or on non-XML data modeled to look like XML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlreader.webxml" xlink:title="QXmlReader" xrefstyle="class" annotations="QXmlReader">QXmlReader</db:link>
               </db:td>
               <db:td>Interface for XML readers (i.e. parsers)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlresultitems.webxml" xlink:title="QXmlResultItems" xrefstyle="class" annotations="QXmlResultItems">QXmlResultItems</db:link>
               </db:td>
               <db:td>Iterates through the results of evaluating an XQuery in QXmlQuery</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlschema.webxml" xlink:title="QXmlSchema" xrefstyle="class" annotations="QXmlSchema">QXmlSchema</db:link>
               </db:td>
               <db:td>Loading and validation of a W3C XML Schema</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlschemavalidator.webxml" xlink:title="QXmlSchemaValidator" xrefstyle="class" annotations="QXmlSchemaValidator">QXmlSchemaValidator</db:link>
               </db:td>
               <db:td>Validates XML instance documents against a W3C XML Schema</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlserializer.webxml" xlink:title="QXmlSerializer" xrefstyle="class" annotations="QXmlSerializer">QXmlSerializer</db:link>
               </db:td>
               <db:td>Implementation of QAbstractXmlReceiver for transforming XQuery output into unformatted XML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlsimplereader.webxml" xlink:title="QXmlSimpleReader" xrefstyle="class" annotations="QXmlSimpleReader">QXmlSimpleReader</db:link>
               </db:td>
               <db:td>Implementation of a simple XML parser</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamattribute.webxml" xlink:title="QXmlStreamAttribute" xrefstyle="class" annotations="QXmlStreamAttribute">QXmlStreamAttribute</db:link>
               </db:td>
               <db:td>Represents a single XML attribute</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamattributes.webxml" xlink:title="QXmlStreamAttributes" xrefstyle="class" annotations="QXmlStreamAttributes">QXmlStreamAttributes</db:link>
               </db:td>
               <db:td>Represents a vector of QXmlStreamAttribute</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamentitydeclaration.webxml" xlink:title="QXmlStreamEntityDeclaration" xrefstyle="class" annotations="QXmlStreamEntityDeclaration">QXmlStreamEntityDeclaration</db:link>
               </db:td>
               <db:td>Represents a DTD entity declaration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamentityresolver.webxml" xlink:title="QXmlStreamEntityResolver" xrefstyle="class" annotations="QXmlStreamEntityResolver">QXmlStreamEntityResolver</db:link>
               </db:td>
               <db:td>Entity resolver for a QXmlStreamReader</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamnamespacedeclaration.webxml" xlink:title="QXmlStreamNamespaceDeclaration" xrefstyle="class" annotations="QXmlStreamNamespaceDeclaration">QXmlStreamNamespaceDeclaration</db:link>
               </db:td>
               <db:td>Represents a namespace declaration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamnotationdeclaration.webxml" xlink:title="QXmlStreamNotationDeclaration" xrefstyle="class" annotations="QXmlStreamNotationDeclaration">QXmlStreamNotationDeclaration</db:link>
               </db:td>
               <db:td>Represents a DTD notation declaration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamreader.webxml" xlink:title="QXmlStreamReader" xrefstyle="class" annotations="QXmlStreamReader">QXmlStreamReader</db:link>
               </db:td>
               <db:td>Fast parser for reading well-formed XML via a simple streaming API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamwriter.webxml" xlink:title="QXmlStreamWriter" xrefstyle="class" annotations="QXmlStreamWriter">QXmlStreamWriter</db:link>
               </db:td>
               <db:td>XML writer with a simple streaming API</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
</db:article>
