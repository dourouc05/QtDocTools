<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <class threadsafety="unspecified" name="QPainterPath" href="qpainterpath.html" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="64" module="QtGui" groups="painting,shared" brief="Container for painting operations, enabling graphical shapes to be constructed and reused">
            <contents name="composing-a-qpainterpath" title="Composing a QPainterPath" level="1"/>
            <contents name="qpainterpath-information" title="QPainterPath Information" level="1"/>
            <contents name="qpainterpath-conversion" title="QPainterPath Conversion" level="1"/>
            <contents name="examples" title="Examples" level="1"/>
            <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="163" column="4">
                <brief>The <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> class provides a container for painting operations, enabling graphical shapes to be constructed and reused.</brief>
                <para>A painter path is an object composed of a number of graphical building blocks, such as rectangles, ellipses, lines, and curves. Building blocks can be joined in closed subpaths, for example as a rectangle or an ellipse. A closed path has coinciding start and end points. Or they can exist independently as unclosed subpaths, such as lines and curves.</para>
                <para>A <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object can be used for filling, outlining, and clipping. To generate fillable outlines for a given painter path, use the <link raw="QPainterPathStroker" href="qpainterpathstroker.html" type="class">QPainterPathStroker</link> class. The main advantage of painter paths over normal drawing operations is that complex shapes only need to be created once; then they can be drawn many times using only calls to the <link raw="QPainter::drawPath()" href="qpainter.html#drawPath" type="function">QPainter::drawPath()</link> function.</para>
                <para>
                    <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> provides a collection of functions that can be used to obtain information about the path and its elements. In addition it is possible to reverse the order of the elements using the <link raw="toReversed()" href="qpainterpath.html#toReversed" type="function">toReversed()</link> function. There are also several functions to convert this painter path object into a polygon representation.</para>
                <section id="composing-a-qpainterpath">
                    <heading level="1">Composing a QPainterPath</heading>
                    <para>A <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object can be constructed as an empty path, with a given start point, or as a copy of another <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object. Once created, lines and curves can be added to the path using the <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link>, <link raw="arcTo()" href="qpainterpath.html#arcTo" type="function">arcTo()</link>, <link raw="cubicTo()" href="qpainterpath.html#cubicTo" type="function">cubicTo()</link> and <link raw="quadTo()" href="qpainterpath.html#quadTo" type="function">quadTo()</link> functions. The lines and curves stretch from the <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> to the position passed as argument.</para>
                    <para>The <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> of the <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object is always the end position of the last subpath that was added (or the initial start point). Use the <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link> function to move the <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> without adding a component. The <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link> function implicitly starts a new subpath, and closes the previous one. Another way of starting a new subpath is to call the <link raw="closeSubpath()" href="qpainterpath.html#closeSubpath" type="function">closeSubpath()</link> function which closes the current path by adding a line from the <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> back to the path's start position. Note that the new path will have (0, 0) as its initial <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link>.</para>
                    <para>
                        <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> class also provides several convenience functions to add closed subpaths to a painter path: <link raw="addEllipse()" href="qpainterpath.html#addEllipse" type="function">addEllipse()</link>, <link raw="addPath()" href="qpainterpath.html#addPath" type="function">addPath()</link>, <link raw="addRect()" href="qpainterpath.html#addRect" type="function">addRect()</link>, <link raw="addRegion()" href="qpainterpath.html#addRegion" type="function">addRegion()</link> and <link raw="addText()" href="qpainterpath.html#addText" type="function">addText()</link>. The <link raw="addPolygon()" href="qpainterpath.html#addPolygon" type="function">addPolygon()</link> function adds an <italic>unclosed</italic> subpath. In fact, these functions are all collections of <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link>, <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link> and <link raw="cubicTo()" href="qpainterpath.html#cubicTo" type="function">cubicTo()</link> operations.</para>
                    <para>In addition, a path can be added to the current path using the <link raw="connectPath()" href="qpainterpath.html#connectPath" type="function">connectPath()</link> function. But note that this function will connect the last element of the current path to the first element of given one by adding a line.</para>
                    <para>Below is a code snippet that shows how a <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object can be used:</para>
                    <table width="70%">
                        <row>
                            <item>
                                <para>
                                    <inlineimage href="images/qpainterpath-construction.png"/></para>
                            </item>
                            <item>
                                <snippet location="code/src_gui_painting_qpainterpath.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/gui/doc/snippets/code/src_gui_painting_qpainterpath.cpp" identifier="0"/>
                            </item>
                        </row>
                    </table>
                    <para>The painter path is initially empty when constructed. We first add a rectangle, which is a closed subpath. Then we add two bezier curves which together form a closed subpath even though they are not closed individually. Finally we draw the entire path. The path is filled using the default fill rule, <link raw="Qt::OddEvenFill" href="qt.html#FillRule-enum" type="enum" enum="Qt::FillRule">Qt::OddEvenFill</link>. Qt provides two methods for filling paths:</para>
                    <table>
                        <header>
                            <item>
                                <para>
                                    <link raw="Qt::OddEvenFill" href="qt.html#FillRule-enum" type="enum" enum="Qt::FillRule">Qt::OddEvenFill</link></para>
                            </item>
                            <item>
                                <para>
                                    <link raw="Qt::WindingFill" href="qt.html#FillRule-enum" type="enum" enum="Qt::FillRule">Qt::WindingFill</link></para>
                            </item>
                        </header>
                        <row>
                            <item>
                                <para>
                                    <inlineimage href="images/qt-fillrule-oddeven.png"/></para>
                            </item>
                            <item>
                                <para>
                                    <inlineimage href="images/qt-fillrule-winding.png"/></para>
                            </item>
                        </row>
                    </table>
                    <para>See the <link raw="Qt::FillRule" href="qt.html#FillRule-enum" type="enum" enum="Qt::FillRule">Qt::FillRule</link> documentation for the definition of the rules. A painter path's currently set fill rule can be retrieved using the <link raw="fillRule()" href="qpainterpath.html#fillRule" type="function">fillRule()</link> function, and altered using the <link raw="setFillRule()" href="qpainterpath.html#setFillRule" type="function">setFillRule()</link> function.</para>
                </section>
                <section id="qpainterpath-information">
                    <heading level="1">QPainterPath Information</heading>
                    <para>The <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> class provides a collection of functions that returns information about the path and its elements.</para>
                    <para>The <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> function returns the end point of the last subpath that was added (or the initial start point). The <link raw="elementAt()" href="qpainterpath.html#elementAt" type="function">elementAt()</link> function can be used to retrieve the various subpath elements, the <italic>number</italic> of elements can be retrieved using the <link raw="elementCount()" href="qpainterpath.html#elementCount" type="function">elementCount()</link> function, and the <link raw="isEmpty()" href="qpainterpath.html#isEmpty" type="function">isEmpty()</link> function tells whether this <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object contains any elements at all.</para>
                    <para>The <link raw="controlPointRect()" href="qpainterpath.html#controlPointRect" type="function">controlPointRect()</link> function returns the rectangle containing all the points and control points in this path. This function is significantly faster to compute than the exact <link raw="boundingRect()" href="qpainterpath.html#boundingRect" type="function">boundingRect()</link> which returns the bounding rectangle of this painter path with floating point precision.</para>
                    <para>Finally, <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> provides the <link raw="contains()" href="qpainterpath.html#contains" type="function">contains()</link> function which can be used to determine whether a given point or rectangle is inside the path, and the <link raw="intersects()" href="qpainterpath.html#intersects" type="function">intersects()</link> function which determines if any of the points inside a given rectangle also are inside this path.</para>
                </section>
                <section id="qpainterpath-conversion">
                    <heading level="1">QPainterPath Conversion</heading>
                    <para>For compatibility reasons, it might be required to simplify the representation of a painter path: <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> provides the <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link>, <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link> and <link raw="toSubpathPolygons()" href="qpainterpath.html#toSubpathPolygons" type="function">toSubpathPolygons()</link> functions which convert the painter path into a polygon. The <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link> returns the painter path as one single polygon, while the two latter functions return a list of polygons.</para>
                    <para>The <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link> and <link raw="toSubpathPolygons()" href="qpainterpath.html#toSubpathPolygons" type="function">toSubpathPolygons()</link> functions are provided because it is usually faster to draw several small polygons than to draw one large polygon, even though the total number of points drawn is the same. The difference between the two is the <italic>number</italic> of polygons they return: The <link raw="toSubpathPolygons()" href="qpainterpath.html#toSubpathPolygons" type="function">toSubpathPolygons()</link> creates one polygon for each subpath regardless of intersecting subpaths (i.e. overlapping bounding rectangles), while the <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link> functions creates only one polygon for overlapping subpaths.</para>
                    <para>The <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link> and <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link> functions first convert all the subpaths to polygons, then uses a rewinding technique to make sure that overlapping subpaths can be filled using the correct fill rule. Note that rewinding inserts additional lines in the polygon so the outline of the fill polygon does not match the outline of the path.</para>
                </section>
                <section id="examples">
                    <heading level="1">Examples</heading>
                    <para>Qt provides the <link raw="painting/painterpaths" href="qtwidgets-painting-painterpaths-example.html" type="page" page="Painter Paths Example">Painter Paths Example</link> and the <link raw="painting/deform" href="qtwidgets-painting-deform-example.html" type="page" page="Vector Deformation">Vector Deformation example</link> which are located in Qt's example directory.</para>
                    <para>The <link raw="painting/painterpaths" href="qtwidgets-painting-painterpaths-example.html" type="page" page="Painter Paths Example">Painter Paths Example</link> shows how painter paths can be used to build complex shapes for rendering and lets the user experiment with the filling and stroking. The <link raw="painting/deform" href="qtwidgets-painting-deform-example.html" type="page" page="Vector Deformation">Vector Deformation Example</link> shows how to use <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> to draw text.</para>
                    <table>
                        <header>
                            <item>
                                <para>
                                    <link raw="painting/painterpaths" href="qtwidgets-painting-painterpaths-example.html" type="page" page="Painter Paths Example">Painter Paths Example</link></para>
                            </item>
                            <item>
                                <para>
                                    <link raw="painting/deform" href="qtwidgets-painting-deform-example.html" type="page" page="Vector Deformation">Vector Deformation Example</link></para>
                            </item>
                        </header>
                        <row>
                            <item>
                                <para>
                                    <inlineimage href="images/qpainterpath-example.png"/></para>
                            </item>
                            <item>
                                <para>
                                    <inlineimage href="images/qpainterpath-demo.png"/></para>
                            </item>
                        </row>
                    </table>
                </section>
                <see-also>
                    <link raw="QPainterPathStroker" href="qpainterpathstroker.html" type="class">QPainterPathStroker</link>
                    <link raw="QPainter" href="qpainter.html" type="class">QPainter</link>
                    <link raw="QRegion" href="qregion.html" type="class">QRegion</link>
                    <link raw="Painter Paths Example" href="qtwidgets-painting-painterpaths-example.html" type="page" page="Painter Paths Example">Painter Paths Example</link>
                </see-also>
            </description>
            <enum threadsafety="unspecified" name="ElementType" fullname="QPainterPath::ElementType" href="qpainterpath.html#ElementType-enum" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="67">
                <value name="MoveToElement" value="0"/>
                <value name="LineToElement" value="1"/>
                <value name="CurveToElement" value="2"/>
                <value name="CurveToDataElement" value="3"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="328" column="4">
                    <para>This enum describes the types of elements used to connect vertices in subpaths.</para>
                    <para>Note that elements added as closed subpaths using the <link raw="addEllipse()" href="qpainterpath.html#addEllipse" type="function">addEllipse()</link>, <link raw="addPath()" href="qpainterpath.html#addPath" type="function">addPath()</link>, <link raw="addPolygon()" href="qpainterpath.html#addPolygon" type="function">addPolygon()</link>, <link raw="addRect()" href="qpainterpath.html#addRect" type="function">addRect()</link>, <link raw="addRegion()" href="qpainterpath.html#addRegion" type="function">addRegion()</link> and <link raw="addText()" href="qpainterpath.html#addText" type="function">addText()</link> convenience functions, is actually added to the path as a collection of separate elements using the <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link>, <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link> and <link raw="cubicTo()" href="qpainterpath.html#cubicTo" type="function">cubicTo()</link> functions.</para>
                    <list type="enum">
                        <definition>
                            <term>QPainterPath::MoveToElement</term>MoveToElement</definition>
                        <item>
                            <para>A new subpath. See also <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link>.</para>
                        </item>
                        <definition>
                            <term>QPainterPath::LineToElement</term>LineToElement</definition>
                        <item>
                            <para>A line. See also <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link>.</para>
                        </item>
                        <definition>
                            <term>QPainterPath::CurveToElement</term>CurveToElement</definition>
                        <item>
                            <para>A curve. See also <link raw="cubicTo()" href="qpainterpath.html#cubicTo" type="function">cubicTo()</link> and <link raw="quadTo()" href="qpainterpath.html#quadTo" type="function">quadTo()</link>.</para>
                        </item>
                        <definition>
                            <term>QPainterPath::CurveToDataElement</term>CurveToDataElement</definition>
                        <item>
                            <para>The extra data required to describe a curve in a  element.</para>
                        </item>
                    </list>
                    <see-also>
                        <link raw="elementAt()" href="qpainterpath.html#elementAt" type="function">elementAt()</link>
                        <link raw="elementCount()" href="qpainterpath.html#elementCount" type="function">elementCount()</link>
                    </see-also>
                </description>
            </enum>
            <class threadsafety="unspecified" name="Element" fullname="QPainterPath::Element" href="qpainterpath-element.html" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="74" module="QtGui" brief="QPainterPath::Element class specifies the position and type of a subpath">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="349" column="4">
                    <brief>The <link raw="QPainterPath::Element" href="qpainterpath-element.html" type="class">QPainterPath::Element</link> class specifies the position and type of a subpath.</brief>
                    <para>Once a <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object is constructed, subpaths like lines and curves can be added to the path (creating <link raw="QPainterPath::LineToElement" href="qpainterpath.html#ElementType-enum" type="enum" enum="QPainterPath::ElementType">QPainterPath::LineToElement</link> and <link raw="QPainterPath::CurveToElement" href="qpainterpath.html#ElementType-enum" type="enum" enum="QPainterPath::ElementType">QPainterPath::CurveToElement</link> components).</para>
                    <para>The lines and curves stretch from the <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> to the position passed as argument. The <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> of the <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object is always the end position of the last subpath that was added (or the initial start point). The <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link> function can be used to move the <link raw="currentPosition()" href="qpainterpath.html#currentPosition" type="function">currentPosition()</link> without adding a line or curve, creating a <link raw="QPainterPath::MoveToElement" href="qpainterpath.html#ElementType-enum" type="enum" enum="QPainterPath::ElementType">QPainterPath::MoveToElement</link> component.</para>
                    <see-also>
                        <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link>
                    </see-also>
                </description>
                <variable threadsafety="unspecified" name="x" fullname="QPainterPath::Element::x" href="qpainterpath-element.html#x-var" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="76" type="qreal" static="false" brief="The x coordinate of the element's position">
                    <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="371" column="4">
                        <brief>This variable holds the x coordinate of the element's position..</brief>
                        <see-also>
                            <link raw="operator QPointF()" href="qpainterpath-element.html#operator-QPointF" type="function">operator QPointF()</link>
                        </see-also>
                    </description>
                </variable>
                <variable threadsafety="unspecified" name="y" fullname="QPainterPath::Element::y" href="qpainterpath-element.html#y-var" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="77" type="qreal" static="false" brief="The y coordinate of the element's position">
                    <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="378" column="4">
                        <brief>This variable holds the y coordinate of the element's position..</brief>
                        <see-also>
                            <link raw="operator QPointF()" href="qpainterpath-element.html#operator-QPointF" type="function">operator QPointF()</link>
                        </see-also>
                    </description>
                </variable>
                <variable threadsafety="unspecified" name="type" fullname="QPainterPath::Element::type" href="qpainterpath-element.html#type-var" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="78" type="QPainterPath::ElementType" static="false" brief="The type of element">
                    <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="385" column="4">
                        <brief>This variable holds the type of element.</brief>
                        <see-also>
                            <link raw="isCurveTo()" href="qpainterpath-element.html#isCurveTo" type="function">isCurveTo()</link>
                            <link raw="isLineTo()" href="qpainterpath-element.html#isLineTo" type="function">isLineTo()</link>
                            <link raw="isMoveTo()" href="qpainterpath-element.html#isMoveTo" type="function">isMoveTo()</link>
                        </see-also>
                    </description>
                </variable>
                <function threadsafety="unspecified" name="isMoveTo" fullname="QPainterPath::Element::isMoveTo" href="qpainterpath-element.html#isMoveTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="80" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isMoveTo() const">
                    <description path="" line="0" column="0"/>
                </function>
                <function threadsafety="unspecified" name="isLineTo" fullname="QPainterPath::Element::isLineTo" href="qpainterpath-element.html#isLineTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="81" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isLineTo() const">
                    <description path="" line="0" column="0"/>
                </function>
                <function threadsafety="unspecified" name="isCurveTo" fullname="QPainterPath::Element::isCurveTo" href="qpainterpath-element.html#isCurveTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="82" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isCurveTo() const">
                    <description path="" line="0" column="0"/>
                </function>
                <function threadsafety="unspecified" name="operator QPointF" fullname="QPainterPath::Element::operator QPointF" href="qpainterpath-element.html#operator-QPointF" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="84" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPointF" signature="QPointF operator QPointF() const">
                    <description path="" line="0" column="0"/>
                </function>
                <function threadsafety="unspecified" name="operator==" fullname="QPainterPath::Element::operator==" href="qpainterpath-element.html#operator-eq-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="86" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const Element &amp;e) const">
                    <parameter type="const Element &amp;" name="e" default=""/>
                    <description path="" line="0" column="0"/>
                </function>
                <function threadsafety="unspecified" name="operator!=" fullname="QPainterPath::Element::operator!=" href="qpainterpath-element.html#operator-not-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="88" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const Element &amp;e) const">
                    <parameter type="const Element &amp;" name="e" default=""/>
                    <description path="" line="0" column="0"/>
                </function>
            </class>
            <function threadsafety="unspecified" name="QPainterPath" fullname="QPainterPath::QPainterPath" href="qpainterpath.html#QPainterPath" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="91" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QPainterPath()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="527" column="4">
                    <para>Constructs an empty <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="QPainterPath" fullname="QPainterPath::QPainterPath" href="qpainterpath.html#QPainterPath-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="92" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QPainterPath(const QPointF &amp;startPoint)">
                <parameter type="const QPointF &amp;" name="startPoint" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="549" column="4">
                    <para>Creates a <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object with the given <argument>startPoint</argument> as its current position.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="QPainterPath" fullname="QPainterPath::QPainterPath" href="qpainterpath.html#QPainterPath-2" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="93" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QPainterPath(const QPainterPath &amp;other)">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="QPainterPath::operator=" href="qpainterpath.html#operator-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="94" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath &amp;" signature="QPainterPath &amp; operator=(const QPainterPath &amp;other)">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="QPainterPath::operator=" href="qpainterpath.html#operator-eq-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="96" virtual="non" meta="move-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath &amp;" signature="QPainterPath &amp; operator=(QPainterPath &amp;&amp;other)">
                <parameter type="QPainterPath &amp;&amp;" name="other" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="~QPainterPath" fullname="QPainterPath::~QPainterPath" href="qpainterpath.html#dtor.QPainterPath" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="99" virtual="non" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~QPainterPath()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="624" column="4">
                    <para>Destroys this <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> object.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="swap" fullname="QPainterPath::swap" href="qpainterpath.html#swap" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="100" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void swap(QPainterPath &amp;other)">
                <parameter type="QPainterPath &amp;" name="other" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="closeSubpath" fullname="QPainterPath::closeSubpath" href="qpainterpath.html#closeSubpath" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="102" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void closeSubpath()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="631" column="4">
                    <para>Closes the current subpath by drawing a line to the beginning of the subpath, automatically starting a new path. The current point of the new path is (0, 0).</para>
                    <para>If the subpath does not contain any elements, this function does nothing.</para>
                    <see-also>
                        <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link>
                        <link raw="QPainterPath#Composing a QPainterPath" href="qpainterpath.html#composing-a-qpainterpath" type="class">Composing a QPainterPath</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="moveTo" fullname="QPainterPath::moveTo" href="qpainterpath.html#moveTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="104" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void moveTo(const QPointF &amp;p)">
                <parameter type="const QPointF &amp;" name="p" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="moveTo" fullname="QPainterPath::moveTo" href="qpainterpath.html#moveTo-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="105" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void moveTo(qreal x, qreal y)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="lineTo" fullname="QPainterPath::lineTo" href="qpainterpath.html#lineTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="107" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void lineTo(const QPointF &amp;p)">
                <parameter type="const QPointF &amp;" name="p" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="lineTo" fullname="QPainterPath::lineTo" href="qpainterpath.html#lineTo-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="108" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void lineTo(qreal x, qreal y)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="arcMoveTo" fullname="QPainterPath::arcMoveTo" href="qpainterpath.html#arcMoveTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="110" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void arcMoveTo(const QRectF &amp;rect, qreal angle)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <parameter type="qreal" name="angle" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="arcMoveTo" fullname="QPainterPath::arcMoveTo" href="qpainterpath.html#arcMoveTo-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="111" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void arcMoveTo(qreal x, qreal y, qreal w, qreal h, qreal angle)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <parameter type="qreal" name="angle" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="arcTo" fullname="QPainterPath::arcTo" href="qpainterpath.html#arcTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="113" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void arcTo(const QRectF &amp;rect, qreal startAngle, qreal arcLength)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <parameter type="qreal" name="startAngle" default=""/>
                <parameter type="qreal" name="arcLength" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="arcTo" fullname="QPainterPath::arcTo" href="qpainterpath.html#arcTo-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="114" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void arcTo(qreal x, qreal y, qreal w, qreal h, qreal startAngle, qreal arcLength)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <parameter type="qreal" name="startAngle" default=""/>
                <parameter type="qreal" name="arcLength" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="cubicTo" fullname="QPainterPath::cubicTo" href="qpainterpath.html#cubicTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="116" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cubicTo(const QPointF &amp;ctrlPt1, const QPointF &amp;ctrlPt2, const QPointF &amp;endPt)">
                <parameter type="const QPointF &amp;" name="ctrlPt1" default=""/>
                <parameter type="const QPointF &amp;" name="ctrlPt2" default=""/>
                <parameter type="const QPointF &amp;" name="endPt" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="cubicTo" fullname="QPainterPath::cubicTo" href="qpainterpath.html#cubicTo-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="117" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void cubicTo(qreal ctrlPt1x, qreal ctrlPt1y, qreal ctrlPt2x, qreal ctrlPt2y, qreal endPtx, qreal endPty)">
                <parameter type="qreal" name="ctrlPt1x" default=""/>
                <parameter type="qreal" name="ctrlPt1y" default=""/>
                <parameter type="qreal" name="ctrlPt2x" default=""/>
                <parameter type="qreal" name="ctrlPt2y" default=""/>
                <parameter type="qreal" name="endPtx" default=""/>
                <parameter type="qreal" name="endPty" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="quadTo" fullname="QPainterPath::quadTo" href="qpainterpath.html#quadTo" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="119" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void quadTo(const QPointF &amp;ctrlPt, const QPointF &amp;endPt)">
                <parameter type="const QPointF &amp;" name="ctrlPt" default=""/>
                <parameter type="const QPointF &amp;" name="endPt" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="quadTo" fullname="QPainterPath::quadTo" href="qpainterpath.html#quadTo-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="120" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void quadTo(qreal ctrlPtx, qreal ctrlPty, qreal endPtx, qreal endPty)">
                <parameter type="qreal" name="ctrlPtx" default=""/>
                <parameter type="qreal" name="ctrlPty" default=""/>
                <parameter type="qreal" name="endPtx" default=""/>
                <parameter type="qreal" name="endPty" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="currentPosition" fullname="QPainterPath::currentPosition" href="qpainterpath.html#currentPosition" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="122" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPointF" signature="QPointF currentPosition() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addRect" fullname="QPainterPath::addRect" href="qpainterpath.html#addRect" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRect(const QRectF &amp;rect)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addRect" fullname="QPainterPath::addRect" href="qpainterpath.html#addRect-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="125" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRect(qreal x, qreal y, qreal w, qreal h)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addEllipse" fullname="QPainterPath::addEllipse" href="qpainterpath.html#addEllipse" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="126" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addEllipse(const QRectF &amp;rect)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addEllipse" fullname="QPainterPath::addEllipse" href="qpainterpath.html#addEllipse-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="127" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addEllipse(qreal x, qreal y, qreal w, qreal h)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addEllipse" fullname="QPainterPath::addEllipse" href="qpainterpath.html#addEllipse-2" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="128" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addEllipse(const QPointF &amp;center, qreal rx, qreal ry)">
                <parameter type="const QPointF &amp;" name="center" default=""/>
                <parameter type="qreal" name="rx" default=""/>
                <parameter type="qreal" name="ry" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addPolygon" fullname="QPainterPath::addPolygon" href="qpainterpath.html#addPolygon" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="129" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addPolygon(const QPolygonF &amp;polygon)">
                <parameter type="const QPolygonF &amp;" name="polygon" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1048" column="4">
                    <para>Adds the given <argument>polygon</argument> to the path as an (unclosed) subpath.</para>
                    <para>Note that the current position after the polygon has been added, is the last point in <argument>polygon</argument>. To draw a line back to the first point, use the <link raw="closeSubpath()" href="qpainterpath.html#closeSubpath" type="function">closeSubpath()</link> function.</para>
                    <table width="100%">
                        <row>
                            <item>
                                <para>
                                    <inlineimage href="images/qpainterpath-addpolygon.png"/></para>
                            </item>
                            <item>
                                <snippet location="code/src_gui_painting_qpainterpath.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/gui/doc/snippets/code/src_gui_painting_qpainterpath.cpp" identifier="4"/>
                            </item>
                        </row>
                    </table>
                    <see-also>
                        <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link>
                        <link raw="QPainterPath#Composing a QPainterPath" href="qpainterpath.html#composing-a-qpainterpath" type="class">Composing a QPainterPath</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="addText" fullname="QPainterPath::addText" href="qpainterpath.html#addText" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="130" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addText(const QPointF &amp;point, const QFont &amp;f, const QString &amp;text)">
                <parameter type="const QPointF &amp;" name="point" default=""/>
                <parameter type="const QFont &amp;" name="f" default=""/>
                <parameter type="const QString &amp;" name="text" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addText" fullname="QPainterPath::addText" href="qpainterpath.html#addText-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="131" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addText(qreal x, qreal y, const QFont &amp;f, const QString &amp;text)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="const QFont &amp;" name="f" default=""/>
                <parameter type="const QString &amp;" name="text" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addPath" fullname="QPainterPath::addPath" href="qpainterpath.html#addPath" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="132" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addPath(const QPainterPath &amp;path)">
                <parameter type="const QPainterPath &amp;" name="path" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addRegion" fullname="QPainterPath::addRegion" href="qpainterpath.html#addRegion" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="133" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRegion(const QRegion &amp;region)">
                <parameter type="const QRegion &amp;" name="region" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1280" column="4">
                    <para>Adds the given <argument>region</argument> to the path by adding each rectangle in the region as a separate closed subpath.</para>
                    <see-also>
                        <link raw="addRect()" href="qpainterpath.html#addRect" type="function">addRect()</link>
                        <link raw="QPainterPath#Composing a QPainterPath" href="qpainterpath.html#composing-a-qpainterpath" type="class">Composing a QPainterPath</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="addRoundedRect" fullname="QPainterPath::addRoundedRect" href="qpainterpath.html#addRoundedRect" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="135" since="4.4" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRoundedRect(const QRectF &amp;rect, qreal xRadius, qreal yRadius, Qt::SizeMode mode)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <parameter type="qreal" name="xRadius" default=""/>
                <parameter type="qreal" name="yRadius" default=""/>
                <parameter type="Qt::SizeMode" name="mode" default="Qt::AbsoluteSize"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3111" column="4">
                    <para>Adds the given rectangle <argument>rect</argument> with rounded corners to the path.</para>
                    <para>The <argument>xRadius</argument> and <argument>yRadius</argument> arguments specify the radii of the ellipses defining the corners of the rounded rectangle. When <argument>mode</argument> is <link raw="Qt::RelativeSize" href="qt.html#SizeMode-enum" type="enum" enum="Qt::SizeMode">Qt::RelativeSize</link>, <argument>xRadius</argument> and <argument>yRadius</argument> are specified in percentage of half the rectangle's width and height respectively, and should be in the range 0.0 to 100.0.</para>
                    <see-also>
                        <link raw="addRect()" href="qpainterpath.html#addRect" type="function">addRect()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="addRoundedRect" fullname="QPainterPath::addRoundedRect" href="qpainterpath.html#addRoundedRect-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="137" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRoundedRect(qreal x, qreal y, qreal w, qreal h, qreal xRadius, qreal yRadius, Qt::SizeMode mode)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <parameter type="qreal" name="xRadius" default=""/>
                <parameter type="qreal" name="yRadius" default=""/>
                <parameter type="Qt::SizeMode" name="mode" default="Qt::AbsoluteSize"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addRoundRect" fullname="QPainterPath::addRoundRect" href="qpainterpath-obsolete.html#addRoundRect-1" status="obsolete" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="141" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRoundRect(const QRectF &amp;r, int xRnd, int yRnd)">
                <parameter type="const QRectF &amp;" name="r" default=""/>
                <parameter type="int" name="xRnd" default=""/>
                <parameter type="int" name="yRnd" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3190" column="4">
                    <para>Adds a rectangle <argument>r</argument> with rounded corners to the path.</para>
                    <para>The <argument>xRnd</argument> and <argument>yRnd</argument> arguments specify how rounded the corners should be. 0 is angled corners, 99 is maximum roundedness.</para>
                    <see-also>
                        <link raw="addRoundedRect()" href="qpainterpath.html#addRoundedRect" type="function">addRoundedRect()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="addRoundRect" fullname="QPainterPath::addRoundRect" href="qpainterpath.html#addRoundRect" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRoundRect(qreal x, qreal y, qreal w, qreal h, int xRnd, int yRnd)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <parameter type="int" name="xRnd" default=""/>
                <parameter type="int" name="yRnd" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addRoundRect" fullname="QPainterPath::addRoundRect" href="qpainterpath.html#addRoundRect-2" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="144" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRoundRect(const QRectF &amp;rect, int roundness)">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <parameter type="int" name="roundness" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="addRoundRect" fullname="QPainterPath::addRoundRect" href="qpainterpath.html#addRoundRect-3" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="145" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void addRoundRect(qreal x, qreal y, qreal w, qreal h, int roundness)">
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <parameter type="qreal" name="w" default=""/>
                <parameter type="qreal" name="h" default=""/>
                <parameter type="int" name="roundness" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="connectPath" fullname="QPainterPath::connectPath" href="qpainterpath.html#connectPath" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="148" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void connectPath(const QPainterPath &amp;path)">
                <parameter type="const QPainterPath &amp;" name="path" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="contains" fullname="QPainterPath::contains" href="qpainterpath.html#contains" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="150" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool contains(const QPointF &amp;pt) const">
                <parameter type="const QPointF &amp;" name="pt" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="contains" fullname="QPainterPath::contains" href="qpainterpath.html#contains-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="151" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool contains(const QRectF &amp;rect) const">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="intersects" fullname="QPainterPath::intersects" href="qpainterpath.html#intersects" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="152" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool intersects(const QRectF &amp;rect) const">
                <parameter type="const QRectF &amp;" name="rect" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="translate" fullname="QPainterPath::translate" href="qpainterpath.html#translate" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="154" since="4.6" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void translate(qreal dx, qreal dy)">
                <parameter type="qreal" name="dx" default=""/>
                <parameter type="qreal" name="dy" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2118" column="4">
                    <para>Translates all elements in the path by (<argument>dx</argument>, <argument>dy</argument>).</para>
                    <see-also>
                        <link raw="translated()" href="qpainterpath.html#translated" type="function">translated()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="translate" fullname="QPainterPath::translate" href="qpainterpath.html#translate-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="155" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void translate(const QPointF &amp;offset)">
                <parameter type="const QPointF &amp;" name="offset" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="translated" fullname="QPainterPath::translated" href="qpainterpath.html#translated" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="157" since="4.6" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath translated(qreal dx, qreal dy) const">
                <parameter type="qreal" name="dx" default=""/>
                <parameter type="qreal" name="dy" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2153" column="4">
                    <para>Returns a copy of the path that is translated by (<argument>dx</argument>, <argument>dy</argument>).</para>
                    <see-also>
                        <link raw="translate()" href="qpainterpath.html#translate" type="function">translate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="translated" fullname="QPainterPath::translated" href="qpainterpath.html#translated-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="158" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath translated(const QPointF &amp;offset) const">
                <parameter type="const QPointF &amp;" name="offset" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="boundingRect" fullname="QPainterPath::boundingRect" href="qpainterpath.html#boundingRect" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="160" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QRectF" signature="QRectF boundingRect() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1437" column="4">
                    <para>Returns the bounding rectangle of this painter path as a rectangle with floating point precision.</para>
                    <see-also>
                        <link raw="controlPointRect()" href="qpainterpath.html#controlPointRect" type="function">controlPointRect()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="controlPointRect" fullname="QPainterPath::controlPointRect" href="qpainterpath.html#controlPointRect" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="161" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QRectF" signature="QRectF controlPointRect() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1454" column="4">
                    <para>Returns the rectangle containing all the points and control points in this path.</para>
                    <para>This function is significantly faster to compute than the exact <link raw="boundingRect()" href="qpainterpath.html#boundingRect" type="function">boundingRect()</link>, and the returned rectangle is always a superset of the rectangle returned by <link raw="boundingRect()" href="qpainterpath.html#boundingRect" type="function">boundingRect()</link>.</para>
                    <see-also>
                        <link raw="boundingRect()" href="qpainterpath.html#boundingRect" type="function">boundingRect()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="fillRule" fullname="QPainterPath::fillRule" href="qpainterpath.html#fillRule" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="163" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="Qt::FillRule" signature="Qt::FillRule fillRule() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1297" column="4">
                    <para>Returns the painter path's currently set fill rule.</para>
                    <see-also>
                        <link raw="setFillRule()" href="qpainterpath.html#setFillRule" type="function">setFillRule()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setFillRule" fullname="QPainterPath::setFillRule" href="qpainterpath.html#setFillRule" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="164" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setFillRule(Qt::FillRule fillRule)">
                <parameter type="Qt::FillRule" name="fillRule" default=""/>
                <description path="" line="0" column="0">
                    <see-also>
                        <link raw="fillRule()" href="qpainterpath.html#fillRule" type="function">fillRule()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isEmpty" fullname="QPainterPath::isEmpty" href="qpainterpath.html#isEmpty" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="166" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isEmpty() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="toReversed" fullname="QPainterPath::toReversed" href="qpainterpath.html#toReversed" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="168" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath toReversed() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1490" column="4">
                    <para>Creates and returns a reversed copy of the path.</para>
                    <para>It is the order of the elements that is reversed: If a <link raw="QPainterPath" href="qpainterpath.html" type="class">QPainterPath</link> is composed by calling the <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link>, <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link> and <link raw="cubicTo()" href="qpainterpath.html#cubicTo" type="function">cubicTo()</link> functions in the specified order, the reversed copy is composed by calling <link raw="cubicTo()" href="qpainterpath.html#cubicTo" type="function">cubicTo()</link>, <link raw="lineTo()" href="qpainterpath.html#lineTo" type="function">lineTo()</link> and <link raw="moveTo()" href="qpainterpath.html#moveTo" type="function">moveTo()</link>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="toSubpathPolygons" fullname="QPainterPath::toSubpathPolygons" href="qpainterpath.html#toSubpathPolygons-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="169" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="QList&lt;QPolygonF&gt;" signature="QList&lt;QPolygonF&gt; toSubpathPolygons(const QMatrix &amp;matrix) const">
                <parameter type="const QMatrix &amp;" name="matrix" default="QMatrix()"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1597" column="4">
                    <para>This is an overloaded function.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="toFillPolygons" fullname="QPainterPath::toFillPolygons" href="qpainterpath.html#toFillPolygons-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="170" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="QList&lt;QPolygonF&gt;" signature="QList&lt;QPolygonF&gt; toFillPolygons(const QMatrix &amp;matrix) const">
                <parameter type="const QMatrix &amp;" name="matrix" default="QMatrix()"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1724" column="4">
                    <para>This is an overloaded function.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="toFillPolygon" fullname="QPainterPath::toFillPolygon" href="qpainterpath.html#toFillPolygon-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="171" virtual="non" meta="plain" const="true" static="false" overload="true" delete="false" default="false" final="false" override="false" overload-number="1" type="QPolygonF" signature="QPolygonF toFillPolygon(const QMatrix &amp;matrix) const">
                <parameter type="const QMatrix &amp;" name="matrix" default="QMatrix()"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2834" column="4">
                    <para>This is an overloaded function.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="toSubpathPolygons" fullname="QPainterPath::toSubpathPolygons" href="qpainterpath.html#toSubpathPolygons" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="172" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QPolygonF&gt;" signature="QList&lt;QPolygonF&gt; toSubpathPolygons(const QTransform &amp;matrix) const">
                <parameter type="const QTransform &amp;" name="matrix" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1540" column="4">
                    <para>Converts the path into a list of polygons using the <link raw="QTransform" href="qtransform.html" type="class">QTransform</link> <argument>matrix</argument>, and returns the list.</para>
                    <para>This function creates one polygon for each subpath regardless of intersecting subpaths (i.e. overlapping bounding rectangles). To make sure that such overlapping subpaths are filled correctly, use the <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link> function instead.</para>
                    <see-also>
                        <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link>
                        <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link>
                        <link raw="QPainterPath#QPainterPath Conversion" href="qpainterpath.html#qpainterpath-conversion" type="class">QPainterPath Conversion</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="toFillPolygons" fullname="QPainterPath::toFillPolygons" href="qpainterpath.html#toFillPolygons" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="173" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QList&lt;QPolygonF&gt;" signature="QList&lt;QPolygonF&gt; toFillPolygons(const QTransform &amp;matrix) const">
                <parameter type="const QTransform &amp;" name="matrix" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="1605" column="4">
                    <para>Converts the path into a list of polygons using the <link raw="QTransform" href="qtransform.html" type="class">QTransform</link> <argument>matrix</argument>, and returns the list.</para>
                    <para>The function differs from the <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link> function in that it creates several polygons. It is provided because it is usually faster to draw several small polygons than to draw one large polygon, even though the total number of points drawn is the same.</para>
                    <para>The  function differs from the <link raw="toSubpathPolygons()" href="qpainterpath.html#toSubpathPolygons" type="function">toSubpathPolygons()</link> function in that it create only polygon for subpaths that have overlapping bounding rectangles.</para>
                    <para>Like the <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link> function, this function uses a rewinding technique to make sure that overlapping subpaths can be filled using the correct fill rule. Note that rewinding inserts addition lines in the polygons so the outline of the fill polygon does not match the outline of the path.</para>
                    <see-also>
                        <link raw="toSubpathPolygons()" href="qpainterpath.html#toSubpathPolygons" type="function">toSubpathPolygons()</link>
                        <link raw="toFillPolygon()" href="qpainterpath.html#toFillPolygon" type="function">toFillPolygon()</link>
                        <link raw="QPainterPath#QPainterPath Conversion" href="qpainterpath.html#qpainterpath-conversion" type="class">QPainterPath Conversion</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="toFillPolygon" fullname="QPainterPath::toFillPolygon" href="qpainterpath.html#toFillPolygon" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="174" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPolygonF" signature="QPolygonF toFillPolygon(const QTransform &amp;matrix) const">
                <parameter type="const QTransform &amp;" name="matrix" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2801" column="4">
                    <para>Converts the path into a polygon using the <link raw="QTransform" href="qtransform.html" type="class">QTransform</link> <argument>matrix</argument>, and returns the polygon.</para>
                    <para>The polygon is created by first converting all subpaths to polygons, then using a rewinding technique to make sure that overlapping subpaths can be filled using the correct fill rule.</para>
                    <para>Note that rewinding inserts addition lines in the polygon so the outline of the fill polygon does not match the outline of the path.</para>
                    <see-also>
                        <link raw="toSubpathPolygons()" href="qpainterpath.html#toSubpathPolygons" type="function">toSubpathPolygons()</link>
                        <link raw="toFillPolygons()" href="qpainterpath.html#toFillPolygons" type="function">toFillPolygons()</link>
                        <link raw="QPainterPath#QPainterPath Conversion" href="qpainterpath.html#qpainterpath-conversion" type="class">QPainterPath Conversion</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="elementCount" fullname="QPainterPath::elementCount" href="qpainterpath.html#elementCount" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int elementCount() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="elementAt" fullname="QPainterPath::elementAt" href="qpainterpath.html#elementAt" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="177" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath::Element" signature="QPainterPath::Element elementAt(int i) const">
                <parameter type="int" name="i" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setElementPositionAt" fullname="QPainterPath::setElementPositionAt" href="qpainterpath.html#setElementPositionAt" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="178" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setElementPositionAt(int i, qreal x, qreal y)">
                <parameter type="int" name="i" default=""/>
                <parameter type="qreal" name="x" default=""/>
                <parameter type="qreal" name="y" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="length" fullname="QPainterPath::length" href="qpainterpath.html#length" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="180" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal length() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2849" column="4">
                    <para>Returns the length of the current path.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="percentAtLength" fullname="QPainterPath::percentAtLength" href="qpainterpath.html#percentAtLength" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="181" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal percentAtLength(qreal len) const">
                <parameter type="qreal" name="len" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2887" column="4">
                    <para>Returns percentage of the whole path at the specified length <argument>len</argument>.</para>
                    <para>Note that similarly to other percent methods, the percentage measurement is not linear with regards to the length, if curves are present in the path. When curves are present the percentage argument is mapped to the t parameter of the Bezier equations.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="pointAtPercent" fullname="QPainterPath::pointAtPercent" href="qpainterpath.html#pointAtPercent" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="182" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPointF" signature="QPointF pointAtPercent(qreal t) const">
                <parameter type="qreal" name="t" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3003" column="4">
                    <para>Returns the point at at the percentage <argument>t</argument> of the current path. The argument <argument>t</argument> has to be between 0 and 1.</para>
                    <para>Note that similarly to other percent methods, the percentage measurement is not linear with regards to the length, if curves are present in the path. When curves are present the percentage argument is mapped to the t parameter of the Bezier equations.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="angleAtPercent" fullname="QPainterPath::angleAtPercent" href="qpainterpath.html#angleAtPercent" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="183" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal angleAtPercent(qreal t) const">
                <parameter type="qreal" name="t" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3034" column="4">
                    <para>Returns the angle of the path tangent at the percentage <argument>t</argument>. The argument <argument>t</argument> has to be between 0 and 1.</para>
                    <para>Positive values for the angles mean counter-clockwise while negative values mean the clockwise direction. Zero degrees is at the 3 o'clock position.</para>
                    <para>Note that similarly to the other percent methods, the percentage measurement is not linear with regards to the length if curves are present in the path. When curves are present the percentage argument is mapped to the t parameter of the Bezier equations.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="slopeAtPercent" fullname="QPainterPath::slopeAtPercent" href="qpainterpath.html#slopeAtPercent" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="184" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="qreal" signature="qreal slopeAtPercent(qreal t) const">
                <parameter type="qreal" name="t" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3066" column="4">
                    <para>Returns the slope of the path at the percentage <argument>t</argument>. The argument <argument>t</argument> has to be between 0 and 1.</para>
                    <para>Note that similarly to other percent methods, the percentage measurement is not linear with regards to the length, if curves are present in the path. When curves are present the percentage argument is mapped to the t parameter of the Bezier equations.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="intersects" fullname="QPainterPath::intersects" href="qpainterpath.html#intersects-1" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="186" since="4.3" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool intersects(const QPainterPath &amp;p) const">
                <parameter type="const QPainterPath &amp;" name="p" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3375" column="4">
                    <para>Returns <teletype type="highlighted">true</teletype> if the current path intersects at any point the given path <argument>p</argument>. Also returns <teletype type="highlighted">true</teletype> if the current path contains or is contained by any part of <argument>p</argument>.</para>
                    <para>Set operations on paths will treat the paths as areas. Non-closed paths will be treated as implicitly closed.</para>
                    <see-also>
                        <link raw="contains()" href="qpainterpath.html#contains" type="function">contains()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="contains" fullname="QPainterPath::contains" href="qpainterpath.html#contains-2" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="187" since="4.3" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool contains(const QPainterPath &amp;p) const">
                <parameter type="const QPainterPath &amp;" name="p" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3396" column="4">
                    <para>Returns <teletype type="highlighted">true</teletype> if the given path <argument>p</argument> is contained within the current path. Returns <teletype type="highlighted">false</teletype> if any edges of the current path and <argument>p</argument> intersect.</para>
                    <para>Set operations on paths will treat the paths as areas. Non-closed paths will be treated as implicitly closed.</para>
                    <see-also>
                        <link raw="intersects()" href="qpainterpath.html#intersects" type="function">intersects()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="united" fullname="QPainterPath::united" href="qpainterpath.html#united" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="188" since="4.3" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath united(const QPainterPath &amp;p) const">
                <parameter type="const QPainterPath &amp;" name="p" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3292" column="4">
                    <para>Returns a path which is the union of this path's fill area and <argument>p</argument>'s fill area.</para>
                    <para>Set operations on paths will treat the paths as areas. Non-closed paths will be treated as implicitly closed. Bezier curves may be flattened to line segments due to numerical instability of doing bezier curve intersections.</para>
                    <see-also>
                        <link raw="intersected()" href="qpainterpath.html#intersected" type="function">intersected()</link>
                        <link raw="subtracted()" href="qpainterpath.html#subtracted" type="function">subtracted()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="intersected" fullname="QPainterPath::intersected" href="qpainterpath.html#intersected" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="189" since="4.3" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath intersected(const QPainterPath &amp;p) const">
                <parameter type="const QPainterPath &amp;" name="p" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3312" column="4">
                    <para>Returns a path which is the intersection of this path's fill area and <argument>p</argument>'s fill area. Bezier curves may be flattened to line segments due to numerical instability of doing bezier curve intersections.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="subtracted" fullname="QPainterPath::subtracted" href="qpainterpath.html#subtracted" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="190" since="4.3" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath subtracted(const QPainterPath &amp;p) const">
                <parameter type="const QPainterPath &amp;" name="p" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3327" column="4">
                    <para>Returns a path which is <argument>p</argument>'s fill area subtracted from this path's fill area.</para>
                    <para>Set operations on paths will treat the paths as areas. Non-closed paths will be treated as implicitly closed. Bezier curves may be flattened to line segments due to numerical instability of doing bezier curve intersections.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="subtractedInverted" fullname="QPainterPath::subtractedInverted" href="qpainterpath-obsolete.html#subtractedInverted" status="obsolete" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="191" since="4.3" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath subtractedInverted(const QPainterPath &amp;p) const">
                <parameter type="const QPainterPath &amp;" name="p" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3345" column="4">
                    <para>Use <link raw="subtracted()" href="qpainterpath.html#subtracted" type="function">subtracted()</link> instead.</para>
                    <see-also>
                        <link raw="subtracted()" href="qpainterpath.html#subtracted" type="function">subtracted()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="simplified" fullname="QPainterPath::simplified" href="qpainterpath.html#simplified" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="193" since="4.4" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath simplified() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="3358" column="4">
                    <para>Returns a simplified version of this path. This implies merging all subpaths that intersect, and returning a path containing no intersecting edges. Consecutive parallel lines will also be merged. The simplified path will always use the default fill rule, <link raw="Qt::OddEvenFill" href="qt.html#FillRule-enum" type="enum" enum="Qt::FillRule">Qt::OddEvenFill</link>. Bezier curves may be flattened to line segments due to numerical instability of doing bezier curve intersections.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator==" fullname="QPainterPath::operator==" href="qpainterpath.html#operator-eq-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="195" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator==(const QPainterPath &amp;path) const">
                <parameter type="const QPainterPath &amp;" name="path" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2262" column="4">
                    <para>Returns <teletype type="highlighted">true</teletype> if this painterpath is equal to the given <argument>path</argument>.</para>
                    <para>Note that comparing paths may involve a per element comparison which can be slow for complex paths.</para>
                    <see-also>
                        <link raw="operator!=()" href="qpainterpath.html#operator-not-eq" type="function">operator!=()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator!=" fullname="QPainterPath::operator!=" href="qpainterpath.html#operator-not-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="196" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool operator!=(const QPainterPath &amp;path) const">
                <parameter type="const QPainterPath &amp;" name="path" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2297" column="4">
                    <para>Returns <teletype type="highlighted">true</teletype> if this painter path differs from the given <argument>path</argument>.</para>
                    <para>Note that comparing paths may involve a per element comparison which can be slow for complex paths.</para>
                    <see-also>
                        <link raw="operator==()" href="qpainterpath.html#operator-eq-eq" type="function">operator==()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator&amp;" fullname="QPainterPath::operator&amp;" href="qpainterpath.html#operator-and" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="198" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath operator&amp;(const QPainterPath &amp;other) const">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2311" column="4">
                    <para>Returns the intersection of this path and the <argument>other</argument> path.</para>
                    <see-also>
                        <link raw="intersected()" href="qpainterpath.html#intersected" type="function">intersected()</link>
                        <link raw="operator&amp;=()" href="qpainterpath.html#operator-and-eq" type="function">operator&amp;=()</link>
                        <link raw="united()" href="qpainterpath.html#united" type="function">united()</link>
                        <link raw="operator|()" href="qpainterpath.html#operator-7c" type="function">operator|()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator|" fullname="QPainterPath::operator|" href="qpainterpath.html#operator-7c" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="199" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath operator|(const QPainterPath &amp;other) const">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2323" column="4">
                    <para>Returns the union of this path and the <argument>other</argument> path.</para>
                    <see-also>
                        <link raw="united()" href="qpainterpath.html#united" type="function">united()</link>
                        <link raw="operator|=()" href="qpainterpath.html#operator-7c-eq" type="function">operator|=()</link>
                        <link raw="intersected()" href="qpainterpath.html#intersected" type="function">intersected()</link>
                        <link raw="operator&amp;()" href="qpainterpath.html#operator-and" type="function">operator&amp;()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator+" fullname="QPainterPath::operator+" href="qpainterpath.html#operator-2b" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="200" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath operator+(const QPainterPath &amp;other) const">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2335" column="4">
                    <para>Returns the union of this path and the <argument>other</argument> path. This function is equivalent to operator|().</para>
                    <see-also>
                        <link raw="united()" href="qpainterpath.html#united" type="function">united()</link>
                        <link raw="operator+=()" href="qpainterpath.html#operator-2b-eq" type="function">operator+=()</link>
                        <link raw="operator-()" href="qpainterpath.html#operator-" type="function">operator-()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator-" fullname="QPainterPath::operator-" href="qpainterpath.html#operator-" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="201" since="4.5" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath" signature="QPainterPath operator-(const QPainterPath &amp;other) const">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2348" column="4">
                    <para>Subtracts the <argument>other</argument> path from a copy of this path, and returns the copy.</para>
                    <see-also>
                        <link raw="subtracted()" href="qpainterpath.html#subtracted" type="function">subtracted()</link>
                        <link raw="operator-=()" href="qpainterpath.html#operator--eq" type="function">operator-=()</link>
                        <link raw="operator+()" href="qpainterpath.html#operator-2b" type="function">operator+()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator&amp;=" fullname="QPainterPath::operator&amp;=" href="qpainterpath.html#operator-and-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="202" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath &amp;" signature="QPainterPath &amp; operator&amp;=(const QPainterPath &amp;other)">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2360" column="4">
                    <para>Intersects this path with <argument>other</argument> and returns a reference to this path.</para>
                    <see-also>
                        <link raw="intersected()" href="qpainterpath.html#intersected" type="function">intersected()</link>
                        <link raw="operator&amp;()" href="qpainterpath.html#operator-and" type="function">operator&amp;()</link>
                        <link raw="operator|=()" href="qpainterpath.html#operator-7c-eq" type="function">operator|=()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator|=" fullname="QPainterPath::operator|=" href="qpainterpath.html#operator-7c-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="203" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath &amp;" signature="QPainterPath &amp; operator|=(const QPainterPath &amp;other)">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2372" column="4">
                    <para>Unites this path with <argument>other</argument> and returns a reference to this path.</para>
                    <see-also>
                        <link raw="united()" href="qpainterpath.html#united" type="function">united()</link>
                        <link raw="operator|()" href="qpainterpath.html#operator-7c" type="function">operator|()</link>
                        <link raw="operator&amp;=()" href="qpainterpath.html#operator-and-eq" type="function">operator&amp;=()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator+=" fullname="QPainterPath::operator+=" href="qpainterpath.html#operator-2b-eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="204" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath &amp;" signature="QPainterPath &amp; operator+=(const QPainterPath &amp;other)">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2384" column="4">
                    <para>Unites this path with <argument>other</argument>, and returns a reference to this path. This is equivalent to operator|=().</para>
                    <see-also>
                        <link raw="united()" href="qpainterpath.html#united" type="function">united()</link>
                        <link raw="operator+()" href="qpainterpath.html#operator-2b" type="function">operator+()</link>
                        <link raw="operator-=()" href="qpainterpath.html#operator--eq" type="function">operator-=()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="operator-=" fullname="QPainterPath::operator-=" href="qpainterpath.html#operator--eq" status="active" access="public" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="205" since="4.5" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPath &amp;" signature="QPainterPath &amp; operator-=(const QPainterPath &amp;other)">
                <parameter type="const QPainterPath &amp;" name="other" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="2397" column="4">
                    <para>Subtracts <argument>other</argument> from this path, and returns a reference to this path.</para>
                    <see-also>
                        <link raw="subtracted()" href="qpainterpath.html#subtracted" type="function">subtracted()</link>
                        <link raw="operator-()" href="qpainterpath.html#operator-" type="function">operator-()</link>
                        <link raw="operator+=()" href="qpainterpath.html#operator-2b-eq" type="function">operator+=()</link>
                    </see-also>
                </description>
            </function>
            <variable threadsafety="unspecified" name="d_ptr" fullname="QPainterPath::d_ptr" href="qpainterpath.html#d_ptr-var" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="208" type="QScopedPointer&lt;QPainterPathPrivate, QPainterPathPrivateDeleter&gt;" static="false">
                <description path="" line="0" column="0"/>
            </variable>
            <function threadsafety="unspecified" name="ensureData" fullname="QPainterPath::ensureData" href="qpainterpath.html#ensureData" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="210" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ensureData()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="ensureData_helper" fullname="QPainterPath::ensureData_helper" href="qpainterpath.html#ensureData_helper" status="internal" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="211" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void ensureData_helper()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="577" column="4"/>
            </function>
            <function threadsafety="unspecified" name="detach" fullname="QPainterPath::detach" href="qpainterpath.html#detach" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="212" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detach()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="detach_helper" fullname="QPainterPath::detach_helper" href="qpainterpath.html#detach_helper" status="internal" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="213" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void detach_helper()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/gui/painting/qpainterpath.cpp" line="568" column="4"/>
            </function>
            <function threadsafety="unspecified" name="setDirty" fullname="QPainterPath::setDirty" href="qpainterpath.html#setDirty" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="214" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDirty(bool )">
                <parameter type="bool" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="computeBoundingRect" fullname="QPainterPath::computeBoundingRect" href="qpainterpath.html#computeBoundingRect" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="215" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeBoundingRect() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="computeControlPointRect" fullname="QPainterPath::computeControlPointRect" href="qpainterpath.html#computeControlPointRect" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="216" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void computeControlPointRect() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="d_func" fullname="QPainterPath::d_func" href="qpainterpath.html#d_func" status="active" access="private" location="qpainterpath.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtGui/qpainterpath.h" lineno="218" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPainterPathData *" signature="QPainterPathData * d_func() const">
                <description path="" line="0" column="0"/>
            </function>
        </class>
    </document>
</WebXML>
