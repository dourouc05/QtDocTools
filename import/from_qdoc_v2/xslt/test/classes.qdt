<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="5.2"
            xml:lang="en">
   <db:info>
      <db:title>All Classes</db:title>
      <db:abstract>
         <db:para>If you know the name of the class you want, find it here</db:para>
      </db:abstract>
      <db:pubdate>2018-09-28+02:00</db:pubdate>
      <db:date>2018-09-28+02:00</db:date>
      <db:productname>Qt</db:productname>
      <db:productnumber>1.2</db:productnumber>
   </db:info>
   <db:para>If you know the name of the class you want, find it here.</db:para>
   <db:para>This is a list of all Qt 5 classes. The following pages contain different API listings in different categories:</db:para>
   <db:itemizedlist>
      <db:listitem>
         <db:para>
            <db:link xlink:href="functions.html" xrefstyle="page" annotations="All Functions">All Functions</db:link>
         </db:para>
      </db:listitem>
      <db:listitem>
         <db:para>
            <db:link xlink:href="namespaces.html" xrefstyle="page" annotations="All Namespaces">All Namespaces</db:link>
         </db:para>
      </db:listitem>
      <db:listitem>
         <db:para>
            <db:link xlink:href="modules-cpp.html" xrefstyle="page" annotations="All Classes by Module">All Classes by Module</db:link>
         </db:para>
      </db:listitem>
      <db:listitem>
         <db:para>
            <db:link xlink:href="obsoleteclasses.html" xrefstyle="page" annotations="Obsolete Classes">Obsolete Classes</db:link>
         </db:para>
      </db:listitem>
      <db:listitem>
         <db:para>
            <db:link xlink:href="newclasses511.html" xrefstyle="page" annotations="New Classes and Functions in Qt 5.11">New Classes and Functions in Qt 5.11</db:link>
         </db:para>
      </db:listitem>
   </db:itemizedlist>
   <db:para>For more reference pages including QML types, visit <db:link xlink:href="reference-overview.html" xrefstyle="page" annotations="Qt Reference Pages">Qt Reference Pages</db:link>.</db:para>
   <db:section>
      <db:title>3</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dbars.webxml" xlink:title="Q3DBars" xrefstyle="class" annotations="Q3DBars">Q3DBars</db:link>
               </db:td>
               <db:td>Methods for rendering 3D bar graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dcamera.webxml" xlink:title="Q3DCamera" xrefstyle="class" annotations="Q3DCamera">Q3DCamera</db:link>
               </db:td>
               <db:td>Representation of a camera in 3D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dinputhandler.webxml" xlink:title="Q3DInputHandler" xrefstyle="class" annotations="Q3DInputHandler">Q3DInputHandler</db:link>
               </db:td>
               <db:td>Basic wheel mouse based input handler</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dlight.webxml" xlink:title="Q3DLight" xrefstyle="class" annotations="Q3DLight">Q3DLight</db:link>
               </db:td>
               <db:td>Representation of a light source in 3D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dobject.webxml" xlink:title="Q3DObject" xrefstyle="class" annotations="Q3DObject">Q3DObject</db:link>
               </db:td>
               <db:td>Simple base class for all the objects in a 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dscatter.webxml" xlink:title="Q3DScatter" xrefstyle="class" annotations="Q3DScatter">Q3DScatter</db:link>
               </db:td>
               <db:td>Methods for rendering 3D scatter graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dscene.webxml" xlink:title="Q3DScene" xrefstyle="class" annotations="Q3DScene">Q3DScene</db:link>
               </db:td>
               <db:td>Description of the 3D scene being visualized</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dsurface.webxml" xlink:title="Q3DSurface" xrefstyle="class" annotations="Q3DSurface">Q3DSurface</db:link>
               </db:td>
               <db:td>Methods for rendering 3D surface plots</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="q3dtheme.webxml" xlink:title="Q3DTheme" xrefstyle="class" annotations="Q3DTheme">Q3DTheme</db:link>
               </db:td>
               <db:td>Visual style for graphs</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>A</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstract3daxis.webxml" xlink:title="QAbstract3DAxis" xrefstyle="class" annotations="QAbstract3DAxis">QAbstract3DAxis</db:link>
               </db:td>
               <db:td>Base class for the axes of a graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstract3dgraph.webxml" xlink:title="QAbstract3DGraph" xrefstyle="class" annotations="QAbstract3DGraph">QAbstract3DGraph</db:link>
               </db:td>
               <db:td>Window and render loop for graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstract3dinputhandler.webxml" xlink:title="QAbstract3DInputHandler" xrefstyle="class" annotations="QAbstract3DInputHandler">QAbstract3DInputHandler</db:link>
               </db:td>
               <db:td>Base class for implementations of input handlers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstract3dseries.webxml" xlink:title="QAbstract3DSeries" xrefstyle="class" annotations="QAbstract3DSeries">QAbstract3DSeries</db:link>
               </db:td>
               <db:td>Base class for all data series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractanimation.webxml" xlink:title="QAbstractAnimation" xrefstyle="class" annotations="QAbstractAnimation">QAbstractAnimation</db:link>
               </db:td>
               <db:td>The base of all animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractaxis.webxml" xlink:title="QAbstractAxis" xrefstyle="class" annotations="QAbstractAxis">QAbstractAxis</db:link>
               </db:td>
               <db:td>Base class used for specialized axis classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractbarseries.webxml" xlink:title="QAbstractBarSeries" xrefstyle="class" annotations="QAbstractBarSeries">QAbstractBarSeries</db:link>
               </db:td>
               <db:td>Abstract parent class for all bar series classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractbutton.webxml" xlink:title="QAbstractButton" xrefstyle="class" annotations="QAbstractButton">QAbstractButton</db:link>
               </db:td>
               <db:td>The abstract base class of button widgets, providing functionality common to buttons</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractdataproxy.webxml" xlink:title="QAbstractDataProxy" xrefstyle="class" annotations="QAbstractDataProxy">QAbstractDataProxy</db:link>
               </db:td>
               <db:td>Base class for all data visualization data proxies</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracteventdispatcher.webxml" xlink:title="QAbstractEventDispatcher" xrefstyle="class" annotations="QAbstractEventDispatcher">QAbstractEventDispatcher</db:link>
               </db:td>
               <db:td>Interface to manage Qt's event queue</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracteventdispatcher::timerinfo.webxml" xlink:title="QAbstractEventDispatcher::TimerInfo" xrefstyle="class" annotations="QAbstractEventDispatcher::TimerInfo">QAbstractEventDispatcher::TimerInfo</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractextensionfactory.webxml" xlink:title="QAbstractExtensionFactory" xrefstyle="class" annotations="QAbstractExtensionFactory">QAbstractExtensionFactory</db:link>
               </db:td>
               <db:td>Interface for extension factories in Qt Designer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractextensionmanager.webxml" xlink:title="QAbstractExtensionManager" xrefstyle="class" annotations="QAbstractExtensionManager">QAbstractExtensionManager</db:link>
               </db:td>
               <db:td>Interface for extension managers in Qt Designer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractformbuilder.webxml" xlink:title="QAbstractFormBuilder" xrefstyle="class" annotations="QAbstractFormBuilder">QAbstractFormBuilder</db:link>
               </db:td>
               <db:td>Default implementation for classes that create user interfaces at run-time</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractgraphicsshapeitem.webxml" xlink:title="QAbstractGraphicsShapeItem" xrefstyle="class" annotations="QAbstractGraphicsShapeItem">QAbstractGraphicsShapeItem</db:link>
               </db:td>
               <db:td>Common base for all path items</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractitemdelegate.webxml" xlink:title="QAbstractItemDelegate" xrefstyle="class" annotations="QAbstractItemDelegate">QAbstractItemDelegate</db:link>
               </db:td>
               <db:td>Used to display and edit data items from a model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractitemmodel.webxml" xlink:title="QAbstractItemModel" xrefstyle="class" annotations="QAbstractItemModel">QAbstractItemModel</db:link>
               </db:td>
               <db:td>The abstract interface for item model classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractitemmodeltester.webxml" xlink:title="QAbstractItemModelTester" xrefstyle="class" annotations="QAbstractItemModelTester">QAbstractItemModelTester</db:link>
               </db:td>
               <db:td>Helps testing QAbstractItemModel subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractitemview.webxml" xlink:title="QAbstractItemView" xrefstyle="class" annotations="QAbstractItemView">QAbstractItemView</db:link>
               </db:td>
               <db:td>The basic functionality for item view classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractlistmodel.webxml" xlink:title="QAbstractListModel" xrefstyle="class" annotations="QAbstractListModel">QAbstractListModel</db:link>
               </db:td>
               <db:td>Abstract model that can be subclassed to create one-dimensional list models</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractmessagehandler.webxml" xlink:title="QAbstractMessageHandler" xrefstyle="class" annotations="QAbstractMessageHandler">QAbstractMessageHandler</db:link>
               </db:td>
               <db:td>Callback interface for handling messages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractnativeeventfilter.webxml" xlink:title="QAbstractNativeEventFilter" xrefstyle="class" annotations="QAbstractNativeEventFilter">QAbstractNativeEventFilter</db:link>
               </db:td>
               <db:td>Interface for receiving native events, such as MSG or XCB event structs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractnetworkcache.webxml" xlink:title="QAbstractNetworkCache" xrefstyle="class" annotations="QAbstractNetworkCache">QAbstractNetworkCache</db:link>
               </db:td>
               <db:td>The interface for cache implementations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractopenglfunctions.webxml" xlink:title="QAbstractOpenGLFunctions" xrefstyle="class" annotations="QAbstractOpenGLFunctions">QAbstractOpenGLFunctions</db:link>
               </db:td>
               <db:td>The base class of a family of classes that expose all functions for each OpenGL version and profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractprintdialog.webxml" xlink:title="QAbstractPrintDialog" xrefstyle="class" annotations="QAbstractPrintDialog">QAbstractPrintDialog</db:link>
               </db:td>
               <db:td>Base implementation for print dialogs used to configure printers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractproxymodel.webxml" xlink:title="QAbstractProxyModel" xrefstyle="class" annotations="QAbstractProxyModel">QAbstractProxyModel</db:link>
               </db:td>
               <db:td>Base class for proxy item models that can do sorting, filtering or other data processing tasks</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractscrollarea.webxml" xlink:title="QAbstractScrollArea" xrefstyle="class" annotations="QAbstractScrollArea">QAbstractScrollArea</db:link>
               </db:td>
               <db:td>Scrolling area with on-demand scroll bars</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractseries.webxml" xlink:title="QAbstractSeries" xrefstyle="class" annotations="QAbstractSeries">QAbstractSeries</db:link>
               </db:td>
               <db:td>Base class for all Qt Chart series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractslider.webxml" xlink:title="QAbstractSlider" xrefstyle="class" annotations="QAbstractSlider">QAbstractSlider</db:link>
               </db:td>
               <db:td>Integer value within a range</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractsocket.webxml" xlink:title="QAbstractSocket" xrefstyle="class" annotations="QAbstractSocket">QAbstractSocket</db:link>
               </db:td>
               <db:td>The base functionality common to all socket types</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractspinbox.webxml" xlink:title="QAbstractSpinBox" xrefstyle="class" annotations="QAbstractSpinBox">QAbstractSpinBox</db:link>
               </db:td>
               <db:td>Spinbox and a line edit to display values</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractstate.webxml" xlink:title="QAbstractState" xrefstyle="class" annotations="QAbstractState">QAbstractState</db:link>
               </db:td>
               <db:td>The base class of states of a QStateMachine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracttablemodel.webxml" xlink:title="QAbstractTableModel" xrefstyle="class" annotations="QAbstractTableModel">QAbstractTableModel</db:link>
               </db:td>
               <db:td>Abstract model that can be subclassed to create table models</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracttextdocumentlayout.webxml" xlink:title="QAbstractTextDocumentLayout" xrefstyle="class" annotations="QAbstractTextDocumentLayout">QAbstractTextDocumentLayout</db:link>
               </db:td>
               <db:td>Abstract base class used to implement custom layouts for QTextDocuments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracttextdocumentlayout::paintcontext.webxml" xlink:title="QAbstractTextDocumentLayout::PaintContext" xrefstyle="class" annotations="QAbstractTextDocumentLayout::PaintContext">QAbstractTextDocumentLayout::PaintContext</db:link>
               </db:td>
               <db:td>QAbstractTextDocumentLayout::PaintContext class is a convenience class defining the parameters used when painting a document's layout</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracttextdocumentlayout::selection.webxml" xlink:title="QAbstractTextDocumentLayout::Selection" xrefstyle="class" annotations="QAbstractTextDocumentLayout::Selection">QAbstractTextDocumentLayout::Selection</db:link>
               </db:td>
               <db:td>QAbstractTextDocumentLayout::Selection class is a convenience class defining the parameters of a selection</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracttransition.webxml" xlink:title="QAbstractTransition" xrefstyle="class" annotations="QAbstractTransition">QAbstractTransition</db:link>
               </db:td>
               <db:td>The base class of transitions between QAbstractState objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstracturiresolver.webxml" xlink:title="QAbstractUriResolver" xrefstyle="class" annotations="QAbstractUriResolver">QAbstractUriResolver</db:link>
               </db:td>
               <db:td>Callback interface for resolving Uniform Resource Identifiers. A Uniform Resource Identifier (URI) is a string that uniquely identifies a resource. URIs are versatile global identifiers. It is often useful to transform a URI that identifies something logical into a URI that locates something physical (a URL), or to simply map a URI to a different URI. QAbstractUriResolver::resolve() provides this functionality</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractxmlnodemodel.webxml" xlink:title="QAbstractXmlNodeModel" xrefstyle="class" annotations="QAbstractXmlNodeModel">QAbstractXmlNodeModel</db:link>
               </db:td>
               <db:td>Abstract base class for modeling non-XML data to look like XML for QXmlQuery</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qabstractxmlreceiver.webxml" xlink:title="QAbstractXmlReceiver" xrefstyle="class" annotations="QAbstractXmlReceiver">QAbstractXmlReceiver</db:link>
               </db:td>
               <db:td>Callback interface for transforming the output of a QXmlQuery</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessible.webxml" xlink:title="QAccessible" xrefstyle="class" annotations="QAccessible">QAccessible</db:link>
               </db:td>
               <db:td>Enums and static functions related to accessibility</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessible::state.webxml" xlink:title="QAccessible::State" xrefstyle="class" annotations="QAccessible::State">QAccessible::State</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibleactioninterface.webxml" xlink:title="QAccessibleActionInterface" xrefstyle="class" annotations="QAccessibleActionInterface">QAccessibleActionInterface</db:link>
               </db:td>
               <db:td>Implements support for invocable actions in the interface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibleeditabletextinterface.webxml" xlink:title="QAccessibleEditableTextInterface" xrefstyle="class" annotations="QAccessibleEditableTextInterface">QAccessibleEditableTextInterface</db:link>
               </db:td>
               <db:td>Implements support for objects with editable text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibleevent.webxml" xlink:title="QAccessibleEvent" xrefstyle="class" annotations="QAccessibleEvent">QAccessibleEvent</db:link>
               </db:td>
               <db:td>The base class for accessibility notifications</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibleinterface.webxml" xlink:title="QAccessibleInterface" xrefstyle="class" annotations="QAccessibleInterface">QAccessibleInterface</db:link>
               </db:td>
               <db:td>Defines an interface that exposes information about accessible objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibleobject.webxml" xlink:title="QAccessibleObject" xrefstyle="class" annotations="QAccessibleObject">QAccessibleObject</db:link>
               </db:td>
               <db:td>Implements parts of the QAccessibleInterface for QObjects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibleplugin.webxml" xlink:title="QAccessiblePlugin" xrefstyle="class" annotations="QAccessiblePlugin">QAccessiblePlugin</db:link>
               </db:td>
               <db:td>Abstract base class for plugins provinding accessibility information for user interface elements</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessiblestatechangeevent.webxml" xlink:title="QAccessibleStateChangeEvent" xrefstyle="class" annotations="QAccessibleStateChangeEvent">QAccessibleStateChangeEvent</db:link>
               </db:td>
               <db:td>Notfies the accessibility framework that the state of an object has changed</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletablecellinterface.webxml" xlink:title="QAccessibleTableCellInterface" xrefstyle="class" annotations="QAccessibleTableCellInterface">QAccessibleTableCellInterface</db:link>
               </db:td>
               <db:td>Implements support for the IAccessibleTable2 Cell interface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletableinterface.webxml" xlink:title="QAccessibleTableInterface" xrefstyle="class" annotations="QAccessibleTableInterface">QAccessibleTableInterface</db:link>
               </db:td>
               <db:td>Implements support for the IAccessibleTable2 interface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletablemodelchangeevent.webxml" xlink:title="QAccessibleTableModelChangeEvent" xrefstyle="class" annotations="QAccessibleTableModelChangeEvent">QAccessibleTableModelChangeEvent</db:link>
               </db:td>
               <db:td>Signifies a change in a table, list, or tree where cells are added or removed. If the change affected a number of rows, firstColumn and lastColumn will return -1. Likewise for columns, the row functions may return -1</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletextcursorevent.webxml" xlink:title="QAccessibleTextCursorEvent" xrefstyle="class" annotations="QAccessibleTextCursorEvent">QAccessibleTextCursorEvent</db:link>
               </db:td>
               <db:td>Notifies of cursor movements</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletextinsertevent.webxml" xlink:title="QAccessibleTextInsertEvent" xrefstyle="class" annotations="QAccessibleTextInsertEvent">QAccessibleTextInsertEvent</db:link>
               </db:td>
               <db:td>Notifies of text being inserted</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletextinterface.webxml" xlink:title="QAccessibleTextInterface" xrefstyle="class" annotations="QAccessibleTextInterface">QAccessibleTextInterface</db:link>
               </db:td>
               <db:td>Implements support for text handling</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletextremoveevent.webxml" xlink:title="QAccessibleTextRemoveEvent" xrefstyle="class" annotations="QAccessibleTextRemoveEvent">QAccessibleTextRemoveEvent</db:link>
               </db:td>
               <db:td>Notifies of text being deleted</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletextselectionevent.webxml" xlink:title="QAccessibleTextSelectionEvent" xrefstyle="class" annotations="QAccessibleTextSelectionEvent">QAccessibleTextSelectionEvent</db:link>
               </db:td>
               <db:td>Signals a change in the text selection of an object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessibletextupdateevent.webxml" xlink:title="QAccessibleTextUpdateEvent" xrefstyle="class" annotations="QAccessibleTextUpdateEvent">QAccessibleTextUpdateEvent</db:link>
               </db:td>
               <db:td>Notifies about text changes. This is for accessibles that support editable text such as line edits. This event occurs for example when a portion of selected text gets replaced by pasting a new text or in override mode of editors</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessiblevaluechangeevent.webxml" xlink:title="QAccessibleValueChangeEvent" xrefstyle="class" annotations="QAccessibleValueChangeEvent">QAccessibleValueChangeEvent</db:link>
               </db:td>
               <db:td>Describes a change in value for an accessible object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessiblevalueinterface.webxml" xlink:title="QAccessibleValueInterface" xrefstyle="class" annotations="QAccessibleValueInterface">QAccessibleValueInterface</db:link>
               </db:td>
               <db:td>Implements support for objects that manipulate a value</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaccessiblewidget.webxml" xlink:title="QAccessibleWidget" xrefstyle="class" annotations="QAccessibleWidget">QAccessibleWidget</db:link>
               </db:td>
               <db:td>Implements the QAccessibleInterface for QWidgets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaction.webxml" xlink:title="QAction" xrefstyle="class" annotations="QAction">QAction</db:link>
               </db:td>
               <db:td>Abstract user interface action that can be inserted into widgets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qactionevent.webxml" xlink:title="QActionEvent" xrefstyle="class" annotations="QActionEvent">QActionEvent</db:link>
               </db:td>
               <db:td>Event that is generated when a QAction is added, removed, or changed</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qactiongroup.webxml" xlink:title="QActionGroup" xrefstyle="class" annotations="QActionGroup">QActionGroup</db:link>
               </db:td>
               <db:td>Groups actions together</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidactivityresultreceiver.webxml" xlink:title="QAndroidActivityResultReceiver" xrefstyle="class" annotations="QAndroidActivityResultReceiver">QAndroidActivityResultReceiver</db:link>
               </db:td>
               <db:td>Interface used for callbacks from onActivityResult() in the main Android activity</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidbinder.webxml" xlink:title="QAndroidBinder" xrefstyle="class" annotations="QAndroidBinder">QAndroidBinder</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidintent.webxml" xlink:title="QAndroidIntent" xrefstyle="class" annotations="QAndroidIntent">QAndroidIntent</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidjnienvironment.webxml" xlink:title="QAndroidJniEnvironment" xrefstyle="class" annotations="QAndroidJniEnvironment">QAndroidJniEnvironment</db:link>
               </db:td>
               <db:td>Access to the JNI Environment</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidjniexceptioncleaner.webxml" xlink:title="QAndroidJniExceptionCleaner" xrefstyle="class" annotations="QAndroidJniExceptionCleaner">QAndroidJniExceptionCleaner</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidjniobject.webxml" xlink:title="QAndroidJniObject" xrefstyle="class" annotations="QAndroidJniObject">QAndroidJniObject</db:link>
               </db:td>
               <db:td>Provides APIs to call Java code from C++</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidparcel.webxml" xlink:title="QAndroidParcel" xrefstyle="class" annotations="QAndroidParcel">QAndroidParcel</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidservice.webxml" xlink:title="QAndroidService" xrefstyle="class" annotations="QAndroidService">QAndroidService</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qandroidserviceconnection.webxml" xlink:title="QAndroidServiceConnection" xrefstyle="class" annotations="QAndroidServiceConnection">QAndroidServiceConnection</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qanimationgroup.webxml" xlink:title="QAnimationGroup" xrefstyle="class" annotations="QAnimationGroup">QAnimationGroup</db:link>
               </db:td>
               <db:td>Abstract base class for groups of animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qapplication.webxml" xlink:title="QApplication" xrefstyle="class" annotations="QApplication">QApplication</db:link>
               </db:td>
               <db:td>Manages the GUI application's control flow and main settings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qarealegendmarker.webxml" xlink:title="QAreaLegendMarker" xrefstyle="class" annotations="QAreaLegendMarker">QAreaLegendMarker</db:link>
               </db:td>
               <db:td>Legend marker for an area series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qareaseries.webxml" xlink:title="QAreaSeries" xrefstyle="class" annotations="QAreaSeries">QAreaSeries</db:link>
               </db:td>
               <db:td>Presents data in area charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qassociativeiterable.webxml" xlink:title="QAssociativeIterable" xrefstyle="class" annotations="QAssociativeIterable">QAssociativeIterable</db:link>
               </db:td>
               <db:td>Iterable interface for an associative container in a QVariant</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qassociativeiterable::const_iterator.webxml" xlink:title="QAssociativeIterable::const_iterator" xrefstyle="class" annotations="QAssociativeIterable::const_iterator">QAssociativeIterable::const_iterator</db:link>
               </db:td>
               <db:td>QAssociativeIterable::const_iterator allows iteration over a container in a QVariant</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qatomicint.webxml" xlink:title="QAtomicInt" xrefstyle="class" annotations="QAtomicInt">QAtomicInt</db:link>
               </db:td>
               <db:td>Platform-independent atomic operations on int</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qatomicinteger.webxml" xlink:title="QAtomicInteger" xrefstyle="class" annotations="QAtomicInteger">QAtomicInteger</db:link>
               </db:td>
               <db:td>Platform-independent atomic operations on integers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qatomicpointer.webxml" xlink:title="QAtomicPointer" xrefstyle="class" annotations="QAtomicPointer">QAtomicPointer</db:link>
               </db:td>
               <db:td>Template class that provides platform-independent atomic operations on pointers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaudiobuffer.webxml" xlink:title="QAudioBuffer" xrefstyle="class" annotations="QAudioBuffer">QAudioBuffer</db:link>
               </db:td>
               <db:td>Represents a collection of audio samples with a specific format and sample rate</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qauthenticator.webxml" xlink:title="QAuthenticator" xrefstyle="class" annotations="QAuthenticator">QAuthenticator</db:link>
               </db:td>
               <db:td>Authentication object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxaggregated.webxml" xlink:title="QAxAggregated" xrefstyle="class" annotations="QAxAggregated">QAxAggregated</db:link>
               </db:td>
               <db:td>Abstract base class for implementations of additional COM interfaces</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxbase.webxml" xlink:title="QAxBase" xrefstyle="class" annotations="QAxBase">QAxBase</db:link>
               </db:td>
               <db:td>Abstract class that provides an API to initialize and access a COM object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxbindable.webxml" xlink:title="QAxBindable" xrefstyle="class" annotations="QAxBindable">QAxBindable</db:link>
               </db:td>
               <db:td>Interface between a QWidget and an ActiveX client</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxfactory.webxml" xlink:title="QAxFactory" xrefstyle="class" annotations="QAxFactory">QAxFactory</db:link>
               </db:td>
               <db:td>Defines a factory for the creation of COM components</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxobject.webxml" xlink:title="QAxObject" xrefstyle="class" annotations="QAxObject">QAxObject</db:link>
               </db:td>
               <db:td>QObject that wraps a COM object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxscript.webxml" xlink:title="QAxScript" xrefstyle="class" annotations="QAxScript">QAxScript</db:link>
               </db:td>
               <db:td>Wrapper around script code</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxscriptengine.webxml" xlink:title="QAxScriptEngine" xrefstyle="class" annotations="QAxScriptEngine">QAxScriptEngine</db:link>
               </db:td>
               <db:td>Wrapper around a script engine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxscriptmanager.webxml" xlink:title="QAxScriptManager" xrefstyle="class" annotations="QAxScriptManager">QAxScriptManager</db:link>
               </db:td>
               <db:td>Bridge between application objects and script code</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxselect.webxml" xlink:title="QAxSelect" xrefstyle="class" annotations="QAxSelect">QAxSelect</db:link>
               </db:td>
               <db:td>Selection dialog for registered COM components</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qaxwidget.webxml" xlink:title="QAxWidget" xrefstyle="class" annotations="QAxWidget">QAxWidget</db:link>
               </db:td>
               <db:td>QWidget that wraps an ActiveX control</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>B</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbeinteger.webxml" xlink:title="QBEInteger" xrefstyle="class" annotations="QBEInteger">QBEInteger</db:link>
               </db:td>
               <db:td>Platform-independent big-endian integers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbackingstore.webxml" xlink:title="QBackingStore" xrefstyle="class" annotations="QBackingStore">QBackingStore</db:link>
               </db:td>
               <db:td>Drawing area for QWindow</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbar3dseries.webxml" xlink:title="QBar3DSeries" xrefstyle="class" annotations="QBar3DSeries">QBar3DSeries</db:link>
               </db:td>
               <db:td>Represents a data series in a 3D bar graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbarcategoryaxis.webxml" xlink:title="QBarCategoryAxis" xrefstyle="class" annotations="QBarCategoryAxis">QBarCategoryAxis</db:link>
               </db:td>
               <db:td>Adds categories to a chart's axes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbardataitem.webxml" xlink:title="QBarDataItem" xrefstyle="class" annotations="QBarDataItem">QBarDataItem</db:link>
               </db:td>
               <db:td>Container for resolved data to be added to bar graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbardataproxy.webxml" xlink:title="QBarDataProxy" xrefstyle="class" annotations="QBarDataProxy">QBarDataProxy</db:link>
               </db:td>
               <db:td>The data proxy for a 3D bars graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbarlegendmarker.webxml" xlink:title="QBarLegendMarker" xrefstyle="class" annotations="QBarLegendMarker">QBarLegendMarker</db:link>
               </db:td>
               <db:td>Legend marker for a bar series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbarseries.webxml" xlink:title="QBarSeries" xrefstyle="class" annotations="QBarSeries">QBarSeries</db:link>
               </db:td>
               <db:td>Presents a series of data as vertical bars grouped by category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbarset.webxml" xlink:title="QBarSet" xrefstyle="class" annotations="QBarSet">QBarSet</db:link>
               </db:td>
               <db:td>Represents one set of bars in a bar chart</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbasictimer.webxml" xlink:title="QBasicTimer" xrefstyle="class" annotations="QBasicTimer">QBasicTimer</db:link>
               </db:td>
               <db:td>Timer events for objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbitarray.webxml" xlink:title="QBitArray" xrefstyle="class" annotations="QBitArray">QBitArray</db:link>
               </db:td>
               <db:td>Array of bits</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbitmap.webxml" xlink:title="QBitmap" xrefstyle="class" annotations="QBitmap">QBitmap</db:link>
               </db:td>
               <db:td>Monochrome (1-bit depth) pixmaps</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothaddress.webxml" xlink:title="QBluetoothAddress" xrefstyle="class" annotations="QBluetoothAddress">QBluetoothAddress</db:link>
               </db:td>
               <db:td>Assigns an address to the Bluetooth device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothdevicediscoveryagent.webxml" xlink:title="QBluetoothDeviceDiscoveryAgent" xrefstyle="class" annotations="QBluetoothDeviceDiscoveryAgent">QBluetoothDeviceDiscoveryAgent</db:link>
               </db:td>
               <db:td>Discovers the Bluetooth devices nearby</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothdeviceinfo.webxml" xlink:title="QBluetoothDeviceInfo" xrefstyle="class" annotations="QBluetoothDeviceInfo">QBluetoothDeviceInfo</db:link>
               </db:td>
               <db:td>Stores information about the Bluetooth device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothhostinfo.webxml" xlink:title="QBluetoothHostInfo" xrefstyle="class" annotations="QBluetoothHostInfo">QBluetoothHostInfo</db:link>
               </db:td>
               <db:td>Encapsulates the details of a local QBluetooth device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothlocaldevice.webxml" xlink:title="QBluetoothLocalDevice" xrefstyle="class" annotations="QBluetoothLocalDevice">QBluetoothLocalDevice</db:link>
               </db:td>
               <db:td>Enables access to the local Bluetooth device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothserver.webxml" xlink:title="QBluetoothServer" xrefstyle="class" annotations="QBluetoothServer">QBluetoothServer</db:link>
               </db:td>
               <db:td>Uses the RFCOMM or L2cap protocol to communicate with a Bluetooth device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothservicediscoveryagent.webxml" xlink:title="QBluetoothServiceDiscoveryAgent" xrefstyle="class" annotations="QBluetoothServiceDiscoveryAgent">QBluetoothServiceDiscoveryAgent</db:link>
               </db:td>
               <db:td>Enables you to query for Bluetooth services</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothserviceinfo.webxml" xlink:title="QBluetoothServiceInfo" xrefstyle="class" annotations="QBluetoothServiceInfo">QBluetoothServiceInfo</db:link>
               </db:td>
               <db:td>Enables access to the attributes of a Bluetooth service</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothserviceinfo::alternative.webxml" xlink:title="QBluetoothServiceInfo::Alternative" xrefstyle="class" annotations="QBluetoothServiceInfo::Alternative">QBluetoothServiceInfo::Alternative</db:link>
               </db:td>
               <db:td>Stores attributes of a Bluetooth Data Element Alternative</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothserviceinfo::sequence.webxml" xlink:title="QBluetoothServiceInfo::Sequence" xrefstyle="class" annotations="QBluetoothServiceInfo::Sequence">QBluetoothServiceInfo::Sequence</db:link>
               </db:td>
               <db:td>Stores attributes of a Bluetooth Data Element Sequence</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothsocket.webxml" xlink:title="QBluetoothSocket" xrefstyle="class" annotations="QBluetoothSocket">QBluetoothSocket</db:link>
               </db:td>
               <db:td>Enables connection to a Bluetooth device running a bluetooth server</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothtransfermanager.webxml" xlink:title="QBluetoothTransferManager" xrefstyle="class" annotations="QBluetoothTransferManager">QBluetoothTransferManager</db:link>
               </db:td>
               <db:td>Transfers data to another device using Object Push Profile (OPP)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothtransferreply.webxml" xlink:title="QBluetoothTransferReply" xrefstyle="class" annotations="QBluetoothTransferReply">QBluetoothTransferReply</db:link>
               </db:td>
               <db:td>Stores the response for a data transfer request</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothtransferrequest.webxml" xlink:title="QBluetoothTransferRequest" xrefstyle="class" annotations="QBluetoothTransferRequest">QBluetoothTransferRequest</db:link>
               </db:td>
               <db:td>Stores information about a data transfer request</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbluetoothuuid.webxml" xlink:title="QBluetoothUuid" xrefstyle="class" annotations="QBluetoothUuid">QBluetoothUuid</db:link>
               </db:td>
               <db:td>Generates a UUID for each Bluetooth service</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qboxlayout.webxml" xlink:title="QBoxLayout" xrefstyle="class" annotations="QBoxLayout">QBoxLayout</db:link>
               </db:td>
               <db:td>Lines up child widgets horizontally or vertically</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qboxplotlegendmarker.webxml" xlink:title="QBoxPlotLegendMarker" xrefstyle="class" annotations="QBoxPlotLegendMarker">QBoxPlotLegendMarker</db:link>
               </db:td>
               <db:td>Legend marker for a box plot series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qboxplotseries.webxml" xlink:title="QBoxPlotSeries" xrefstyle="class" annotations="QBoxPlotSeries">QBoxPlotSeries</db:link>
               </db:td>
               <db:td>Presents data in box-and-whiskers charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qboxset.webxml" xlink:title="QBoxSet" xrefstyle="class" annotations="QBoxSet">QBoxSet</db:link>
               </db:td>
               <db:td>Represents one item in a box-and-whiskers chart</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbrush.webxml" xlink:title="QBrush" xrefstyle="class" annotations="QBrush">QBrush</db:link>
               </db:td>
               <db:td>Defines the fill pattern of shapes drawn by QPainter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbuffer.webxml" xlink:title="QBuffer" xrefstyle="class" annotations="QBuffer">QBuffer</db:link>
               </db:td>
               <db:td>QIODevice interface for a QByteArray</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbytearray.webxml" xlink:title="QByteArray" xrefstyle="class" annotations="QByteArray">QByteArray</db:link>
               </db:td>
               <db:td>Array of bytes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbytearraylist.webxml" xlink:title="QByteArrayList" xrefstyle="class" annotations="QByteArrayList">QByteArrayList</db:link>
               </db:td>
               <db:td>List of byte arrays</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qbytearraymatcher.webxml" xlink:title="QByteArrayMatcher" xrefstyle="class" annotations="QByteArrayMatcher">QByteArrayMatcher</db:link>
               </db:td>
               <db:td>Holds a sequence of bytes that can be quickly matched in a byte array</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>C</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcache.webxml" xlink:title="QCache" xrefstyle="class" annotations="QCache">QCache</db:link>
               </db:td>
               <db:td>Template class that provides a cache</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcalendarwidget.webxml" xlink:title="QCalendarWidget" xrefstyle="class" annotations="QCalendarWidget">QCalendarWidget</db:link>
               </db:td>
               <db:td>Monthly based calendar widget allowing the user to select a date</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcandlesticklegendmarker.webxml" xlink:title="QCandlestickLegendMarker" xrefstyle="class" annotations="QCandlestickLegendMarker">QCandlestickLegendMarker</db:link>
               </db:td>
               <db:td>Legend marker for a candlestick series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcandlestickmodelmapper.webxml" xlink:title="QCandlestickModelMapper" xrefstyle="class" annotations="QCandlestickModelMapper">QCandlestickModelMapper</db:link>
               </db:td>
               <db:td>Abstract model mapper class for candlestick series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcandlestickseries.webxml" xlink:title="QCandlestickSeries" xrefstyle="class" annotations="QCandlestickSeries">QCandlestickSeries</db:link>
               </db:td>
               <db:td>Presents data as candlesticks</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcandlestickset.webxml" xlink:title="QCandlestickSet" xrefstyle="class" annotations="QCandlestickSet">QCandlestickSet</db:link>
               </db:td>
               <db:td>Represents a single candlestick item in a candlestick chart</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcategory3daxis.webxml" xlink:title="QCategory3DAxis" xrefstyle="class" annotations="QCategory3DAxis">QCategory3DAxis</db:link>
               </db:td>
               <db:td>Manipulates an axis of a graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcategoryaxis.webxml" xlink:title="QCategoryAxis" xrefstyle="class" annotations="QCategoryAxis">QCategoryAxis</db:link>
               </db:td>
               <db:td>Places named ranges on the axis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qchar.webxml" xlink:title="QChar" xrefstyle="class" annotations="QChar">QChar</db:link>
               </db:td>
               <db:td>16-bit Unicode character</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qchart.webxml" xlink:title="QChart" xrefstyle="class" annotations="QChart">QChart</db:link>
               </db:td>
               <db:td>Manages the graphical representation of the chart's series, legends, and axes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qchartview.webxml" xlink:title="QChartView" xrefstyle="class" annotations="QChartView">QChartView</db:link>
               </db:td>
               <db:td>Standalone widget that can display charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcheckbox.webxml" xlink:title="QCheckBox" xrefstyle="class" annotations="QCheckBox">QCheckBox</db:link>
               </db:td>
               <db:td>Checkbox with a text label</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qchildevent.webxml" xlink:title="QChildEvent" xrefstyle="class" annotations="QChildEvent">QChildEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for child object events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qclipboard.webxml" xlink:title="QClipboard" xrefstyle="class" annotations="QClipboard">QClipboard</db:link>
               </db:td>
               <db:td>Access to the window system clipboard</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcloseevent.webxml" xlink:title="QCloseEvent" xrefstyle="class" annotations="QCloseEvent">QCloseEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a close event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcollator.webxml" xlink:title="QCollator" xrefstyle="class" annotations="QCollator">QCollator</db:link>
               </db:td>
               <db:td>Compares strings according to a localized collation algorithm</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcollatorsortkey.webxml" xlink:title="QCollatorSortKey" xrefstyle="class" annotations="QCollatorSortKey">QCollatorSortKey</db:link>
               </db:td>
               <db:td>Can be used to speed up string collation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcolor.webxml" xlink:title="QColor" xrefstyle="class" annotations="QColor">QColor</db:link>
               </db:td>
               <db:td>Colors based on RGB, HSV or CMYK values</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcolordialog.webxml" xlink:title="QColorDialog" xrefstyle="class" annotations="QColorDialog">QColorDialog</db:link>
               </db:td>
               <db:td>Dialog widget for specifying colors</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcolormap.webxml" xlink:title="QColormap" xrefstyle="class" annotations="QColormap">QColormap</db:link>
               </db:td>
               <db:td>Maps device independent QColors to device dependent pixel values</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcolumnview.webxml" xlink:title="QColumnView" xrefstyle="class" annotations="QColumnView">QColumnView</db:link>
               </db:td>
               <db:td>Model/view implementation of a column view</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcombobox.webxml" xlink:title="QComboBox" xrefstyle="class" annotations="QComboBox">QComboBox</db:link>
               </db:td>
               <db:td>Combined button and popup list</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcommandlineoption.webxml" xlink:title="QCommandLineOption" xrefstyle="class" annotations="QCommandLineOption">QCommandLineOption</db:link>
               </db:td>
               <db:td>Defines a possible command-line option</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcommandlineparser.webxml" xlink:title="QCommandLineParser" xrefstyle="class" annotations="QCommandLineParser">QCommandLineParser</db:link>
               </db:td>
               <db:td>Means for handling the command line options</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcommandlinkbutton.webxml" xlink:title="QCommandLinkButton" xrefstyle="class" annotations="QCommandLinkButton">QCommandLinkButton</db:link>
               </db:td>
               <db:td>Vista style command link button</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcommonstyle.webxml" xlink:title="QCommonStyle" xrefstyle="class" annotations="QCommonStyle">QCommonStyle</db:link>
               </db:td>
               <db:td>Encapsulates the common Look and Feel of a GUI</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcompleter.webxml" xlink:title="QCompleter" xrefstyle="class" annotations="QCompleter">QCompleter</db:link>
               </db:td>
               <db:td>Completions based on an item model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qconicalgradient.webxml" xlink:title="QConicalGradient" xrefstyle="class" annotations="QConicalGradient">QConicalGradient</db:link>
               </db:td>
               <db:td>Used in combination with QBrush to specify a conical gradient brush</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcontextmenuevent.webxml" xlink:title="QContextMenuEvent" xrefstyle="class" annotations="QContextMenuEvent">QContextMenuEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a context menu event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcontiguouscache.webxml" xlink:title="QContiguousCache" xrefstyle="class" annotations="QContiguousCache">QContiguousCache</db:link>
               </db:td>
               <db:td>Template class that provides a contiguous cache</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcoreapplication.webxml" xlink:title="QCoreApplication" xrefstyle="class" annotations="QCoreApplication">QCoreApplication</db:link>
               </db:td>
               <db:td>Event loop for Qt applications without UI</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcryptographichash.webxml" xlink:title="QCryptographicHash" xrefstyle="class" annotations="QCryptographicHash">QCryptographicHash</db:link>
               </db:td>
               <db:td>Way to generate cryptographic hashes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcursor.webxml" xlink:title="QCursor" xrefstyle="class" annotations="QCursor">QCursor</db:link>
               </db:td>
               <db:td>Mouse cursor with an arbitrary shape</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcustom3ditem.webxml" xlink:title="QCustom3DItem" xrefstyle="class" annotations="QCustom3DItem">QCustom3DItem</db:link>
               </db:td>
               <db:td>Adds a custom item to a graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcustom3dlabel.webxml" xlink:title="QCustom3DLabel" xrefstyle="class" annotations="QCustom3DLabel">QCustom3DLabel</db:link>
               </db:td>
               <db:td>Adds a custom label to a graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qcustom3dvolume.webxml" xlink:title="QCustom3DVolume" xrefstyle="class" annotations="QCustom3DVolume">QCustom3DVolume</db:link>
               </db:td>
               <db:td>Adds a volume rendered object to a graph</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>D</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusabstractadaptor.webxml" xlink:title="QDBusAbstractAdaptor" xrefstyle="class" annotations="QDBusAbstractAdaptor">QDBusAbstractAdaptor</db:link>
               </db:td>
               <db:td>The base class of D-Bus adaptor classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusabstractinterface.webxml" xlink:title="QDBusAbstractInterface" xrefstyle="class" annotations="QDBusAbstractInterface">QDBusAbstractInterface</db:link>
               </db:td>
               <db:td>The base class for all D-Bus interfaces in the Qt D-Bus binding, allowing access to remote interfaces</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusargument.webxml" xlink:title="QDBusArgument" xrefstyle="class" annotations="QDBusArgument">QDBusArgument</db:link>
               </db:td>
               <db:td>Used to marshall and demarshall D-Bus arguments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusconnection.webxml" xlink:title="QDBusConnection" xrefstyle="class" annotations="QDBusConnection">QDBusConnection</db:link>
               </db:td>
               <db:td>Represents a connection to the D-Bus bus daemon</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusconnectioninterface.webxml" xlink:title="QDBusConnectionInterface" xrefstyle="class" annotations="QDBusConnectionInterface">QDBusConnectionInterface</db:link>
               </db:td>
               <db:td>Access to the D-Bus bus daemon service</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbuscontext.webxml" xlink:title="QDBusContext" xrefstyle="class" annotations="QDBusContext">QDBusContext</db:link>
               </db:td>
               <db:td>Allows slots to determine the D-Bus context of the calls</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbuserror.webxml" xlink:title="QDBusError" xrefstyle="class" annotations="QDBusError">QDBusError</db:link>
               </db:td>
               <db:td>Represents an error received from the D-Bus bus or from remote applications found in the bus</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusinterface.webxml" xlink:title="QDBusInterface" xrefstyle="class" annotations="QDBusInterface">QDBusInterface</db:link>
               </db:td>
               <db:td>Proxy for interfaces on remote objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusmessage.webxml" xlink:title="QDBusMessage" xrefstyle="class" annotations="QDBusMessage">QDBusMessage</db:link>
               </db:td>
               <db:td>Represents one message sent or received over the D-Bus bus</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusobjectpath.webxml" xlink:title="QDBusObjectPath" xrefstyle="class" annotations="QDBusObjectPath">QDBusObjectPath</db:link>
               </db:td>
               <db:td>Enables the programmer to identify the OBJECT_PATH type provided by the D-Bus typesystem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbuspendingcall.webxml" xlink:title="QDBusPendingCall" xrefstyle="class" annotations="QDBusPendingCall">QDBusPendingCall</db:link>
               </db:td>
               <db:td>Refers to one pending asynchronous call</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbuspendingcallwatcher.webxml" xlink:title="QDBusPendingCallWatcher" xrefstyle="class" annotations="QDBusPendingCallWatcher">QDBusPendingCallWatcher</db:link>
               </db:td>
               <db:td>Convenient way for waiting for asynchronous replies</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbuspendingreply.webxml" xlink:title="QDBusPendingReply" xrefstyle="class" annotations="QDBusPendingReply">QDBusPendingReply</db:link>
               </db:td>
               <db:td>Contains the reply to an asynchronous method call</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusreply.webxml" xlink:title="QDBusReply" xrefstyle="class" annotations="QDBusReply">QDBusReply</db:link>
               </db:td>
               <db:td>Stores the reply for a method call to a remote object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusserver.webxml" xlink:title="QDBusServer" xrefstyle="class" annotations="QDBusServer">QDBusServer</db:link>
               </db:td>
               <db:td>Peer-to-peer communication between processes on the same computer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusservicewatcher.webxml" xlink:title="QDBusServiceWatcher" xrefstyle="class" annotations="QDBusServiceWatcher">QDBusServiceWatcher</db:link>
               </db:td>
               <db:td>Allows the user to watch for a bus service change</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbussignature.webxml" xlink:title="QDBusSignature" xrefstyle="class" annotations="QDBusSignature">QDBusSignature</db:link>
               </db:td>
               <db:td>Enables the programmer to identify the SIGNATURE type provided by the D-Bus typesystem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusunixfiledescriptor.webxml" xlink:title="QDBusUnixFileDescriptor" xrefstyle="class" annotations="QDBusUnixFileDescriptor">QDBusUnixFileDescriptor</db:link>
               </db:td>
               <db:td>Holds one Unix file descriptor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusvariant.webxml" xlink:title="QDBusVariant" xrefstyle="class" annotations="QDBusVariant">QDBusVariant</db:link>
               </db:td>
               <db:td>Enables the programmer to identify the variant type provided by the D-Bus typesystem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdbusvirtualobject.webxml" xlink:title="QDBusVirtualObject" xrefstyle="class" annotations="QDBusVirtualObject">QDBusVirtualObject</db:link>
               </db:td>
               <db:td>Used to handle several DBus paths with one class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdatastream.webxml" xlink:title="QDataStream" xrefstyle="class" annotations="QDataStream">QDataStream</db:link>
               </db:td>
               <db:td>Serialization of binary data to a QIODevice</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdatawidgetmapper.webxml" xlink:title="QDataWidgetMapper" xrefstyle="class" annotations="QDataWidgetMapper">QDataWidgetMapper</db:link>
               </db:td>
               <db:td>Mapping between a section of a data model to widgets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdate.webxml" xlink:title="QDate" xrefstyle="class" annotations="QDate">QDate</db:link>
               </db:td>
               <db:td>Date functions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdateedit.webxml" xlink:title="QDateEdit" xrefstyle="class" annotations="QDateEdit">QDateEdit</db:link>
               </db:td>
               <db:td>Widget for editing dates based on the QDateTimeEdit widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdatetime.webxml" xlink:title="QDateTime" xrefstyle="class" annotations="QDateTime">QDateTime</db:link>
               </db:td>
               <db:td>Date and time functions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdatetimeaxis.webxml" xlink:title="QDateTimeAxis" xrefstyle="class" annotations="QDateTimeAxis">QDateTimeAxis</db:link>
               </db:td>
               <db:td>Adds dates and times to a chart's axis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdatetimeedit.webxml" xlink:title="QDateTimeEdit" xrefstyle="class" annotations="QDateTimeEdit">QDateTimeEdit</db:link>
               </db:td>
               <db:td>Widget for editing dates and times</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdeadlinetimer.webxml" xlink:title="QDeadlineTimer" xrefstyle="class" annotations="QDeadlineTimer">QDeadlineTimer</db:link>
               </db:td>
               <db:td>Marks a deadline in the future</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdebug.webxml" xlink:title="QDebug" xrefstyle="class" annotations="QDebug">QDebug</db:link>
               </db:td>
               <db:td>Output stream for debugging information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdebugstatesaver.webxml" xlink:title="QDebugStateSaver" xrefstyle="class" annotations="QDebugStateSaver">QDebugStateSaver</db:link>
               </db:td>
               <db:td>Convenience class for custom QDebug operators</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesigneractioneditorinterface.webxml" xlink:title="QDesignerActionEditorInterface" xrefstyle="class" annotations="QDesignerActionEditorInterface">QDesignerActionEditorInterface</db:link>
               </db:td>
               <db:td>Allows you to change the focus of Qt Designer's action editor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignercustomwidgetcollectioninterface.webxml" xlink:title="QDesignerCustomWidgetCollectionInterface" xrefstyle="class" annotations="QDesignerCustomWidgetCollectionInterface">QDesignerCustomWidgetCollectionInterface</db:link>
               </db:td>
               <db:td>Allows you to include several custom widgets in one single library</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignercustomwidgetinterface.webxml" xlink:title="QDesignerCustomWidgetInterface" xrefstyle="class" annotations="QDesignerCustomWidgetInterface">QDesignerCustomWidgetInterface</db:link>
               </db:td>
               <db:td>Enables Qt Designer to access and construct custom widgets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerdynamicpropertysheetextension.webxml" xlink:title="QDesignerDynamicPropertySheetExtension" xrefstyle="class" annotations="QDesignerDynamicPropertySheetExtension">QDesignerDynamicPropertySheetExtension</db:link>
               </db:td>
               <db:td>Allows you to manipulate a widget's dynamic properties in Qt Designer's property editor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerformeditorinterface.webxml" xlink:title="QDesignerFormEditorInterface" xrefstyle="class" annotations="QDesignerFormEditorInterface">QDesignerFormEditorInterface</db:link>
               </db:td>
               <db:td>Allows you to access Qt Designer's various components</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerformwindowcursorinterface.webxml" xlink:title="QDesignerFormWindowCursorInterface" xrefstyle="class" annotations="QDesignerFormWindowCursorInterface">QDesignerFormWindowCursorInterface</db:link>
               </db:td>
               <db:td>Allows you to query and modify a form window's widget selection, and in addition modify the properties of all the form's widgets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerformwindowinterface.webxml" xlink:title="QDesignerFormWindowInterface" xrefstyle="class" annotations="QDesignerFormWindowInterface">QDesignerFormWindowInterface</db:link>
               </db:td>
               <db:td>Allows you to query and manipulate form windows appearing in Qt Designer's workspace</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerformwindowmanagerinterface.webxml" xlink:title="QDesignerFormWindowManagerInterface" xrefstyle="class" annotations="QDesignerFormWindowManagerInterface">QDesignerFormWindowManagerInterface</db:link>
               </db:td>
               <db:td>Allows you to manipulate the collection of form windows in Qt Designer, and control Qt Designer's form editing actions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerobjectinspectorinterface.webxml" xlink:title="QDesignerObjectInspectorInterface" xrefstyle="class" annotations="QDesignerObjectInspectorInterface">QDesignerObjectInspectorInterface</db:link>
               </db:td>
               <db:td>Allows you to change the focus of Qt Designer's object inspector</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerpropertyeditorinterface.webxml" xlink:title="QDesignerPropertyEditorInterface" xrefstyle="class" annotations="QDesignerPropertyEditorInterface">QDesignerPropertyEditorInterface</db:link>
               </db:td>
               <db:td>Allows you to query and manipulate the current state of Qt Designer's property editor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerpropertysheetextension.webxml" xlink:title="QDesignerPropertySheetExtension" xrefstyle="class" annotations="QDesignerPropertySheetExtension">QDesignerPropertySheetExtension</db:link>
               </db:td>
               <db:td>Allows you to manipulate a widget's properties which is displayed in Qt Designer's property editor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignertaskmenuextension.webxml" xlink:title="QDesignerTaskMenuExtension" xrefstyle="class" annotations="QDesignerTaskMenuExtension">QDesignerTaskMenuExtension</db:link>
               </db:td>
               <db:td>Allows you to add custom menu entries to Qt Designer's task menu</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesignerwidgetboxinterface.webxml" xlink:title="QDesignerWidgetBoxInterface" xrefstyle="class" annotations="QDesignerWidgetBoxInterface">QDesignerWidgetBoxInterface</db:link>
               </db:td>
               <db:td>Allows you to control the contents of Qt Designer's widget box</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesktopservices.webxml" xlink:title="QDesktopServices" xrefstyle="class" annotations="QDesktopServices">QDesktopServices</db:link>
               </db:td>
               <db:td>Methods for accessing common desktop services</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdesktopwidget.webxml" xlink:title="QDesktopWidget" xrefstyle="class" annotations="QDesktopWidget">QDesktopWidget</db:link>
               </db:td>
               <db:td>Access to screen information on multi-head systems</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdial.webxml" xlink:title="QDial" xrefstyle="class" annotations="QDial">QDial</db:link>
               </db:td>
               <db:td>Rounded range control (like a speedometer or potentiometer)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdialog.webxml" xlink:title="QDialog" xrefstyle="class" annotations="QDialog">QDialog</db:link>
               </db:td>
               <db:td>The base class of dialog windows</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdialogbuttonbox.webxml" xlink:title="QDialogButtonBox" xrefstyle="class" annotations="QDialogButtonBox">QDialogButtonBox</db:link>
               </db:td>
               <db:td>Widget that presents buttons in a layout that is appropriate to the current widget style</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdir.webxml" xlink:title="QDir" xrefstyle="class" annotations="QDir">QDir</db:link>
               </db:td>
               <db:td>Access to directory structures and their contents</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdiriterator.webxml" xlink:title="QDirIterator" xrefstyle="class" annotations="QDirIterator">QDirIterator</db:link>
               </db:td>
               <db:td>Iterator for directory entrylists</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdirmodel.webxml" xlink:title="QDirModel" xrefstyle="class" annotations="QDirModel">QDirModel</db:link>
               </db:td>
               <db:td>Data model for the local filesystem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdnsdomainnamerecord.webxml" xlink:title="QDnsDomainNameRecord" xrefstyle="class" annotations="QDnsDomainNameRecord">QDnsDomainNameRecord</db:link>
               </db:td>
               <db:td>Stores information about a domain name record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdnshostaddressrecord.webxml" xlink:title="QDnsHostAddressRecord" xrefstyle="class" annotations="QDnsHostAddressRecord">QDnsHostAddressRecord</db:link>
               </db:td>
               <db:td>Stores information about a host address record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdnslookup.webxml" xlink:title="QDnsLookup" xrefstyle="class" annotations="QDnsLookup">QDnsLookup</db:link>
               </db:td>
               <db:td>Represents a DNS lookup</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdnsmailexchangerecord.webxml" xlink:title="QDnsMailExchangeRecord" xrefstyle="class" annotations="QDnsMailExchangeRecord">QDnsMailExchangeRecord</db:link>
               </db:td>
               <db:td>Stores information about a DNS MX record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdnsservicerecord.webxml" xlink:title="QDnsServiceRecord" xrefstyle="class" annotations="QDnsServiceRecord">QDnsServiceRecord</db:link>
               </db:td>
               <db:td>Stores information about a DNS SRV record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdnstextrecord.webxml" xlink:title="QDnsTextRecord" xrefstyle="class" annotations="QDnsTextRecord">QDnsTextRecord</db:link>
               </db:td>
               <db:td>Stores information about a DNS TXT record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdockwidget.webxml" xlink:title="QDockWidget" xrefstyle="class" annotations="QDockWidget">QDockWidget</db:link>
               </db:td>
               <db:td>Widget that can be docked inside a QMainWindow or floated as a top-level window on the desktop</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomattr.webxml" xlink:title="QDomAttr" xrefstyle="class" annotations="QDomAttr">QDomAttr</db:link>
               </db:td>
               <db:td>Represents one attribute of a QDomElement</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomcdatasection.webxml" xlink:title="QDomCDATASection" xrefstyle="class" annotations="QDomCDATASection">QDomCDATASection</db:link>
               </db:td>
               <db:td>Represents an XML CDATA section</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomcharacterdata.webxml" xlink:title="QDomCharacterData" xrefstyle="class" annotations="QDomCharacterData">QDomCharacterData</db:link>
               </db:td>
               <db:td>Represents a generic string in the DOM</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomcomment.webxml" xlink:title="QDomComment" xrefstyle="class" annotations="QDomComment">QDomComment</db:link>
               </db:td>
               <db:td>Represents an XML comment</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomdocument.webxml" xlink:title="QDomDocument" xrefstyle="class" annotations="QDomDocument">QDomDocument</db:link>
               </db:td>
               <db:td>Represents an XML document</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomdocumentfragment.webxml" xlink:title="QDomDocumentFragment" xrefstyle="class" annotations="QDomDocumentFragment">QDomDocumentFragment</db:link>
               </db:td>
               <db:td>Tree of QDomNodes which is not usually a complete QDomDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomdocumenttype.webxml" xlink:title="QDomDocumentType" xrefstyle="class" annotations="QDomDocumentType">QDomDocumentType</db:link>
               </db:td>
               <db:td>The representation of the DTD in the document tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomelement.webxml" xlink:title="QDomElement" xrefstyle="class" annotations="QDomElement">QDomElement</db:link>
               </db:td>
               <db:td>Represents one element in the DOM tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomentity.webxml" xlink:title="QDomEntity" xrefstyle="class" annotations="QDomEntity">QDomEntity</db:link>
               </db:td>
               <db:td>Represents an XML entity</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomentityreference.webxml" xlink:title="QDomEntityReference" xrefstyle="class" annotations="QDomEntityReference">QDomEntityReference</db:link>
               </db:td>
               <db:td>Represents an XML entity reference</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomimplementation.webxml" xlink:title="QDomImplementation" xrefstyle="class" annotations="QDomImplementation">QDomImplementation</db:link>
               </db:td>
               <db:td>Information about the features of the DOM implementation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnamednodemap.webxml" xlink:title="QDomNamedNodeMap" xrefstyle="class" annotations="QDomNamedNodeMap">QDomNamedNodeMap</db:link>
               </db:td>
               <db:td>Contains a collection of nodes that can be accessed by name</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnode.webxml" xlink:title="QDomNode" xrefstyle="class" annotations="QDomNode">QDomNode</db:link>
               </db:td>
               <db:td>The base class for all the nodes in a DOM tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnodelist.webxml" xlink:title="QDomNodeList" xrefstyle="class" annotations="QDomNodeList">QDomNodeList</db:link>
               </db:td>
               <db:td>List of QDomNode objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomnotation.webxml" xlink:title="QDomNotation" xrefstyle="class" annotations="QDomNotation">QDomNotation</db:link>
               </db:td>
               <db:td>Represents an XML notation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomprocessinginstruction.webxml" xlink:title="QDomProcessingInstruction" xrefstyle="class" annotations="QDomProcessingInstruction">QDomProcessingInstruction</db:link>
               </db:td>
               <db:td>Represents an XML processing instruction</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdomtext.webxml" xlink:title="QDomText" xrefstyle="class" annotations="QDomText">QDomText</db:link>
               </db:td>
               <db:td>Represents text data in the parsed XML document</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdoublespinbox.webxml" xlink:title="QDoubleSpinBox" xrefstyle="class" annotations="QDoubleSpinBox">QDoubleSpinBox</db:link>
               </db:td>
               <db:td>Spin box widget that takes doubles</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdoublevalidator.webxml" xlink:title="QDoubleValidator" xrefstyle="class" annotations="QDoubleValidator">QDoubleValidator</db:link>
               </db:td>
               <db:td>Range checking of floating-point numbers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdrag.webxml" xlink:title="QDrag" xrefstyle="class" annotations="QDrag">QDrag</db:link>
               </db:td>
               <db:td>Support for MIME-based drag and drop data transfer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdragenterevent.webxml" xlink:title="QDragEnterEvent" xrefstyle="class" annotations="QDragEnterEvent">QDragEnterEvent</db:link>
               </db:td>
               <db:td>Event which is sent to a widget when a drag and drop action enters it</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdragleaveevent.webxml" xlink:title="QDragLeaveEvent" xrefstyle="class" annotations="QDragLeaveEvent">QDragLeaveEvent</db:link>
               </db:td>
               <db:td>Event that is sent to a widget when a drag and drop action leaves it</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdragmoveevent.webxml" xlink:title="QDragMoveEvent" xrefstyle="class" annotations="QDragMoveEvent">QDragMoveEvent</db:link>
               </db:td>
               <db:td>Event which is sent while a drag and drop action is in progress</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdropevent.webxml" xlink:title="QDropEvent" xrefstyle="class" annotations="QDropEvent">QDropEvent</db:link>
               </db:td>
               <db:td>Event which is sent when a drag and drop action is completed</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qdynamicpropertychangeevent.webxml" xlink:title="QDynamicPropertyChangeEvent" xrefstyle="class" annotations="QDynamicPropertyChangeEvent">QDynamicPropertyChangeEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for dynamic property change events</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>E</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qeasingcurve.webxml" xlink:title="QEasingCurve" xrefstyle="class" annotations="QEasingCurve">QEasingCurve</db:link>
               </db:td>
               <db:td>Easing curves for controlling animation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qelapsedtimer.webxml" xlink:title="QElapsedTimer" xrefstyle="class" annotations="QElapsedTimer">QElapsedTimer</db:link>
               </db:td>
               <db:td>Fast way to calculate elapsed times</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qenablesharedfromthis.webxml" xlink:title="QEnableSharedFromThis" xrefstyle="class" annotations="QEnableSharedFromThis">QEnableSharedFromThis</db:link>
               </db:td>
               <db:td>A base class that allows obtaining a QSharedPointer for an object already managed by a shared pointer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qenterevent.webxml" xlink:title="QEnterEvent" xrefstyle="class" annotations="QEnterEvent">QEnterEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe an enter event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qerrormessage.webxml" xlink:title="QErrorMessage" xrefstyle="class" annotations="QErrorMessage">QErrorMessage</db:link>
               </db:td>
               <db:td>Error message display dialog</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qevent.webxml" xlink:title="QEvent" xrefstyle="class" annotations="QEvent">QEvent</db:link>
               </db:td>
               <db:td>The base class of all event classes. Event objects contain event parameters</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qeventloop.webxml" xlink:title="QEventLoop" xrefstyle="class" annotations="QEventLoop">QEventLoop</db:link>
               </db:td>
               <db:td>Means of entering and leaving an event loop</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qeventlooplocker.webxml" xlink:title="QEventLoopLocker" xrefstyle="class" annotations="QEventLoopLocker">QEventLoopLocker</db:link>
               </db:td>
               <db:td>Means to quit an event loop when it is no longer needed</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qeventtransition.webxml" xlink:title="QEventTransition" xrefstyle="class" annotations="QEventTransition">QEventTransition</db:link>
               </db:td>
               <db:td>QObject-specific transition for Qt events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qexception.webxml" xlink:title="QException" xrefstyle="class" annotations="QException">QException</db:link>
               </db:td>
               <db:td>Base class for exceptions that can transferred across threads</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qexplicitlyshareddatapointer.webxml" xlink:title="QExplicitlySharedDataPointer" xrefstyle="class" annotations="QExplicitlySharedDataPointer">QExplicitlySharedDataPointer</db:link>
               </db:td>
               <db:td>Represents a pointer to an explicitly shared object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qexposeevent.webxml" xlink:title="QExposeEvent" xrefstyle="class" annotations="QExposeEvent">QExposeEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for expose events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qextensionfactory.webxml" xlink:title="QExtensionFactory" xrefstyle="class" annotations="QExtensionFactory">QExtensionFactory</db:link>
               </db:td>
               <db:td>Allows you to create a factory that is able to make instances of custom extensions in Qt Designer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qextensionmanager.webxml" xlink:title="QExtensionManager" xrefstyle="class" annotations="QExtensionManager">QExtensionManager</db:link>
               </db:td>
               <db:td>Extension management facilities for Qt Designer</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>F</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfile.webxml" xlink:title="QFile" xrefstyle="class" annotations="QFile">QFile</db:link>
               </db:td>
               <db:td>Interface for reading from and writing to files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfiledevice.webxml" xlink:title="QFileDevice" xrefstyle="class" annotations="QFileDevice">QFileDevice</db:link>
               </db:td>
               <db:td>Interface for reading from and writing to open files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfiledialog.webxml" xlink:title="QFileDialog" xrefstyle="class" annotations="QFileDialog">QFileDialog</db:link>
               </db:td>
               <db:td>Dialog that allow users to select files or directories</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfileiconprovider.webxml" xlink:title="QFileIconProvider" xrefstyle="class" annotations="QFileIconProvider">QFileIconProvider</db:link>
               </db:td>
               <db:td>File icons for the QDirModel and the QFileSystemModel classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfileinfo.webxml" xlink:title="QFileInfo" xrefstyle="class" annotations="QFileInfo">QFileInfo</db:link>
               </db:td>
               <db:td>System-independent file information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfileopenevent.webxml" xlink:title="QFileOpenEvent" xrefstyle="class" annotations="QFileOpenEvent">QFileOpenEvent</db:link>
               </db:td>
               <db:td>Event that will be sent when there is a request to open a file or a URL</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfileselector.webxml" xlink:title="QFileSelector" xrefstyle="class" annotations="QFileSelector">QFileSelector</db:link>
               </db:td>
               <db:td>Convenient way of selecting file variants</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfilesystemmodel.webxml" xlink:title="QFileSystemModel" xrefstyle="class" annotations="QFileSystemModel">QFileSystemModel</db:link>
               </db:td>
               <db:td>Data model for the local filesystem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfilesystemwatcher.webxml" xlink:title="QFileSystemWatcher" xrefstyle="class" annotations="QFileSystemWatcher">QFileSystemWatcher</db:link>
               </db:td>
               <db:td>Interface for monitoring files and directories for modifications</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfinalstate.webxml" xlink:title="QFinalState" xrefstyle="class" annotations="QFinalState">QFinalState</db:link>
               </db:td>
               <db:td>Final state</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qflag.webxml" xlink:title="QFlag" xrefstyle="class" annotations="QFlag">QFlag</db:link>
               </db:td>
               <db:td>Helper data type for QFlags</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qflags.webxml" xlink:title="QFlags" xrefstyle="class" annotations="QFlags">QFlags</db:link>
               </db:td>
               <db:td>Type-safe way of storing OR-combinations of enum values</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfocusevent.webxml" xlink:title="QFocusEvent" xrefstyle="class" annotations="QFocusEvent">QFocusEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for widget focus events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfocusframe.webxml" xlink:title="QFocusFrame" xrefstyle="class" annotations="QFocusFrame">QFocusFrame</db:link>
               </db:td>
               <db:td>Focus frame which can be outside of a widget's normal paintable area</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfont.webxml" xlink:title="QFont" xrefstyle="class" annotations="QFont">QFont</db:link>
               </db:td>
               <db:td>Specifies a font used for drawing text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfontcombobox.webxml" xlink:title="QFontComboBox" xrefstyle="class" annotations="QFontComboBox">QFontComboBox</db:link>
               </db:td>
               <db:td>Combobox that lets the user select a font family</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfontdatabase.webxml" xlink:title="QFontDatabase" xrefstyle="class" annotations="QFontDatabase">QFontDatabase</db:link>
               </db:td>
               <db:td>Information about the fonts available in the underlying window system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfontdialog.webxml" xlink:title="QFontDialog" xrefstyle="class" annotations="QFontDialog">QFontDialog</db:link>
               </db:td>
               <db:td>Dialog widget for selecting a font</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfontinfo.webxml" xlink:title="QFontInfo" xrefstyle="class" annotations="QFontInfo">QFontInfo</db:link>
               </db:td>
               <db:td>General information about fonts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfontmetrics.webxml" xlink:title="QFontMetrics" xrefstyle="class" annotations="QFontMetrics">QFontMetrics</db:link>
               </db:td>
               <db:td>Font metrics information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfontmetricsf.webxml" xlink:title="QFontMetricsF" xrefstyle="class" annotations="QFontMetricsF">QFontMetricsF</db:link>
               </db:td>
               <db:td>Font metrics information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qformbuilder.webxml" xlink:title="QFormBuilder" xrefstyle="class" annotations="QFormBuilder">QFormBuilder</db:link>
               </db:td>
               <db:td>Used to dynamically construct user interfaces from UI files at run-time</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qformlayout.webxml" xlink:title="QFormLayout" xrefstyle="class" annotations="QFormLayout">QFormLayout</db:link>
               </db:td>
               <db:td>Manages forms of input widgets and their associated labels</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qformlayout::takerowresult.webxml" xlink:title="QFormLayout::TakeRowResult" xrefstyle="class" annotations="QFormLayout::TakeRowResult">QFormLayout::TakeRowResult</db:link>
               </db:td>
               <db:td>Contains the result of a QFormLayout::takeRow() call</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qframe.webxml" xlink:title="QFrame" xrefstyle="class" annotations="QFrame">QFrame</db:link>
               </db:td>
               <db:td>The base class of widgets that can have a frame</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qfuturewatcher.webxml" xlink:title="QFutureWatcher" xrefstyle="class" annotations="QFutureWatcher">QFutureWatcher</db:link>
               </db:td>
               <db:td>Allows monitoring a QFuture using signals and slots</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>G</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglbuffer.webxml" xlink:title="QGLBuffer" xrefstyle="class" annotations="QGLBuffer">QGLBuffer</db:link>
               </db:td>
               <db:td>Functions for creating and managing GL buffer objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglcolormap.webxml" xlink:title="QGLColormap" xrefstyle="class" annotations="QGLColormap">QGLColormap</db:link>
               </db:td>
               <db:td>Used for installing custom colormaps into a QGLWidget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglcolormap::qglcolormapdata.webxml" xlink:title="QGLColormap::QGLColormapData" xrefstyle="class" annotations="QGLColormap::QGLColormapData">QGLColormap::QGLColormapData</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglcontext.webxml" xlink:title="QGLContext" xrefstyle="class" annotations="QGLContext">QGLContext</db:link>
               </db:td>
               <db:td>Encapsulates an OpenGL rendering context</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglformat.webxml" xlink:title="QGLFormat" xrefstyle="class" annotations="QGLFormat">QGLFormat</db:link>
               </db:td>
               <db:td>Specifies the display format of an OpenGL rendering context</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglframebufferobject.webxml" xlink:title="QGLFramebufferObject" xrefstyle="class" annotations="QGLFramebufferObject">QGLFramebufferObject</db:link>
               </db:td>
               <db:td>Encapsulates an OpenGL framebuffer object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglframebufferobjectformat.webxml" xlink:title="QGLFramebufferObjectFormat" xrefstyle="class" annotations="QGLFramebufferObjectFormat">QGLFramebufferObjectFormat</db:link>
               </db:td>
               <db:td>Specifies the format of an OpenGL framebuffer object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglfunctions.webxml" xlink:title="QGLFunctions" xrefstyle="class" annotations="QGLFunctions">QGLFunctions</db:link>
               </db:td>
               <db:td>Cross-platform access to the OpenGL ES 2.0 API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglpixelbuffer.webxml" xlink:title="QGLPixelBuffer" xrefstyle="class" annotations="QGLPixelBuffer">QGLPixelBuffer</db:link>
               </db:td>
               <db:td>Encapsulates an OpenGL pbuffer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglshader.webxml" xlink:title="QGLShader" xrefstyle="class" annotations="QGLShader">QGLShader</db:link>
               </db:td>
               <db:td>Allows OpenGL shaders to be compiled</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglshaderprogram.webxml" xlink:title="QGLShaderProgram" xrefstyle="class" annotations="QGLShaderProgram">QGLShaderProgram</db:link>
               </db:td>
               <db:td>Allows OpenGL shader programs to be linked and used</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglwidget.webxml" xlink:title="QGLWidget" xrefstyle="class" annotations="QGLWidget">QGLWidget</db:link>
               </db:td>
               <db:td>Widget for rendering OpenGL graphics</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgenericargument.webxml" xlink:title="QGenericArgument" xrefstyle="class" annotations="QGenericArgument">QGenericArgument</db:link>
               </db:td>
               <db:td>Internal helper class for marshalling arguments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgenericmatrix.webxml" xlink:title="QGenericMatrix" xrefstyle="class" annotations="QGenericMatrix">QGenericMatrix</db:link>
               </db:td>
               <db:td>Template class that represents a NxM transformation matrix with N columns and M rows</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgenericplugin.webxml" xlink:title="QGenericPlugin" xrefstyle="class" annotations="QGenericPlugin">QGenericPlugin</db:link>
               </db:td>
               <db:td>Abstract base class for plugins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgenericpluginfactory.webxml" xlink:title="QGenericPluginFactory" xrefstyle="class" annotations="QGenericPluginFactory">QGenericPluginFactory</db:link>
               </db:td>
               <db:td>Creates plugin drivers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgenericreturnargument.webxml" xlink:title="QGenericReturnArgument" xrefstyle="class" annotations="QGenericReturnArgument">QGenericReturnArgument</db:link>
               </db:td>
               <db:td>Internal helper class for marshalling arguments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgesture.webxml" xlink:title="QGesture" xrefstyle="class" annotations="QGesture">QGesture</db:link>
               </db:td>
               <db:td>Represents a gesture, containing properties that describe the corresponding user input</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgestureevent.webxml" xlink:title="QGestureEvent" xrefstyle="class" annotations="QGestureEvent">QGestureEvent</db:link>
               </db:td>
               <db:td>The description of triggered gestures</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgesturerecognizer.webxml" xlink:title="QGestureRecognizer" xrefstyle="class" annotations="QGestureRecognizer">QGestureRecognizer</db:link>
               </db:td>
               <db:td>The infrastructure for gesture recognition</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglobalstatic.webxml" xlink:title="QGlobalStatic" xrefstyle="class" annotations="QGlobalStatic">QGlobalStatic</db:link>
               </db:td>
               <db:td>Used to implement a global static object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qglyphrun.webxml" xlink:title="QGlyphRun" xrefstyle="class" annotations="QGlyphRun">QGlyphRun</db:link>
               </db:td>
               <db:td>Direct access to the internal glyphs in a font</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgradient.webxml" xlink:title="QGradient" xrefstyle="class" annotations="QGradient">QGradient</db:link>
               </db:td>
               <db:td>Used in combination with QBrush to specify gradient fills</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsanchor.webxml" xlink:title="QGraphicsAnchor" xrefstyle="class" annotations="QGraphicsAnchor">QGraphicsAnchor</db:link>
               </db:td>
               <db:td>Represents an anchor between two items in a QGraphicsAnchorLayout</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsanchorlayout.webxml" xlink:title="QGraphicsAnchorLayout" xrefstyle="class" annotations="QGraphicsAnchorLayout">QGraphicsAnchorLayout</db:link>
               </db:td>
               <db:td>Layout where one can anchor widgets together in Graphics View</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsblureffect.webxml" xlink:title="QGraphicsBlurEffect" xrefstyle="class" annotations="QGraphicsBlurEffect">QGraphicsBlurEffect</db:link>
               </db:td>
               <db:td>Blur effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicscolorizeeffect.webxml" xlink:title="QGraphicsColorizeEffect" xrefstyle="class" annotations="QGraphicsColorizeEffect">QGraphicsColorizeEffect</db:link>
               </db:td>
               <db:td>Colorize effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsdropshadoweffect.webxml" xlink:title="QGraphicsDropShadowEffect" xrefstyle="class" annotations="QGraphicsDropShadowEffect">QGraphicsDropShadowEffect</db:link>
               </db:td>
               <db:td>Drop shadow effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicseffect.webxml" xlink:title="QGraphicsEffect" xrefstyle="class" annotations="QGraphicsEffect">QGraphicsEffect</db:link>
               </db:td>
               <db:td>The base class for all graphics effects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsellipseitem.webxml" xlink:title="QGraphicsEllipseItem" xrefstyle="class" annotations="QGraphicsEllipseItem">QGraphicsEllipseItem</db:link>
               </db:td>
               <db:td>Ellipse item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsgridlayout.webxml" xlink:title="QGraphicsGridLayout" xrefstyle="class" annotations="QGraphicsGridLayout">QGraphicsGridLayout</db:link>
               </db:td>
               <db:td>Grid layout for managing widgets in Graphics View</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsitem.webxml" xlink:title="QGraphicsItem" xrefstyle="class" annotations="QGraphicsItem">QGraphicsItem</db:link>
               </db:td>
               <db:td>The base class for all graphical items in a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsitemanimation.webxml" xlink:title="QGraphicsItemAnimation" xrefstyle="class" annotations="QGraphicsItemAnimation">QGraphicsItemAnimation</db:link>
               </db:td>
               <db:td>Simple animation support for QGraphicsItem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsitemgroup.webxml" xlink:title="QGraphicsItemGroup" xrefstyle="class" annotations="QGraphicsItemGroup">QGraphicsItemGroup</db:link>
               </db:td>
               <db:td>Container that treats a group of items as a single item</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicslayout.webxml" xlink:title="QGraphicsLayout" xrefstyle="class" annotations="QGraphicsLayout">QGraphicsLayout</db:link>
               </db:td>
               <db:td>The base class for all layouts in Graphics View</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicslayoutitem.webxml" xlink:title="QGraphicsLayoutItem" xrefstyle="class" annotations="QGraphicsLayoutItem">QGraphicsLayoutItem</db:link>
               </db:td>
               <db:td>Can be inherited to allow your custom items to be managed by layouts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicslineitem.webxml" xlink:title="QGraphicsLineItem" xrefstyle="class" annotations="QGraphicsLineItem">QGraphicsLineItem</db:link>
               </db:td>
               <db:td>Line item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicslinearlayout.webxml" xlink:title="QGraphicsLinearLayout" xrefstyle="class" annotations="QGraphicsLinearLayout">QGraphicsLinearLayout</db:link>
               </db:td>
               <db:td>Horizontal or vertical layout for managing widgets in Graphics View</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsobject.webxml" xlink:title="QGraphicsObject" xrefstyle="class" annotations="QGraphicsObject">QGraphicsObject</db:link>
               </db:td>
               <db:td>Base class for all graphics items that require signals, slots and properties</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsopacityeffect.webxml" xlink:title="QGraphicsOpacityEffect" xrefstyle="class" annotations="QGraphicsOpacityEffect">QGraphicsOpacityEffect</db:link>
               </db:td>
               <db:td>Opacity effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicspathitem.webxml" xlink:title="QGraphicsPathItem" xrefstyle="class" annotations="QGraphicsPathItem">QGraphicsPathItem</db:link>
               </db:td>
               <db:td>Path item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicspixmapitem.webxml" xlink:title="QGraphicsPixmapItem" xrefstyle="class" annotations="QGraphicsPixmapItem">QGraphicsPixmapItem</db:link>
               </db:td>
               <db:td>Pixmap item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicspolygonitem.webxml" xlink:title="QGraphicsPolygonItem" xrefstyle="class" annotations="QGraphicsPolygonItem">QGraphicsPolygonItem</db:link>
               </db:td>
               <db:td>Polygon item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsproxywidget.webxml" xlink:title="QGraphicsProxyWidget" xrefstyle="class" annotations="QGraphicsProxyWidget">QGraphicsProxyWidget</db:link>
               </db:td>
               <db:td>Proxy layer for embedding a QWidget in a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsrectitem.webxml" xlink:title="QGraphicsRectItem" xrefstyle="class" annotations="QGraphicsRectItem">QGraphicsRectItem</db:link>
               </db:td>
               <db:td>Rectangle item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsrotation.webxml" xlink:title="QGraphicsRotation" xrefstyle="class" annotations="QGraphicsRotation">QGraphicsRotation</db:link>
               </db:td>
               <db:td>Rotation transformation around a given axis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscale.webxml" xlink:title="QGraphicsScale" xrefstyle="class" annotations="QGraphicsScale">QGraphicsScale</db:link>
               </db:td>
               <db:td>Scale transformation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscene.webxml" xlink:title="QGraphicsScene" xrefstyle="class" annotations="QGraphicsScene">QGraphicsScene</db:link>
               </db:td>
               <db:td>Surface for managing a large number of 2D graphical items</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenecontextmenuevent.webxml" xlink:title="QGraphicsSceneContextMenuEvent" xrefstyle="class" annotations="QGraphicsSceneContextMenuEvent">QGraphicsSceneContextMenuEvent</db:link>
               </db:td>
               <db:td>Context menu events in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenedragdropevent.webxml" xlink:title="QGraphicsSceneDragDropEvent" xrefstyle="class" annotations="QGraphicsSceneDragDropEvent">QGraphicsSceneDragDropEvent</db:link>
               </db:td>
               <db:td>Events for drag and drop in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicssceneevent.webxml" xlink:title="QGraphicsSceneEvent" xrefstyle="class" annotations="QGraphicsSceneEvent">QGraphicsSceneEvent</db:link>
               </db:td>
               <db:td>Base class for all graphics view related events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenehelpevent.webxml" xlink:title="QGraphicsSceneHelpEvent" xrefstyle="class" annotations="QGraphicsSceneHelpEvent">QGraphicsSceneHelpEvent</db:link>
               </db:td>
               <db:td>Events when a tooltip is requested</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenehoverevent.webxml" xlink:title="QGraphicsSceneHoverEvent" xrefstyle="class" annotations="QGraphicsSceneHoverEvent">QGraphicsSceneHoverEvent</db:link>
               </db:td>
               <db:td>Hover events in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenemouseevent.webxml" xlink:title="QGraphicsSceneMouseEvent" xrefstyle="class" annotations="QGraphicsSceneMouseEvent">QGraphicsSceneMouseEvent</db:link>
               </db:td>
               <db:td>Mouse events in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenemoveevent.webxml" xlink:title="QGraphicsSceneMoveEvent" xrefstyle="class" annotations="QGraphicsSceneMoveEvent">QGraphicsSceneMoveEvent</db:link>
               </db:td>
               <db:td>Events for widget moving in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicssceneresizeevent.webxml" xlink:title="QGraphicsSceneResizeEvent" xrefstyle="class" annotations="QGraphicsSceneResizeEvent">QGraphicsSceneResizeEvent</db:link>
               </db:td>
               <db:td>Events for widget resizing in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsscenewheelevent.webxml" xlink:title="QGraphicsSceneWheelEvent" xrefstyle="class" annotations="QGraphicsSceneWheelEvent">QGraphicsSceneWheelEvent</db:link>
               </db:td>
               <db:td>Wheel events in the graphics view framework</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicssimpletextitem.webxml" xlink:title="QGraphicsSimpleTextItem" xrefstyle="class" annotations="QGraphicsSimpleTextItem">QGraphicsSimpleTextItem</db:link>
               </db:td>
               <db:td>Simple text path item that you can add to a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicssvgitem.webxml" xlink:title="QGraphicsSvgItem" xrefstyle="class" annotations="QGraphicsSvgItem">QGraphicsSvgItem</db:link>
               </db:td>
               <db:td>QGraphicsItem that can be used to render the contents of SVG files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicstextitem.webxml" xlink:title="QGraphicsTextItem" xrefstyle="class" annotations="QGraphicsTextItem">QGraphicsTextItem</db:link>
               </db:td>
               <db:td>Text item that you can add to a QGraphicsScene to display formatted text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicstransform.webxml" xlink:title="QGraphicsTransform" xrefstyle="class" annotations="QGraphicsTransform">QGraphicsTransform</db:link>
               </db:td>
               <db:td>Abstract base class for building advanced transformations on QGraphicsItems</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicsview.webxml" xlink:title="QGraphicsView" xrefstyle="class" annotations="QGraphicsView">QGraphicsView</db:link>
               </db:td>
               <db:td>Widget for displaying the contents of a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgraphicswidget.webxml" xlink:title="QGraphicsWidget" xrefstyle="class" annotations="QGraphicsWidget">QGraphicsWidget</db:link>
               </db:td>
               <db:td>The base class for all widget items in a QGraphicsScene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgridlayout.webxml" xlink:title="QGridLayout" xrefstyle="class" annotations="QGridLayout">QGridLayout</db:link>
               </db:td>
               <db:td>Lays out widgets in a grid</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qgroupbox.webxml" xlink:title="QGroupBox" xrefstyle="class" annotations="QGroupBox">QGroupBox</db:link>
               </db:td>
               <db:td>Group box frame with a title</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qguiapplication.webxml" xlink:title="QGuiApplication" xrefstyle="class" annotations="QGuiApplication">QGuiApplication</db:link>
               </db:td>
               <db:td>Manages the GUI application's control flow and main settings</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>H</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhbarmodelmapper.webxml" xlink:title="QHBarModelMapper" xrefstyle="class" annotations="QHBarModelMapper">QHBarModelMapper</db:link>
               </db:td>
               <db:td>Horizontal model mapper for bar series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhboxlayout.webxml" xlink:title="QHBoxLayout" xrefstyle="class" annotations="QHBoxLayout">QHBoxLayout</db:link>
               </db:td>
               <db:td>Lines up widgets horizontally</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhboxplotmodelmapper.webxml" xlink:title="QHBoxPlotModelMapper" xrefstyle="class" annotations="QHBoxPlotModelMapper">QHBoxPlotModelMapper</db:link>
               </db:td>
               <db:td>Horizontal model mapper for box plot series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhcandlestickmodelmapper.webxml" xlink:title="QHCandlestickModelMapper" xrefstyle="class" annotations="QHCandlestickModelMapper">QHCandlestickModelMapper</db:link>
               </db:td>
               <db:td>Horizontal model mapper for a candlestick series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhpiemodelmapper.webxml" xlink:title="QHPieModelMapper" xrefstyle="class" annotations="QHPieModelMapper">QHPieModelMapper</db:link>
               </db:td>
               <db:td>Horizontal model mapper for pie series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhxymodelmapper.webxml" xlink:title="QHXYModelMapper" xrefstyle="class" annotations="QHXYModelMapper">QHXYModelMapper</db:link>
               </db:td>
               <db:td>Horizontal model mapper for line, spline, and scatter series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhash.webxml" xlink:title="QHash" xrefstyle="class" annotations="QHash">QHash</db:link>
               </db:td>
               <db:td>Template class that provides a hash-table-based dictionary</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhash::const_iterator.webxml" xlink:title="QHash::const_iterator" xrefstyle="class" annotations="QHash::const_iterator">QHash::const_iterator</db:link>
               </db:td>
               <db:td>QHash::const_iterator class provides an STL-style const iterator for QHash and QMultiHash</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhash::iterator.webxml" xlink:title="QHash::iterator" xrefstyle="class" annotations="QHash::iterator">QHash::iterator</db:link>
               </db:td>
               <db:td>QHash::iterator class provides an STL-style non-const iterator for QHash and QMultiHash</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhash::key_iterator.webxml" xlink:title="QHash::key_iterator" xrefstyle="class" annotations="QHash::key_iterator">QHash::key_iterator</db:link>
               </db:td>
               <db:td>QHash::key_iterator class provides an STL-style const iterator for QHash and QMultiHash keys</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhashiterator.webxml" xlink:title="QHashIterator" xrefstyle="class" annotations="QHashIterator">QHashIterator</db:link>
               </db:td>
               <db:td>Java-style const iterator for QHash and QMultiHash</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qheaderview.webxml" xlink:title="QHeaderView" xrefstyle="class" annotations="QHeaderView">QHeaderView</db:link>
               </db:td>
               <db:td>Header row or header column for item views</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qheightmapsurfacedataproxy.webxml" xlink:title="QHeightMapSurfaceDataProxy" xrefstyle="class" annotations="QHeightMapSurfaceDataProxy">QHeightMapSurfaceDataProxy</db:link>
               </db:td>
               <db:td>Base proxy class for Q3DSurface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpcontentitem.webxml" xlink:title="QHelpContentItem" xrefstyle="class" annotations="QHelpContentItem">QHelpContentItem</db:link>
               </db:td>
               <db:td>Item for use with QHelpContentModel</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpcontentmodel.webxml" xlink:title="QHelpContentModel" xrefstyle="class" annotations="QHelpContentModel">QHelpContentModel</db:link>
               </db:td>
               <db:td>Model that supplies content to views</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpcontentwidget.webxml" xlink:title="QHelpContentWidget" xrefstyle="class" annotations="QHelpContentWidget">QHelpContentWidget</db:link>
               </db:td>
               <db:td>Tree view for displaying help content model items</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpengine.webxml" xlink:title="QHelpEngine" xrefstyle="class" annotations="QHelpEngine">QHelpEngine</db:link>
               </db:td>
               <db:td>Access to contents and indices of the help engine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpenginecore.webxml" xlink:title="QHelpEngineCore" xrefstyle="class" annotations="QHelpEngineCore">QHelpEngineCore</db:link>
               </db:td>
               <db:td>The core functionality of the help system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpevent.webxml" xlink:title="QHelpEvent" xrefstyle="class" annotations="QHelpEvent">QHelpEvent</db:link>
               </db:td>
               <db:td>Event that is used to request helpful information about a particular point in a widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpindexmodel.webxml" xlink:title="QHelpIndexModel" xrefstyle="class" annotations="QHelpIndexModel">QHelpIndexModel</db:link>
               </db:td>
               <db:td>Model that supplies index keywords to views</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpindexwidget.webxml" xlink:title="QHelpIndexWidget" xrefstyle="class" annotations="QHelpIndexWidget">QHelpIndexWidget</db:link>
               </db:td>
               <db:td>List view displaying the QHelpIndexModel</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpsearchengine.webxml" xlink:title="QHelpSearchEngine" xrefstyle="class" annotations="QHelpSearchEngine">QHelpSearchEngine</db:link>
               </db:td>
               <db:td>Access to widgets reusable to integrate fulltext search as well as to index and search documentation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpsearchquery.webxml" xlink:title="QHelpSearchQuery" xrefstyle="class" annotations="QHelpSearchQuery">QHelpSearchQuery</db:link>
               </db:td>
               <db:td>Contains the field name and the associated search term</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpsearchquerywidget.webxml" xlink:title="QHelpSearchQueryWidget" xrefstyle="class" annotations="QHelpSearchQueryWidget">QHelpSearchQueryWidget</db:link>
               </db:td>
               <db:td>Simple line edit or an advanced widget to enable the user to input a search term in a standardized input mask</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpsearchresult.webxml" xlink:title="QHelpSearchResult" xrefstyle="class" annotations="QHelpSearchResult">QHelpSearchResult</db:link>
               </db:td>
               <db:td>The data associated with the search result</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhelpsearchresultwidget.webxml" xlink:title="QHelpSearchResultWidget" xrefstyle="class" annotations="QHelpSearchResultWidget">QHelpSearchResultWidget</db:link>
               </db:td>
               <db:td>Text browser to display search results</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhideevent.webxml" xlink:title="QHideEvent" xrefstyle="class" annotations="QHideEvent">QHideEvent</db:link>
               </db:td>
               <db:td>Event which is sent after a widget is hidden</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhistorystate.webxml" xlink:title="QHistoryState" xrefstyle="class" annotations="QHistoryState">QHistoryState</db:link>
               </db:td>
               <db:td>Means of returning to a previously active substate</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhorizontalbarseries.webxml" xlink:title="QHorizontalBarSeries" xrefstyle="class" annotations="QHorizontalBarSeries">QHorizontalBarSeries</db:link>
               </db:td>
               <db:td>Presents a series of data as horizontal bars grouped by category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhorizontalpercentbarseries.webxml" xlink:title="QHorizontalPercentBarSeries" xrefstyle="class" annotations="QHorizontalPercentBarSeries">QHorizontalPercentBarSeries</db:link>
               </db:td>
               <db:td>Presents a series of categorized data as a percentage of each category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhorizontalstackedbarseries.webxml" xlink:title="QHorizontalStackedBarSeries" xrefstyle="class" annotations="QHorizontalStackedBarSeries">QHorizontalStackedBarSeries</db:link>
               </db:td>
               <db:td>Presents a series of data as horizontally stacked bars, with one bar per category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhostaddress.webxml" xlink:title="QHostAddress" xrefstyle="class" annotations="QHostAddress">QHostAddress</db:link>
               </db:td>
               <db:td>IP address</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhostinfo.webxml" xlink:title="QHostInfo" xrefstyle="class" annotations="QHostInfo">QHostInfo</db:link>
               </db:td>
               <db:td>Static functions for host name lookups</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhoverevent.webxml" xlink:title="QHoverEvent" xrefstyle="class" annotations="QHoverEvent">QHoverEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a mouse event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhstspolicy.webxml" xlink:title="QHstsPolicy" xrefstyle="class" annotations="QHstsPolicy">QHstsPolicy</db:link>
               </db:td>
               <db:td>Specifies that a host supports HTTP Strict Transport Security policy (HSTS)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhttpmultipart.webxml" xlink:title="QHttpMultiPart" xrefstyle="class" annotations="QHttpMultiPart">QHttpMultiPart</db:link>
               </db:td>
               <db:td>Resembles a MIME multipart message to be sent over HTTP</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qhttppart.webxml" xlink:title="QHttpPart" xrefstyle="class" annotations="QHttpPart">QHttpPart</db:link>
               </db:td>
               <db:td>Holds a body part to be used inside a HTTP multipart MIME message</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>I</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qiodevice.webxml" xlink:title="QIODevice" xrefstyle="class" annotations="QIODevice">QIODevice</db:link>
               </db:td>
               <db:td>The base interface class of all I/O devices in Qt</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qicon.webxml" xlink:title="QIcon" xrefstyle="class" annotations="QIcon">QIcon</db:link>
               </db:td>
               <db:td>Scalable icons in different modes and states</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qicondragevent.webxml" xlink:title="QIconDragEvent" xrefstyle="class" annotations="QIconDragEvent">QIconDragEvent</db:link>
               </db:td>
               <db:td>Indicates that a main icon drag has begun</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qiconengine.webxml" xlink:title="QIconEngine" xrefstyle="class" annotations="QIconEngine">QIconEngine</db:link>
               </db:td>
               <db:td>Abstract base class for QIcon renderers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qiconengine::availablesizesargument.webxml" xlink:title="QIconEngine::AvailableSizesArgument" xrefstyle="class" annotations="QIconEngine::AvailableSizesArgument">QIconEngine::AvailableSizesArgument</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qiconengine::scaledpixmapargument.webxml" xlink:title="QIconEngine::ScaledPixmapArgument" xrefstyle="class" annotations="QIconEngine::ScaledPixmapArgument">QIconEngine::ScaledPixmapArgument</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qiconengineplugin.webxml" xlink:title="QIconEnginePlugin" xrefstyle="class" annotations="QIconEnginePlugin">QIconEnginePlugin</db:link>
               </db:td>
               <db:td>Abstract base for custom QIconEngine plugins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qidentityproxymodel.webxml" xlink:title="QIdentityProxyModel" xrefstyle="class" annotations="QIdentityProxyModel">QIdentityProxyModel</db:link>
               </db:td>
               <db:td>Proxies its source model unmodified</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qimage.webxml" xlink:title="QImage" xrefstyle="class" annotations="QImage">QImage</db:link>
               </db:td>
               <db:td>Hardware-independent image representation that allows direct access to the pixel data, and can be used as a paint device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qimageiohandler.webxml" xlink:title="QImageIOHandler" xrefstyle="class" annotations="QImageIOHandler">QImageIOHandler</db:link>
               </db:td>
               <db:td>Defines the common image I/O interface for all image formats in Qt</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qimageioplugin.webxml" xlink:title="QImageIOPlugin" xrefstyle="class" annotations="QImageIOPlugin">QImageIOPlugin</db:link>
               </db:td>
               <db:td>Defines an interface for writing an image format plugin</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qimagereader.webxml" xlink:title="QImageReader" xrefstyle="class" annotations="QImageReader">QImageReader</db:link>
               </db:td>
               <db:td>Format independent interface for reading images from files or other devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qimagewriter.webxml" xlink:title="QImageWriter" xrefstyle="class" annotations="QImageWriter">QImageWriter</db:link>
               </db:td>
               <db:td>Format independent interface for writing images to files or other devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qinputdialog.webxml" xlink:title="QInputDialog" xrefstyle="class" annotations="QInputDialog">QInputDialog</db:link>
               </db:td>
               <db:td>Simple convenience dialog to get a single value from the user</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qinputevent.webxml" xlink:title="QInputEvent" xrefstyle="class" annotations="QInputEvent">QInputEvent</db:link>
               </db:td>
               <db:td>The base class for events that describe user input</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qinputmethod.webxml" xlink:title="QInputMethod" xrefstyle="class" annotations="QInputMethod">QInputMethod</db:link>
               </db:td>
               <db:td>Access to the active text input method</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qinputmethodevent.webxml" xlink:title="QInputMethodEvent" xrefstyle="class" annotations="QInputMethodEvent">QInputMethodEvent</db:link>
               </db:td>
               <db:td>Parameters for input method events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qinputmethodevent::attribute.webxml" xlink:title="QInputMethodEvent::Attribute" xrefstyle="class" annotations="QInputMethodEvent::Attribute">QInputMethodEvent::Attribute</db:link>
               </db:td>
               <db:td>QInputMethodEvent::Attribute class stores an input method attribute</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qinputmethodqueryevent.webxml" xlink:title="QInputMethodQueryEvent" xrefstyle="class" annotations="QInputMethodQueryEvent">QInputMethodQueryEvent</db:link>
               </db:td>
               <db:td>Event sent by the input context to input objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qintvalidator.webxml" xlink:title="QIntValidator" xrefstyle="class" annotations="QIntValidator">QIntValidator</db:link>
               </db:td>
               <db:td>Validator that ensures a string contains a valid integer within a specified range</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemdelegate.webxml" xlink:title="QItemDelegate" xrefstyle="class" annotations="QItemDelegate">QItemDelegate</db:link>
               </db:td>
               <db:td>Display and editing facilities for data items from a model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemeditorcreator.webxml" xlink:title="QItemEditorCreator" xrefstyle="class" annotations="QItemEditorCreator">QItemEditorCreator</db:link>
               </db:td>
               <db:td>Makes it possible to create item editor creator bases without subclassing QItemEditorCreatorBase</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemeditorcreatorbase.webxml" xlink:title="QItemEditorCreatorBase" xrefstyle="class" annotations="QItemEditorCreatorBase">QItemEditorCreatorBase</db:link>
               </db:td>
               <db:td>Abstract base class that must be subclassed when implementing new item editor creators</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemeditorfactory.webxml" xlink:title="QItemEditorFactory" xrefstyle="class" annotations="QItemEditorFactory">QItemEditorFactory</db:link>
               </db:td>
               <db:td>Widgets for editing item data in views and delegates</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemmodelbardataproxy.webxml" xlink:title="QItemModelBarDataProxy" xrefstyle="class" annotations="QItemModelBarDataProxy">QItemModelBarDataProxy</db:link>
               </db:td>
               <db:td>Proxy class for presenting data in item models with Q3DBars</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemmodelscatterdataproxy.webxml" xlink:title="QItemModelScatterDataProxy" xrefstyle="class" annotations="QItemModelScatterDataProxy">QItemModelScatterDataProxy</db:link>
               </db:td>
               <db:td>Proxy class for presenting data in item models with Q3DScatter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemmodelsurfacedataproxy.webxml" xlink:title="QItemModelSurfaceDataProxy" xrefstyle="class" annotations="QItemModelSurfaceDataProxy">QItemModelSurfaceDataProxy</db:link>
               </db:td>
               <db:td>Proxy class for presenting data in item models with Q3DSurface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemselection.webxml" xlink:title="QItemSelection" xrefstyle="class" annotations="QItemSelection">QItemSelection</db:link>
               </db:td>
               <db:td>Manages information about selected items in a model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemselectionmodel.webxml" xlink:title="QItemSelectionModel" xrefstyle="class" annotations="QItemSelectionModel">QItemSelectionModel</db:link>
               </db:td>
               <db:td>Keeps track of a view's selected items</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qitemselectionrange.webxml" xlink:title="QItemSelectionRange" xrefstyle="class" annotations="QItemSelectionRange">QItemSelectionRange</db:link>
               </db:td>
               <db:td>Manages information about a range of selected items in a model</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>J</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsengine.webxml" xlink:title="QJSEngine" xrefstyle="class" annotations="QJSEngine">QJSEngine</db:link>
               </db:td>
               <db:td>Environment for evaluating JavaScript code</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsvalue.webxml" xlink:title="QJSValue" xrefstyle="class" annotations="QJSValue">QJSValue</db:link>
               </db:td>
               <db:td>Acts as a container for Qt/JavaScript data types</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsvalueiterator.webxml" xlink:title="QJSValueIterator" xrefstyle="class" annotations="QJSValueIterator">QJSValueIterator</db:link>
               </db:td>
               <db:td>Java-style iterator for QJSValue</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonarray.webxml" xlink:title="QJsonArray" xrefstyle="class" annotations="QJsonArray">QJsonArray</db:link>
               </db:td>
               <db:td>Encapsulates a JSON array</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonarray::const_iterator.webxml" xlink:title="QJsonArray::const_iterator" xrefstyle="class" annotations="QJsonArray::const_iterator">QJsonArray::const_iterator</db:link>
               </db:td>
               <db:td>QJsonArray::const_iterator class provides an STL-style const iterator for QJsonArray</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonarray::iterator.webxml" xlink:title="QJsonArray::iterator" xrefstyle="class" annotations="QJsonArray::iterator">QJsonArray::iterator</db:link>
               </db:td>
               <db:td>QJsonArray::iterator class provides an STL-style non-const iterator for QJsonArray</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsondocument.webxml" xlink:title="QJsonDocument" xrefstyle="class" annotations="QJsonDocument">QJsonDocument</db:link>
               </db:td>
               <db:td>Way to read and write JSON documents</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonobject.webxml" xlink:title="QJsonObject" xrefstyle="class" annotations="QJsonObject">QJsonObject</db:link>
               </db:td>
               <db:td>Encapsulates a JSON object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonobject::const_iterator.webxml" xlink:title="QJsonObject::const_iterator" xrefstyle="class" annotations="QJsonObject::const_iterator">QJsonObject::const_iterator</db:link>
               </db:td>
               <db:td>QJsonObject::const_iterator class provides an STL-style const iterator for QJsonObject</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonobject::iterator.webxml" xlink:title="QJsonObject::iterator" xrefstyle="class" annotations="QJsonObject::iterator">QJsonObject::iterator</db:link>
               </db:td>
               <db:td>QJsonObject::iterator class provides an STL-style non-const iterator for QJsonObject</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonparseerror.webxml" xlink:title="QJsonParseError" xrefstyle="class" annotations="QJsonParseError">QJsonParseError</db:link>
               </db:td>
               <db:td>Used to report errors during JSON parsing</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qjsonvalue.webxml" xlink:title="QJsonValue" xrefstyle="class" annotations="QJsonValue">QJsonValue</db:link>
               </db:td>
               <db:td>Encapsulates a value in JSON</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>K</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qkeyevent.webxml" xlink:title="QKeyEvent" xrefstyle="class" annotations="QKeyEvent">QKeyEvent</db:link>
               </db:td>
               <db:td>Describes a key event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qkeyeventtransition.webxml" xlink:title="QKeyEventTransition" xrefstyle="class" annotations="QKeyEventTransition">QKeyEventTransition</db:link>
               </db:td>
               <db:td>Transition for key events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qkeysequence.webxml" xlink:title="QKeySequence" xrefstyle="class" annotations="QKeySequence">QKeySequence</db:link>
               </db:td>
               <db:td>Encapsulates a key sequence as used by shortcuts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qkeysequenceedit.webxml" xlink:title="QKeySequenceEdit" xrefstyle="class" annotations="QKeySequenceEdit">QKeySequenceEdit</db:link>
               </db:td>
               <db:td>Allows to input a QKeySequence</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qkeyvalueiterator.webxml" xlink:title="QKeyValueIterator" xrefstyle="class" annotations="QKeyValueIterator">QKeyValueIterator</db:link>
               </db:td>
               <db:td>Iterator over the key/value pairs of an associative container</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>L</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlcdnumber.webxml" xlink:title="QLCDNumber" xrefstyle="class" annotations="QLCDNumber">QLCDNumber</db:link>
               </db:td>
               <db:td>Displays a number with LCD-like digits</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qleinteger.webxml" xlink:title="QLEInteger" xrefstyle="class" annotations="QLEInteger">QLEInteger</db:link>
               </db:td>
               <db:td>Platform-independent little-endian integers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlabel.webxml" xlink:title="QLabel" xrefstyle="class" annotations="QLabel">QLabel</db:link>
               </db:td>
               <db:td>Text or image display</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlatin1char.webxml" xlink:title="QLatin1Char" xrefstyle="class" annotations="QLatin1Char">QLatin1Char</db:link>
               </db:td>
               <db:td>8-bit ASCII/Latin-1 character</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlatin1string.webxml" xlink:title="QLatin1String" xrefstyle="class" annotations="QLatin1String">QLatin1String</db:link>
               </db:td>
               <db:td>Thin wrapper around an US-ASCII/Latin-1 encoded string literal</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlayout.webxml" xlink:title="QLayout" xrefstyle="class" annotations="QLayout">QLayout</db:link>
               </db:td>
               <db:td>The base class of geometry managers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlayoutitem.webxml" xlink:title="QLayoutItem" xrefstyle="class" annotations="QLayoutItem">QLayoutItem</db:link>
               </db:td>
               <db:td>Abstract item that a QLayout manipulates</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlegend.webxml" xlink:title="QLegend" xrefstyle="class" annotations="QLegend">QLegend</db:link>
               </db:td>
               <db:td>Displays the legend of a chart</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlegendmarker.webxml" xlink:title="QLegendMarker" xrefstyle="class" annotations="QLegendMarker">QLegendMarker</db:link>
               </db:td>
               <db:td>Abstract object that can be used to access markers within a legend</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlibrary.webxml" xlink:title="QLibrary" xrefstyle="class" annotations="QLibrary">QLibrary</db:link>
               </db:td>
               <db:td>Loads shared libraries at runtime</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlibraryinfo.webxml" xlink:title="QLibraryInfo" xrefstyle="class" annotations="QLibraryInfo">QLibraryInfo</db:link>
               </db:td>
               <db:td>Information about the Qt library</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qline.webxml" xlink:title="QLine" xrefstyle="class" annotations="QLine">QLine</db:link>
               </db:td>
               <db:td>Two-dimensional vector using integer precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlineedit.webxml" xlink:title="QLineEdit" xrefstyle="class" annotations="QLineEdit">QLineEdit</db:link>
               </db:td>
               <db:td>One-line text editor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlinef.webxml" xlink:title="QLineF" xrefstyle="class" annotations="QLineF">QLineF</db:link>
               </db:td>
               <db:td>Two-dimensional vector using floating point precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlineseries.webxml" xlink:title="QLineSeries" xrefstyle="class" annotations="QLineSeries">QLineSeries</db:link>
               </db:td>
               <db:td>Presents data in line charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlineargradient.webxml" xlink:title="QLinearGradient" xrefstyle="class" annotations="QLinearGradient">QLinearGradient</db:link>
               </db:td>
               <db:td>Used in combination with QBrush to specify a linear gradient brush</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlinkedlist.webxml" xlink:title="QLinkedList" xrefstyle="class" annotations="QLinkedList">QLinkedList</db:link>
               </db:td>
               <db:td>Template class that provides linked lists</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlinkedlist::const_iterator.webxml" xlink:title="QLinkedList::const_iterator" xrefstyle="class" annotations="QLinkedList::const_iterator">QLinkedList::const_iterator</db:link>
               </db:td>
               <db:td>QLinkedList::const_iterator class provides an STL-style const iterator for QLinkedList</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlinkedlist::iterator.webxml" xlink:title="QLinkedList::iterator" xrefstyle="class" annotations="QLinkedList::iterator">QLinkedList::iterator</db:link>
               </db:td>
               <db:td>QLinkedList::iterator class provides an STL-style non-const iterator for QLinkedList</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlist.webxml" xlink:title="QList" xrefstyle="class" annotations="QList">QList</db:link>
               </db:td>
               <db:td>Template class that provides lists</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlist::memorylayout.webxml" xlink:title="QList::MemoryLayout" xrefstyle="class" annotations="QList::MemoryLayout">QList::MemoryLayout</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlist::const_iterator.webxml" xlink:title="QList::const_iterator" xrefstyle="class" annotations="QList::const_iterator">QList::const_iterator</db:link>
               </db:td>
               <db:td>QList::const_iterator class provides an STL-style const iterator for QList and QQueue</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlist::iterator.webxml" xlink:title="QList::iterator" xrefstyle="class" annotations="QList::iterator">QList::iterator</db:link>
               </db:td>
               <db:td>QList::iterator class provides an STL-style non-const iterator for QList and QQueue</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlistiterator.webxml" xlink:title="QListIterator" xrefstyle="class" annotations="QListIterator">QListIterator</db:link>
               </db:td>
               <db:td>Java-style const iterator for QList and QQueue</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlistview.webxml" xlink:title="QListView" xrefstyle="class" annotations="QListView">QListView</db:link>
               </db:td>
               <db:td>List or icon view onto a model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlistwidget.webxml" xlink:title="QListWidget" xrefstyle="class" annotations="QListWidget">QListWidget</db:link>
               </db:td>
               <db:td>Item-based list widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlistwidgetitem.webxml" xlink:title="QListWidgetItem" xrefstyle="class" annotations="QListWidgetItem">QListWidgetItem</db:link>
               </db:td>
               <db:td>Item for use with the QListWidget item view class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlocalserver.webxml" xlink:title="QLocalServer" xrefstyle="class" annotations="QLocalServer">QLocalServer</db:link>
               </db:td>
               <db:td>Local socket based server</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlocalsocket.webxml" xlink:title="QLocalSocket" xrefstyle="class" annotations="QLocalSocket">QLocalSocket</db:link>
               </db:td>
               <db:td>Local socket</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlocale.webxml" xlink:title="QLocale" xrefstyle="class" annotations="QLocale">QLocale</db:link>
               </db:td>
               <db:td>Converts between numbers and their string representations in various languages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlockfile.webxml" xlink:title="QLockFile" xrefstyle="class" annotations="QLockFile">QLockFile</db:link>
               </db:td>
               <db:td>Locking between processes using a file</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlogvalue3daxisformatter.webxml" xlink:title="QLogValue3DAxisFormatter" xrefstyle="class" annotations="QLogValue3DAxisFormatter">QLogValue3DAxisFormatter</db:link>
               </db:td>
               <db:td>Formatting rules for a logarithmic value axis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlogvalueaxis.webxml" xlink:title="QLogValueAxis" xrefstyle="class" annotations="QLogValueAxis">QLogValueAxis</db:link>
               </db:td>
               <db:td>Adds a logarithmic scale to a chart's axis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qloggingcategory.webxml" xlink:title="QLoggingCategory" xrefstyle="class" annotations="QLoggingCategory">QLoggingCategory</db:link>
               </db:td>
               <db:td>Represents a category, or 'area' in the logging infrastructure</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qloggingcategory::atomicbools.webxml" xlink:title="QLoggingCategory::AtomicBools" xrefstyle="class" annotations="QLoggingCategory::AtomicBools">QLoggingCategory::AtomicBools</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergyadvertisingdata.webxml" xlink:title="QLowEnergyAdvertisingData" xrefstyle="class" annotations="QLowEnergyAdvertisingData">QLowEnergyAdvertisingData</db:link>
               </db:td>
               <db:td>Represents the data to be broadcast during Bluetooth Low Energy advertising</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergyadvertisingparameters.webxml" xlink:title="QLowEnergyAdvertisingParameters" xrefstyle="class" annotations="QLowEnergyAdvertisingParameters">QLowEnergyAdvertisingParameters</db:link>
               </db:td>
               <db:td>Represents the parameters used for Bluetooth Low Energy advertising</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergyadvertisingparameters::addressinfo.webxml" xlink:title="QLowEnergyAdvertisingParameters::AddressInfo" xrefstyle="class" annotations="QLowEnergyAdvertisingParameters::AddressInfo">QLowEnergyAdvertisingParameters::AddressInfo</db:link>
               </db:td>
               <db:td>QLowEnergyAdvertisingParameters::AddressInfo defines the elements of a white list</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergycharacteristic.webxml" xlink:title="QLowEnergyCharacteristic" xrefstyle="class" annotations="QLowEnergyCharacteristic">QLowEnergyCharacteristic</db:link>
               </db:td>
               <db:td>Stores information about a Bluetooth Low Energy service characteristic</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergycharacteristicdata.webxml" xlink:title="QLowEnergyCharacteristicData" xrefstyle="class" annotations="QLowEnergyCharacteristicData">QLowEnergyCharacteristicData</db:link>
               </db:td>
               <db:td>Used to set up GATT service data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergyconnectionparameters.webxml" xlink:title="QLowEnergyConnectionParameters" xrefstyle="class" annotations="QLowEnergyConnectionParameters">QLowEnergyConnectionParameters</db:link>
               </db:td>
               <db:td>Used when requesting or reporting an update of the parameters of a Bluetooth LE connection</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergycontroller.webxml" xlink:title="QLowEnergyController" xrefstyle="class" annotations="QLowEnergyController">QLowEnergyController</db:link>
               </db:td>
               <db:td>Access to Bluetooth Low Energy Devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergydescriptor.webxml" xlink:title="QLowEnergyDescriptor" xrefstyle="class" annotations="QLowEnergyDescriptor">QLowEnergyDescriptor</db:link>
               </db:td>
               <db:td>Stores information about the Bluetooth Low Energy descriptor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergydescriptordata.webxml" xlink:title="QLowEnergyDescriptorData" xrefstyle="class" annotations="QLowEnergyDescriptorData">QLowEnergyDescriptorData</db:link>
               </db:td>
               <db:td>Used to create GATT service data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergyservice.webxml" xlink:title="QLowEnergyService" xrefstyle="class" annotations="QLowEnergyService">QLowEnergyService</db:link>
               </db:td>
               <db:td>Represents an individual service on a Bluetooth Low Energy Device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qlowenergyservicedata.webxml" xlink:title="QLowEnergyServiceData" xrefstyle="class" annotations="QLowEnergyServiceData">QLowEnergyServiceData</db:link>
               </db:td>
               <db:td>Used to set up GATT service data</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>M</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmaccocoaviewcontainer.webxml" xlink:title="QMacCocoaViewContainer" xrefstyle="class" annotations="QMacCocoaViewContainer">QMacCocoaViewContainer</db:link>
               </db:td>
               <db:td>Widget for macOS that can be used to wrap arbitrary Cocoa views (i.e., NSView subclasses) and insert them into Qt hierarchies</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmacnativewidget.webxml" xlink:title="QMacNativeWidget" xrefstyle="class" annotations="QMacNativeWidget">QMacNativeWidget</db:link>
               </db:td>
               <db:td>Widget for macOS that provides a way to put Qt widgets into Cocoa hierarchies</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmacpasteboardmime.webxml" xlink:title="QMacPasteboardMime" xrefstyle="class" annotations="QMacPasteboardMime">QMacPasteboardMime</db:link>
               </db:td>
               <db:td>Converts between a MIME type and a Uniform Type Identifier (UTI) format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmactoolbar.webxml" xlink:title="QMacToolBar" xrefstyle="class" annotations="QMacToolBar">QMacToolBar</db:link>
               </db:td>
               <db:td>Wraps the native NSToolbar class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmactoolbaritem.webxml" xlink:title="QMacToolBarItem" xrefstyle="class" annotations="QMacToolBarItem">QMacToolBarItem</db:link>
               </db:td>
               <db:td>Item for QMacToolBar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmainwindow.webxml" xlink:title="QMainWindow" xrefstyle="class" annotations="QMainWindow">QMainWindow</db:link>
               </db:td>
               <db:td>Main application window</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmap.webxml" xlink:title="QMap" xrefstyle="class" annotations="QMap">QMap</db:link>
               </db:td>
               <db:td>Template class that provides a red-black-tree-based dictionary</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmap::const_iterator.webxml" xlink:title="QMap::const_iterator" xrefstyle="class" annotations="QMap::const_iterator">QMap::const_iterator</db:link>
               </db:td>
               <db:td>QMap::const_iterator class provides an STL-style const iterator for QMap and QMultiMap</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmap::iterator.webxml" xlink:title="QMap::iterator" xrefstyle="class" annotations="QMap::iterator">QMap::iterator</db:link>
               </db:td>
               <db:td>QMap::iterator class provides an STL-style non-const iterator for QMap and QMultiMap</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmap::key_iterator.webxml" xlink:title="QMap::key_iterator" xrefstyle="class" annotations="QMap::key_iterator">QMap::key_iterator</db:link>
               </db:td>
               <db:td>QMap::key_iterator class provides an STL-style const iterator for QMap and QMultiMap keys</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmapiterator.webxml" xlink:title="QMapIterator" xrefstyle="class" annotations="QMapIterator">QMapIterator</db:link>
               </db:td>
               <db:td>Java-style const iterator for QMap and QMultiMap</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmargins.webxml" xlink:title="QMargins" xrefstyle="class" annotations="QMargins">QMargins</db:link>
               </db:td>
               <db:td>Defines the four margins of a rectangle</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmarginsf.webxml" xlink:title="QMarginsF" xrefstyle="class" annotations="QMarginsF">QMarginsF</db:link>
               </db:td>
               <db:td>Defines the four margins of a rectangle</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmatrix.webxml" xlink:title="QMatrix" xrefstyle="class" annotations="QMatrix">QMatrix</db:link>
               </db:td>
               <db:td>Specifies 2D transformations of a coordinate system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmatrix4x4.webxml" xlink:title="QMatrix4x4" xrefstyle="class" annotations="QMatrix4x4">QMatrix4x4</db:link>
               </db:td>
               <db:td>Represents a 4x4 transformation matrix in 3D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmdiarea.webxml" xlink:title="QMdiArea" xrefstyle="class" annotations="QMdiArea">QMdiArea</db:link>
               </db:td>
               <db:td>Area in which MDI windows are displayed</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmdisubwindow.webxml" xlink:title="QMdiSubWindow" xrefstyle="class" annotations="QMdiSubWindow">QMdiSubWindow</db:link>
               </db:td>
               <db:td>Subwindow class for QMdiArea</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmenu.webxml" xlink:title="QMenu" xrefstyle="class" annotations="QMenu">QMenu</db:link>
               </db:td>
               <db:td>Menu widget for use in menu bars, context menus, and other popup menus</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmenubar.webxml" xlink:title="QMenuBar" xrefstyle="class" annotations="QMenuBar">QMenuBar</db:link>
               </db:td>
               <db:td>Horizontal menu bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmessageauthenticationcode.webxml" xlink:title="QMessageAuthenticationCode" xrefstyle="class" annotations="QMessageAuthenticationCode">QMessageAuthenticationCode</db:link>
               </db:td>
               <db:td>Way to generate hash-based message authentication codes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmessagebox.webxml" xlink:title="QMessageBox" xrefstyle="class" annotations="QMessageBox">QMessageBox</db:link>
               </db:td>
               <db:td>Modal dialog for informing the user or for asking the user a question and receiving an answer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmessagelogcontext.webxml" xlink:title="QMessageLogContext" xrefstyle="class" annotations="QMessageLogContext">QMessageLogContext</db:link>
               </db:td>
               <db:td>Additional information about a log message</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmessagelogger.webxml" xlink:title="QMessageLogger" xrefstyle="class" annotations="QMessageLogger">QMessageLogger</db:link>
               </db:td>
               <db:td>Generates log messages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetaclassinfo.webxml" xlink:title="QMetaClassInfo" xrefstyle="class" annotations="QMetaClassInfo">QMetaClassInfo</db:link>
               </db:td>
               <db:td>Additional information about a class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetaenum.webxml" xlink:title="QMetaEnum" xrefstyle="class" annotations="QMetaEnum">QMetaEnum</db:link>
               </db:td>
               <db:td>Meta-data about an enumerator</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetamethod.webxml" xlink:title="QMetaMethod" xrefstyle="class" annotations="QMetaMethod">QMetaMethod</db:link>
               </db:td>
               <db:td>Meta-data about a member function</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetaobject.webxml" xlink:title="QMetaObject" xrefstyle="class" annotations="QMetaObject">QMetaObject</db:link>
               </db:td>
               <db:td>Contains meta-information about Qt objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetaobject::connection.webxml" xlink:title="QMetaObject::Connection" xrefstyle="class" annotations="QMetaObject::Connection">QMetaObject::Connection</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetaproperty.webxml" xlink:title="QMetaProperty" xrefstyle="class" annotations="QMetaProperty">QMetaProperty</db:link>
               </db:td>
               <db:td>Meta-data about a property</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmetatype.webxml" xlink:title="QMetaType" xrefstyle="class" annotations="QMetaType">QMetaType</db:link>
               </db:td>
               <db:td>Manages named types in the meta-object system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmimedata.webxml" xlink:title="QMimeData" xrefstyle="class" annotations="QMimeData">QMimeData</db:link>
               </db:td>
               <db:td>Container for data that records information about its MIME type</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmimedatabase.webxml" xlink:title="QMimeDatabase" xrefstyle="class" annotations="QMimeDatabase">QMimeDatabase</db:link>
               </db:td>
               <db:td>Maintains a database of MIME types</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmimetype.webxml" xlink:title="QMimeType" xrefstyle="class" annotations="QMimeType">QMimeType</db:link>
               </db:td>
               <db:td>Describes types of file or data, represented by a MIME type string</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmodbusexceptionresponse.webxml" xlink:title="QModbusExceptionResponse" xrefstyle="class" annotations="QModbusExceptionResponse">QModbusExceptionResponse</db:link>
               </db:td>
               <db:td>Container class containing the function and error code inside a Modbus ADU</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmodbusrequest.webxml" xlink:title="QModbusRequest" xrefstyle="class" annotations="QModbusRequest">QModbusRequest</db:link>
               </db:td>
               <db:td>Container class containing the function code and payload that is stored inside a Modbus ADU</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmodbusresponse.webxml" xlink:title="QModbusResponse" xrefstyle="class" annotations="QModbusResponse">QModbusResponse</db:link>
               </db:td>
               <db:td>Container class containing the function code and payload that is stored inside a Modbus ADU</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmodelindex.webxml" xlink:title="QModelIndex" xrefstyle="class" annotations="QModelIndex">QModelIndex</db:link>
               </db:td>
               <db:td>Used to locate data in a data model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmouseevent.webxml" xlink:title="QMouseEvent" xrefstyle="class" annotations="QMouseEvent">QMouseEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a mouse event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmouseeventtransition.webxml" xlink:title="QMouseEventTransition" xrefstyle="class" annotations="QMouseEventTransition">QMouseEventTransition</db:link>
               </db:td>
               <db:td>Transition for mouse events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmoveevent.webxml" xlink:title="QMoveEvent" xrefstyle="class" annotations="QMoveEvent">QMoveEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for move events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmovie.webxml" xlink:title="QMovie" xrefstyle="class" annotations="QMovie">QMovie</db:link>
               </db:td>
               <db:td>Convenience class for playing movies with QImageReader</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmultihash.webxml" xlink:title="QMultiHash" xrefstyle="class" annotations="QMultiHash">QMultiHash</db:link>
               </db:td>
               <db:td>Convenience QHash subclass that provides multi-valued hashes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmultimap.webxml" xlink:title="QMultiMap" xrefstyle="class" annotations="QMultiMap">QMultiMap</db:link>
               </db:td>
               <db:td>Convenience QMap subclass that provides multi-valued maps</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutablehashiterator.webxml" xlink:title="QMutableHashIterator" xrefstyle="class" annotations="QMutableHashIterator">QMutableHashIterator</db:link>
               </db:td>
               <db:td>Java-style non-const iterator for QHash and QMultiHash</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutablelistiterator.webxml" xlink:title="QMutableListIterator" xrefstyle="class" annotations="QMutableListIterator">QMutableListIterator</db:link>
               </db:td>
               <db:td>Java-style non-const iterator for QList and QQueue</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutablemapiterator.webxml" xlink:title="QMutableMapIterator" xrefstyle="class" annotations="QMutableMapIterator">QMutableMapIterator</db:link>
               </db:td>
               <db:td>Java-style non-const iterator for QMap and QMultiMap</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutablesetiterator.webxml" xlink:title="QMutableSetIterator" xrefstyle="class" annotations="QMutableSetIterator">QMutableSetIterator</db:link>
               </db:td>
               <db:td>Java-style non-const iterator for QSet</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutablevectoriterator.webxml" xlink:title="QMutableVectorIterator" xrefstyle="class" annotations="QMutableVectorIterator">QMutableVectorIterator</db:link>
               </db:td>
               <db:td>Java-style non-const iterator for QVector and QStack</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutex.webxml" xlink:title="QMutex" xrefstyle="class" annotations="QMutex">QMutex</db:link>
               </db:td>
               <db:td>Access serialization between threads</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qmutexlocker.webxml" xlink:title="QMutexLocker" xrefstyle="class" annotations="QMutexLocker">QMutexLocker</db:link>
               </db:td>
               <db:td>Convenience class that simplifies locking and unlocking mutexes</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>N</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnativegestureevent.webxml" xlink:title="QNativeGestureEvent" xrefstyle="class" annotations="QNativeGestureEvent">QNativeGestureEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a gesture event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndeffilter.webxml" xlink:title="QNdefFilter" xrefstyle="class" annotations="QNdefFilter">QNdefFilter</db:link>
               </db:td>
               <db:td>Filter for matching NDEF messages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndeffilter::record.webxml" xlink:title="QNdefFilter::Record" xrefstyle="class" annotations="QNdefFilter::Record">QNdefFilter::Record</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndefmessage.webxml" xlink:title="QNdefMessage" xrefstyle="class" annotations="QNdefMessage">QNdefMessage</db:link>
               </db:td>
               <db:td>NFC NDEF message</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndefnfcsmartposterrecord.webxml" xlink:title="QNdefNfcSmartPosterRecord" xrefstyle="class" annotations="QNdefNfcSmartPosterRecord">QNdefNfcSmartPosterRecord</db:link>
               </db:td>
               <db:td>NFC RTD-SmartPoster</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndefnfctextrecord.webxml" xlink:title="QNdefNfcTextRecord" xrefstyle="class" annotations="QNdefNfcTextRecord">QNdefNfcTextRecord</db:link>
               </db:td>
               <db:td>NFC RTD-Text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndefnfcurirecord.webxml" xlink:title="QNdefNfcUriRecord" xrefstyle="class" annotations="QNdefNfcUriRecord">QNdefNfcUriRecord</db:link>
               </db:td>
               <db:td>NFC RTD-URI</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qndefrecord.webxml" xlink:title="QNdefRecord" xrefstyle="class" annotations="QNdefRecord">QNdefRecord</db:link>
               </db:td>
               <db:td>NFC NDEF record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnearfieldmanager.webxml" xlink:title="QNearFieldManager" xrefstyle="class" annotations="QNearFieldManager">QNearFieldManager</db:link>
               </db:td>
               <db:td>Access to notifications for NFC events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnearfieldsharemanager.webxml" xlink:title="QNearFieldShareManager" xrefstyle="class" annotations="QNearFieldShareManager">QNearFieldShareManager</db:link>
               </db:td>
               <db:td>Manages all interactions related to sharing files and data over NFC</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnearfieldsharetarget.webxml" xlink:title="QNearFieldShareTarget" xrefstyle="class" annotations="QNearFieldShareTarget">QNearFieldShareTarget</db:link>
               </db:td>
               <db:td>Transfers data to remote device over NFC</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnearfieldtarget.webxml" xlink:title="QNearFieldTarget" xrefstyle="class" annotations="QNearFieldTarget">QNearFieldTarget</db:link>
               </db:td>
               <db:td>Interface for communicating with a target device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnearfieldtarget::requestid.webxml" xlink:title="QNearFieldTarget::RequestId" xrefstyle="class" annotations="QNearFieldTarget::RequestId">QNearFieldTarget::RequestId</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnearfieldtarget::requestidprivate.webxml" xlink:title="QNearFieldTarget::RequestIdPrivate" xrefstyle="class" annotations="QNearFieldTarget::RequestIdPrivate">QNearFieldTarget::RequestIdPrivate</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkaccessmanager.webxml" xlink:title="QNetworkAccessManager" xrefstyle="class" annotations="QNetworkAccessManager">QNetworkAccessManager</db:link>
               </db:td>
               <db:td>Allows the application to send network requests and receive replies</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkaddressentry.webxml" xlink:title="QNetworkAddressEntry" xrefstyle="class" annotations="QNetworkAddressEntry">QNetworkAddressEntry</db:link>
               </db:td>
               <db:td>Stores one IP address supported by a network interface, along with its associated netmask and broadcast address</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkcachemetadata.webxml" xlink:title="QNetworkCacheMetaData" xrefstyle="class" annotations="QNetworkCacheMetaData">QNetworkCacheMetaData</db:link>
               </db:td>
               <db:td>Cache information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkconfiguration.webxml" xlink:title="QNetworkConfiguration" xrefstyle="class" annotations="QNetworkConfiguration">QNetworkConfiguration</db:link>
               </db:td>
               <db:td>Abstraction of one or more access point configurations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkconfigurationmanager.webxml" xlink:title="QNetworkConfigurationManager" xrefstyle="class" annotations="QNetworkConfigurationManager">QNetworkConfigurationManager</db:link>
               </db:td>
               <db:td>Manages the network configurations provided by the system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkcookie.webxml" xlink:title="QNetworkCookie" xrefstyle="class" annotations="QNetworkCookie">QNetworkCookie</db:link>
               </db:td>
               <db:td>Holds one network cookie</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkcookiejar.webxml" xlink:title="QNetworkCookieJar" xrefstyle="class" annotations="QNetworkCookieJar">QNetworkCookieJar</db:link>
               </db:td>
               <db:td>Implements a simple jar of QNetworkCookie objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkdatagram.webxml" xlink:title="QNetworkDatagram" xrefstyle="class" annotations="QNetworkDatagram">QNetworkDatagram</db:link>
               </db:td>
               <db:td>The data and metadata of a UDP datagram</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkdiskcache.webxml" xlink:title="QNetworkDiskCache" xrefstyle="class" annotations="QNetworkDiskCache">QNetworkDiskCache</db:link>
               </db:td>
               <db:td>Very basic disk cache</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkinterface.webxml" xlink:title="QNetworkInterface" xrefstyle="class" annotations="QNetworkInterface">QNetworkInterface</db:link>
               </db:td>
               <db:td>Listing of the host's IP addresses and network interfaces</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkproxy.webxml" xlink:title="QNetworkProxy" xrefstyle="class" annotations="QNetworkProxy">QNetworkProxy</db:link>
               </db:td>
               <db:td>Network layer proxy</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkproxyfactory.webxml" xlink:title="QNetworkProxyFactory" xrefstyle="class" annotations="QNetworkProxyFactory">QNetworkProxyFactory</db:link>
               </db:td>
               <db:td>Fine-grained proxy selection</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkproxyquery.webxml" xlink:title="QNetworkProxyQuery" xrefstyle="class" annotations="QNetworkProxyQuery">QNetworkProxyQuery</db:link>
               </db:td>
               <db:td>Used to query the proxy settings for a socket</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkreply.webxml" xlink:title="QNetworkReply" xrefstyle="class" annotations="QNetworkReply">QNetworkReply</db:link>
               </db:td>
               <db:td>Contains the data and headers for a request sent with QNetworkAccessManager</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworkrequest.webxml" xlink:title="QNetworkRequest" xrefstyle="class" annotations="QNetworkRequest">QNetworkRequest</db:link>
               </db:td>
               <db:td>Holds a request to be sent with QNetworkAccessManager</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qnetworksession.webxml" xlink:title="QNetworkSession" xrefstyle="class" annotations="QNetworkSession">QNetworkSession</db:link>
               </db:td>
               <db:td>Control over the system's access points and enables session management for cases when multiple clients access the same access point</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>O</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qobject.webxml" xlink:title="QObject" xrefstyle="class" annotations="QObject">QObject</db:link>
               </db:td>
               <db:td>The base class of all Qt objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qobjectcleanuphandler.webxml" xlink:title="QObjectCleanupHandler" xrefstyle="class" annotations="QObjectCleanupHandler">QObjectCleanupHandler</db:link>
               </db:td>
               <db:td>Watches the lifetime of multiple QObjects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qoffscreensurface.webxml" xlink:title="QOffscreenSurface" xrefstyle="class" annotations="QOffscreenSurface">QOffscreenSurface</db:link>
               </db:td>
               <db:td>Represents an offscreen surface in the underlying platform</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglbuffer.webxml" xlink:title="QOpenGLBuffer" xrefstyle="class" annotations="QOpenGLBuffer">QOpenGLBuffer</db:link>
               </db:td>
               <db:td>Functions for creating and managing OpenGL buffer objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglcontext.webxml" xlink:title="QOpenGLContext" xrefstyle="class" annotations="QOpenGLContext">QOpenGLContext</db:link>
               </db:td>
               <db:td>Represents a native OpenGL context, enabling OpenGL rendering on a QSurface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglcontextgroup.webxml" xlink:title="QOpenGLContextGroup" xrefstyle="class" annotations="QOpenGLContextGroup">QOpenGLContextGroup</db:link>
               </db:td>
               <db:td>Represents a group of contexts sharing OpenGL resources</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopengldebuglogger.webxml" xlink:title="QOpenGLDebugLogger" xrefstyle="class" annotations="QOpenGLDebugLogger">QOpenGLDebugLogger</db:link>
               </db:td>
               <db:td>Enables logging of OpenGL debugging messages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopengldebugmessage.webxml" xlink:title="QOpenGLDebugMessage" xrefstyle="class" annotations="QOpenGLDebugMessage">QOpenGLDebugMessage</db:link>
               </db:td>
               <db:td>Wraps an OpenGL debug message</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglextrafunctions.webxml" xlink:title="QOpenGLExtraFunctions" xrefstyle="class" annotations="QOpenGLExtraFunctions">QOpenGLExtraFunctions</db:link>
               </db:td>
               <db:td>Cross-platform access to the OpenGL ES 3.0, 3.1 and 3.2 API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglframebufferobject.webxml" xlink:title="QOpenGLFramebufferObject" xrefstyle="class" annotations="QOpenGLFramebufferObject">QOpenGLFramebufferObject</db:link>
               </db:td>
               <db:td>Encapsulates an OpenGL framebuffer object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglframebufferobjectformat.webxml" xlink:title="QOpenGLFramebufferObjectFormat" xrefstyle="class" annotations="QOpenGLFramebufferObjectFormat">QOpenGLFramebufferObjectFormat</db:link>
               </db:td>
               <db:td>Specifies the format of an OpenGL framebuffer object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions.webxml" xlink:title="QOpenGLFunctions" xrefstyle="class" annotations="QOpenGLFunctions">QOpenGLFunctions</db:link>
               </db:td>
               <db:td>Cross-platform access to the OpenGL ES 2.0 API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_1_0.webxml" xlink:title="QOpenGLFunctions_1_0" xrefstyle="class" annotations="QOpenGLFunctions_1_0">QOpenGLFunctions_1_0</db:link>
               </db:td>
               <db:td>All functions for OpenGL 1.0 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_1_1.webxml" xlink:title="QOpenGLFunctions_1_1" xrefstyle="class" annotations="QOpenGLFunctions_1_1">QOpenGLFunctions_1_1</db:link>
               </db:td>
               <db:td>All functions for OpenGL 1.1 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_1_2.webxml" xlink:title="QOpenGLFunctions_1_2" xrefstyle="class" annotations="QOpenGLFunctions_1_2">QOpenGLFunctions_1_2</db:link>
               </db:td>
               <db:td>All functions for OpenGL 1.2 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_1_3.webxml" xlink:title="QOpenGLFunctions_1_3" xrefstyle="class" annotations="QOpenGLFunctions_1_3">QOpenGLFunctions_1_3</db:link>
               </db:td>
               <db:td>All functions for OpenGL 1.3 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_1_4.webxml" xlink:title="QOpenGLFunctions_1_4" xrefstyle="class" annotations="QOpenGLFunctions_1_4">QOpenGLFunctions_1_4</db:link>
               </db:td>
               <db:td>All functions for OpenGL 1.4 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_1_5.webxml" xlink:title="QOpenGLFunctions_1_5" xrefstyle="class" annotations="QOpenGLFunctions_1_5">QOpenGLFunctions_1_5</db:link>
               </db:td>
               <db:td>All functions for OpenGL 1.5 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_2_0.webxml" xlink:title="QOpenGLFunctions_2_0" xrefstyle="class" annotations="QOpenGLFunctions_2_0">QOpenGLFunctions_2_0</db:link>
               </db:td>
               <db:td>All functions for OpenGL 2.0 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_2_1.webxml" xlink:title="QOpenGLFunctions_2_1" xrefstyle="class" annotations="QOpenGLFunctions_2_1">QOpenGLFunctions_2_1</db:link>
               </db:td>
               <db:td>All functions for OpenGL 2.1 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_3_0.webxml" xlink:title="QOpenGLFunctions_3_0" xrefstyle="class" annotations="QOpenGLFunctions_3_0">QOpenGLFunctions_3_0</db:link>
               </db:td>
               <db:td>All functions for OpenGL 3.0 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_3_1.webxml" xlink:title="QOpenGLFunctions_3_1" xrefstyle="class" annotations="QOpenGLFunctions_3_1">QOpenGLFunctions_3_1</db:link>
               </db:td>
               <db:td>All functions for OpenGL 3.1 specification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_3_2_compatibility.webxml" xlink:title="QOpenGLFunctions_3_2_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_3_2_Compatibility">QOpenGLFunctions_3_2_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 3.2 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_3_2_core.webxml" xlink:title="QOpenGLFunctions_3_2_Core" xrefstyle="class" annotations="QOpenGLFunctions_3_2_Core">QOpenGLFunctions_3_2_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 3.2 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_3_3_compatibility.webxml" xlink:title="QOpenGLFunctions_3_3_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_3_3_Compatibility">QOpenGLFunctions_3_3_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 3.3 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_3_3_core.webxml" xlink:title="QOpenGLFunctions_3_3_Core" xrefstyle="class" annotations="QOpenGLFunctions_3_3_Core">QOpenGLFunctions_3_3_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 3.3 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_0_compatibility.webxml" xlink:title="QOpenGLFunctions_4_0_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_4_0_Compatibility">QOpenGLFunctions_4_0_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.0 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_0_core.webxml" xlink:title="QOpenGLFunctions_4_0_Core" xrefstyle="class" annotations="QOpenGLFunctions_4_0_Core">QOpenGLFunctions_4_0_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.0 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_1_compatibility.webxml" xlink:title="QOpenGLFunctions_4_1_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_4_1_Compatibility">QOpenGLFunctions_4_1_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.1 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_1_core.webxml" xlink:title="QOpenGLFunctions_4_1_Core" xrefstyle="class" annotations="QOpenGLFunctions_4_1_Core">QOpenGLFunctions_4_1_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.1 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_2_compatibility.webxml" xlink:title="QOpenGLFunctions_4_2_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_4_2_Compatibility">QOpenGLFunctions_4_2_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.2 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_2_core.webxml" xlink:title="QOpenGLFunctions_4_2_Core" xrefstyle="class" annotations="QOpenGLFunctions_4_2_Core">QOpenGLFunctions_4_2_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.2 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_3_compatibility.webxml" xlink:title="QOpenGLFunctions_4_3_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_4_3_Compatibility">QOpenGLFunctions_4_3_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.3 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_3_core.webxml" xlink:title="QOpenGLFunctions_4_3_Core" xrefstyle="class" annotations="QOpenGLFunctions_4_3_Core">QOpenGLFunctions_4_3_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.3 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_4_compatibility.webxml" xlink:title="QOpenGLFunctions_4_4_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_4_4_Compatibility">QOpenGLFunctions_4_4_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.4 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_4_core.webxml" xlink:title="QOpenGLFunctions_4_4_Core" xrefstyle="class" annotations="QOpenGLFunctions_4_4_Core">QOpenGLFunctions_4_4_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.4 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_5_compatibility.webxml" xlink:title="QOpenGLFunctions_4_5_Compatibility" xrefstyle="class" annotations="QOpenGLFunctions_4_5_Compatibility">QOpenGLFunctions_4_5_Compatibility</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.5 compatibility profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_4_5_core.webxml" xlink:title="QOpenGLFunctions_4_5_Core" xrefstyle="class" annotations="QOpenGLFunctions_4_5_Core">QOpenGLFunctions_4_5_Core</db:link>
               </db:td>
               <db:td>All functions for OpenGL 4.5 core profile</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglfunctions_es2.webxml" xlink:title="QOpenGLFunctions_ES2" xrefstyle="class" annotations="QOpenGLFunctions_ES2">QOpenGLFunctions_ES2</db:link>
               </db:td>
               <db:td>All functions for OpenGL ES 2</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglpaintdevice.webxml" xlink:title="QOpenGLPaintDevice" xrefstyle="class" annotations="QOpenGLPaintDevice">QOpenGLPaintDevice</db:link>
               </db:td>
               <db:td>Enables painting to an OpenGL context using QPainter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglpixeltransferoptions.webxml" xlink:title="QOpenGLPixelTransferOptions" xrefstyle="class" annotations="QOpenGLPixelTransferOptions">QOpenGLPixelTransferOptions</db:link>
               </db:td>
               <db:td>Describes the pixel storage modes that affect the unpacking of pixels during texture upload</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglshader.webxml" xlink:title="QOpenGLShader" xrefstyle="class" annotations="QOpenGLShader">QOpenGLShader</db:link>
               </db:td>
               <db:td>Allows OpenGL shaders to be compiled</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglshaderprogram.webxml" xlink:title="QOpenGLShaderProgram" xrefstyle="class" annotations="QOpenGLShaderProgram">QOpenGLShaderProgram</db:link>
               </db:td>
               <db:td>Allows OpenGL shader programs to be linked and used</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopengltexture.webxml" xlink:title="QOpenGLTexture" xrefstyle="class" annotations="QOpenGLTexture">QOpenGLTexture</db:link>
               </db:td>
               <db:td>Encapsulates an OpenGL texture object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopengltextureblitter.webxml" xlink:title="QOpenGLTextureBlitter" xrefstyle="class" annotations="QOpenGLTextureBlitter">QOpenGLTextureBlitter</db:link>
               </db:td>
               <db:td>Convenient way to draw textured quads via OpenGL</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopengltimemonitor.webxml" xlink:title="QOpenGLTimeMonitor" xrefstyle="class" annotations="QOpenGLTimeMonitor">QOpenGLTimeMonitor</db:link>
               </db:td>
               <db:td>Wraps a sequence of OpenGL timer query objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopengltimerquery.webxml" xlink:title="QOpenGLTimerQuery" xrefstyle="class" annotations="QOpenGLTimerQuery">QOpenGLTimerQuery</db:link>
               </db:td>
               <db:td>Wraps an OpenGL timer query object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglversionprofile.webxml" xlink:title="QOpenGLVersionProfile" xrefstyle="class" annotations="QOpenGLVersionProfile">QOpenGLVersionProfile</db:link>
               </db:td>
               <db:td>Represents the version and if applicable the profile of an OpenGL context</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglvertexarrayobject.webxml" xlink:title="QOpenGLVertexArrayObject" xrefstyle="class" annotations="QOpenGLVertexArrayObject">QOpenGLVertexArrayObject</db:link>
               </db:td>
               <db:td>Wraps an OpenGL Vertex Array Object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglvertexarrayobject::binder.webxml" xlink:title="QOpenGLVertexArrayObject::Binder" xrefstyle="class" annotations="QOpenGLVertexArrayObject::Binder">QOpenGLVertexArrayObject::Binder</db:link>
               </db:td>
               <db:td>QOpenGLVertexArrayObject::Binder class is a convenience class to help with the binding and releasing of OpenGL Vertex Array Objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglwidget.webxml" xlink:title="QOpenGLWidget" xrefstyle="class" annotations="QOpenGLWidget">QOpenGLWidget</db:link>
               </db:td>
               <db:td>Widget for rendering OpenGL graphics</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qopenglwindow.webxml" xlink:title="QOpenGLWindow" xrefstyle="class" annotations="QOpenGLWindow">QOpenGLWindow</db:link>
               </db:td>
               <db:td>Convenience subclass of QWindow to perform OpenGL painting</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qoperatingsystemversion.webxml" xlink:title="QOperatingSystemVersion" xrefstyle="class" annotations="QOperatingSystemVersion">QOperatingSystemVersion</db:link>
               </db:td>
               <db:td>Information about the operating system version</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>P</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpagelayout.webxml" xlink:title="QPageLayout" xrefstyle="class" annotations="QPageLayout">QPageLayout</db:link>
               </db:td>
               <db:td>Describes the size, orientation and margins of a page</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpagesetupdialog.webxml" xlink:title="QPageSetupDialog" xrefstyle="class" annotations="QPageSetupDialog">QPageSetupDialog</db:link>
               </db:td>
               <db:td>Configuration dialog for the page-related options on a printer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpagesize.webxml" xlink:title="QPageSize" xrefstyle="class" annotations="QPageSize">QPageSize</db:link>
               </db:td>
               <db:td>Describes the size and name of a defined page size</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpagedpaintdevice.webxml" xlink:title="QPagedPaintDevice" xrefstyle="class" annotations="QPagedPaintDevice">QPagedPaintDevice</db:link>
               </db:td>
               <db:td>Represents a paintdevice that supports multiple pages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpagedpaintdevice::margins.webxml" xlink:title="QPagedPaintDevice::Margins" xrefstyle="class" annotations="QPagedPaintDevice::Margins">QPagedPaintDevice::Margins</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpaintdevice.webxml" xlink:title="QPaintDevice" xrefstyle="class" annotations="QPaintDevice">QPaintDevice</db:link>
               </db:td>
               <db:td>The base class of objects that can be painted on with QPainter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpaintdevicewindow.webxml" xlink:title="QPaintDeviceWindow" xrefstyle="class" annotations="QPaintDeviceWindow">QPaintDeviceWindow</db:link>
               </db:td>
               <db:td>Convenience subclass of QWindow that is also a QPaintDevice</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpaintengine.webxml" xlink:title="QPaintEngine" xrefstyle="class" annotations="QPaintEngine">QPaintEngine</db:link>
               </db:td>
               <db:td>Abstract definition of how QPainter draws to a given device on a given platform</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpaintenginestate.webxml" xlink:title="QPaintEngineState" xrefstyle="class" annotations="QPaintEngineState">QPaintEngineState</db:link>
               </db:td>
               <db:td>Information about the active paint engine's current state</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpaintevent.webxml" xlink:title="QPaintEvent" xrefstyle="class" annotations="QPaintEvent">QPaintEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for paint events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpainter.webxml" xlink:title="QPainter" xrefstyle="class" annotations="QPainter">QPainter</db:link>
               </db:td>
               <db:td>Performs low-level painting on widgets and other paint devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpainter::pixmapfragment.webxml" xlink:title="QPainter::PixmapFragment" xrefstyle="class" annotations="QPainter::PixmapFragment">QPainter::PixmapFragment</db:link>
               </db:td>
               <db:td>This class is used in conjunction with the QPainter::drawPixmapFragments() function to specify how a pixmap, or sub-rect of a pixmap, is drawn</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpainterpath.webxml" xlink:title="QPainterPath" xrefstyle="class" annotations="QPainterPath">QPainterPath</db:link>
               </db:td>
               <db:td>Container for painting operations, enabling graphical shapes to be constructed and reused</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpainterpath::element.webxml" xlink:title="QPainterPath::Element" xrefstyle="class" annotations="QPainterPath::Element">QPainterPath::Element</db:link>
               </db:td>
               <db:td>QPainterPath::Element class specifies the position and type of a subpath</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpainterpathstroker.webxml" xlink:title="QPainterPathStroker" xrefstyle="class" annotations="QPainterPathStroker">QPainterPathStroker</db:link>
               </db:td>
               <db:td>Used to generate fillable outlines for a given painter path</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpair.webxml" xlink:title="QPair" xrefstyle="class" annotations="QPair">QPair</db:link>
               </db:td>
               <db:td>Template class that stores a pair of items</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpalette.webxml" xlink:title="QPalette" xrefstyle="class" annotations="QPalette">QPalette</db:link>
               </db:td>
               <db:td>Contains color groups for each widget state</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpangesture.webxml" xlink:title="QPanGesture" xrefstyle="class" annotations="QPanGesture">QPanGesture</db:link>
               </db:td>
               <db:td>Describes a panning gesture made by the user</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qparallelanimationgroup.webxml" xlink:title="QParallelAnimationGroup" xrefstyle="class" annotations="QParallelAnimationGroup">QParallelAnimationGroup</db:link>
               </db:td>
               <db:td>Parallel group of animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpauseanimation.webxml" xlink:title="QPauseAnimation" xrefstyle="class" annotations="QPauseAnimation">QPauseAnimation</db:link>
               </db:td>
               <db:td>Pause for QSequentialAnimationGroup</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpdfwriter.webxml" xlink:title="QPdfWriter" xrefstyle="class" annotations="QPdfWriter">QPdfWriter</db:link>
               </db:td>
               <db:td>Class to generate PDFs that can be used as a paint device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpen.webxml" xlink:title="QPen" xrefstyle="class" annotations="QPen">QPen</db:link>
               </db:td>
               <db:td>Defines how a QPainter should draw lines and outlines of shapes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpercentbarseries.webxml" xlink:title="QPercentBarSeries" xrefstyle="class" annotations="QPercentBarSeries">QPercentBarSeries</db:link>
               </db:td>
               <db:td>Presents a series of categorized data as a percentage of each category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpersistentmodelindex.webxml" xlink:title="QPersistentModelIndex" xrefstyle="class" annotations="QPersistentModelIndex">QPersistentModelIndex</db:link>
               </db:td>
               <db:td>Used to locate data in a data model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpicture.webxml" xlink:title="QPicture" xrefstyle="class" annotations="QPicture">QPicture</db:link>
               </db:td>
               <db:td>Paint device that records and replays QPainter commands</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpictureformatplugin.webxml" xlink:title="QPictureFormatPlugin" xrefstyle="class" annotations="QPictureFormatPlugin">QPictureFormatPlugin</db:link>
               </db:td>
               <db:td>Abstract base for custom picture format plugins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpictureio.webxml" xlink:title="QPictureIO" xrefstyle="class" annotations="QPictureIO">QPictureIO</db:link>
               </db:td>
               <db:td>Contains parameters for loading and saving pictures</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpielegendmarker.webxml" xlink:title="QPieLegendMarker" xrefstyle="class" annotations="QPieLegendMarker">QPieLegendMarker</db:link>
               </db:td>
               <db:td>Legend marker for a pie series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpieseries.webxml" xlink:title="QPieSeries" xrefstyle="class" annotations="QPieSeries">QPieSeries</db:link>
               </db:td>
               <db:td>Presents data in pie charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpieslice.webxml" xlink:title="QPieSlice" xrefstyle="class" annotations="QPieSlice">QPieSlice</db:link>
               </db:td>
               <db:td>Represents a single slice in a pie series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpinchgesture.webxml" xlink:title="QPinchGesture" xrefstyle="class" annotations="QPinchGesture">QPinchGesture</db:link>
               </db:td>
               <db:td>Describes a pinch gesture made by the user</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpixelformat.webxml" xlink:title="QPixelFormat" xrefstyle="class" annotations="QPixelFormat">QPixelFormat</db:link>
               </db:td>
               <db:td>Class for describing different pixel layouts in graphics buffers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpixmap.webxml" xlink:title="QPixmap" xrefstyle="class" annotations="QPixmap">QPixmap</db:link>
               </db:td>
               <db:td>Off-screen image representation that can be used as a paint device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpixmapcache.webxml" xlink:title="QPixmapCache" xrefstyle="class" annotations="QPixmapCache">QPixmapCache</db:link>
               </db:td>
               <db:td>Application-wide cache for pixmaps</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpixmapcache::key.webxml" xlink:title="QPixmapCache::Key" xrefstyle="class" annotations="QPixmapCache::Key">QPixmapCache::Key</db:link>
               </db:td>
               <db:td>QPixmapCache::Key class can be used for efficient access to the QPixmapCache</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpixmapcache::keydata.webxml" xlink:title="QPixmapCache::KeyData" xrefstyle="class" annotations="QPixmapCache::KeyData">QPixmapCache::KeyData</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qplaintextdocumentlayout.webxml" xlink:title="QPlainTextDocumentLayout" xrefstyle="class" annotations="QPlainTextDocumentLayout">QPlainTextDocumentLayout</db:link>
               </db:td>
               <db:td>Implements a plain text layout for QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qplaintextedit.webxml" xlink:title="QPlainTextEdit" xrefstyle="class" annotations="QPlainTextEdit">QPlainTextEdit</db:link>
               </db:td>
               <db:td>Widget that is used to edit and display plain text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qplatformsurfaceevent.webxml" xlink:title="QPlatformSurfaceEvent" xrefstyle="class" annotations="QPlatformSurfaceEvent">QPlatformSurfaceEvent</db:link>
               </db:td>
               <db:td>Used to notify about native platform surface events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpluginloader.webxml" xlink:title="QPluginLoader" xrefstyle="class" annotations="QPluginLoader">QPluginLoader</db:link>
               </db:td>
               <db:td>Loads a plugin at run-time</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpoint.webxml" xlink:title="QPoint" xrefstyle="class" annotations="QPoint">QPoint</db:link>
               </db:td>
               <db:td>Defines a point in the plane using integer precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpointf.webxml" xlink:title="QPointF" xrefstyle="class" annotations="QPointF">QPointF</db:link>
               </db:td>
               <db:td>Defines a point in the plane using floating point precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpointer.webxml" xlink:title="QPointer" xrefstyle="class" annotations="QPointer">QPointer</db:link>
               </db:td>
               <db:td>Template class that provides guarded pointers to QObject</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpointingdeviceuniqueid.webxml" xlink:title="QPointingDeviceUniqueId" xrefstyle="class" annotations="QPointingDeviceUniqueId">QPointingDeviceUniqueId</db:link>
               </db:td>
               <db:td>Identifies a unique object, such as a tagged token or stylus, which is used with a pointing device</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpolarchart.webxml" xlink:title="QPolarChart" xrefstyle="class" annotations="QPolarChart">QPolarChart</db:link>
               </db:td>
               <db:td>Presents data in polar charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpolygon.webxml" xlink:title="QPolygon" xrefstyle="class" annotations="QPolygon">QPolygon</db:link>
               </db:td>
               <db:td>Vector of points using integer precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpolygonf.webxml" xlink:title="QPolygonF" xrefstyle="class" annotations="QPolygonF">QPolygonF</db:link>
               </db:td>
               <db:td>Vector of points using floating point precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprintdialog.webxml" xlink:title="QPrintDialog" xrefstyle="class" annotations="QPrintDialog">QPrintDialog</db:link>
               </db:td>
               <db:td>Dialog for specifying the printer's configuration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprintengine.webxml" xlink:title="QPrintEngine" xrefstyle="class" annotations="QPrintEngine">QPrintEngine</db:link>
               </db:td>
               <db:td>Defines an interface for how QPrinter interacts with a given printing subsystem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprintpreviewdialog.webxml" xlink:title="QPrintPreviewDialog" xrefstyle="class" annotations="QPrintPreviewDialog">QPrintPreviewDialog</db:link>
               </db:td>
               <db:td>Dialog for previewing and configuring page layouts for printer output</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprintpreviewwidget.webxml" xlink:title="QPrintPreviewWidget" xrefstyle="class" annotations="QPrintPreviewWidget">QPrintPreviewWidget</db:link>
               </db:td>
               <db:td>Widget for previewing page layouts for printer output</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprinter.webxml" xlink:title="QPrinter" xrefstyle="class" annotations="QPrinter">QPrinter</db:link>
               </db:td>
               <db:td>Paint device that paints on a printer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprinterinfo.webxml" xlink:title="QPrinterInfo" xrefstyle="class" annotations="QPrinterInfo">QPrinterInfo</db:link>
               </db:td>
               <db:td>Gives access to information about existing printers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprocess.webxml" xlink:title="QProcess" xrefstyle="class" annotations="QProcess">QProcess</db:link>
               </db:td>
               <db:td>Used to start external programs and to communicate with them</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprocess::createprocessarguments.webxml" xlink:title="QProcess::CreateProcessArguments" xrefstyle="class" annotations="QProcess::CreateProcessArguments">QProcess::CreateProcessArguments</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprocessenvironment.webxml" xlink:title="QProcessEnvironment" xrefstyle="class" annotations="QProcessEnvironment">QProcessEnvironment</db:link>
               </db:td>
               <db:td>Holds the environment variables that can be passed to a program</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprogressbar.webxml" xlink:title="QProgressBar" xrefstyle="class" annotations="QProgressBar">QProgressBar</db:link>
               </db:td>
               <db:td>Horizontal or vertical progress bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qprogressdialog.webxml" xlink:title="QProgressDialog" xrefstyle="class" annotations="QProgressDialog">QProgressDialog</db:link>
               </db:td>
               <db:td>Feedback on the progress of a slow operation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpropertyanimation.webxml" xlink:title="QPropertyAnimation" xrefstyle="class" annotations="QPropertyAnimation">QPropertyAnimation</db:link>
               </db:td>
               <db:td>Animates Qt properties</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qproxystyle.webxml" xlink:title="QProxyStyle" xrefstyle="class" annotations="QProxyStyle">QProxyStyle</db:link>
               </db:td>
               <db:td>Convenience class that simplifies dynamically overriding QStyle elements</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qpushbutton.webxml" xlink:title="QPushButton" xrefstyle="class" annotations="QPushButton">QPushButton</db:link>
               </db:td>
               <db:td>Command button</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>Q</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlapplicationengine.webxml" xlink:title="QQmlApplicationEngine" xrefstyle="class" annotations="QQmlApplicationEngine">QQmlApplicationEngine</db:link>
               </db:td>
               <db:td>Convenient way to load an application from a single QML file</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlcomponent.webxml" xlink:title="QQmlComponent" xrefstyle="class" annotations="QQmlComponent">QQmlComponent</db:link>
               </db:td>
               <db:td>Encapsulates a QML component definition</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlcontext.webxml" xlink:title="QQmlContext" xrefstyle="class" annotations="QQmlContext">QQmlContext</db:link>
               </db:td>
               <db:td>Defines a context within a QML engine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlcontext::propertypair.webxml" xlink:title="QQmlContext::PropertyPair" xrefstyle="class" annotations="QQmlContext::PropertyPair">QQmlContext::PropertyPair</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlengine.webxml" xlink:title="QQmlEngine" xrefstyle="class" annotations="QQmlEngine">QQmlEngine</db:link>
               </db:td>
               <db:td>Environment for instantiating QML components</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlerror.webxml" xlink:title="QQmlError" xrefstyle="class" annotations="QQmlError">QQmlError</db:link>
               </db:td>
               <db:td>Encapsulates a QML error</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlexpression.webxml" xlink:title="QQmlExpression" xrefstyle="class" annotations="QQmlExpression">QQmlExpression</db:link>
               </db:td>
               <db:td>Evaluates JavaScript in a QML context</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlextensionplugin.webxml" xlink:title="QQmlExtensionPlugin" xrefstyle="class" annotations="QQmlExtensionPlugin">QQmlExtensionPlugin</db:link>
               </db:td>
               <db:td>Abstract base for custom QML extension plugins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlfileselector.webxml" xlink:title="QQmlFileSelector" xrefstyle="class" annotations="QQmlFileSelector">QQmlFileSelector</db:link>
               </db:td>
               <db:td>A class for applying a QFileSelector to QML file loading</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlimageproviderbase.webxml" xlink:title="QQmlImageProviderBase" xrefstyle="class" annotations="QQmlImageProviderBase">QQmlImageProviderBase</db:link>
               </db:td>
               <db:td>Used to register image providers in the QML engine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlincubationcontroller.webxml" xlink:title="QQmlIncubationController" xrefstyle="class" annotations="QQmlIncubationController">QQmlIncubationController</db:link>
               </db:td>
               <db:td>Instances drive the progress of QQmlIncubators</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlincubator.webxml" xlink:title="QQmlIncubator" xrefstyle="class" annotations="QQmlIncubator">QQmlIncubator</db:link>
               </db:td>
               <db:td>Allows QML objects to be created asynchronously</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmllistproperty.webxml" xlink:title="QQmlListProperty" xrefstyle="class" annotations="QQmlListProperty">QQmlListProperty</db:link>
               </db:td>
               <db:td>Allows applications to expose list-like properties of QObject-derived classes to QML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmllistreference.webxml" xlink:title="QQmlListReference" xrefstyle="class" annotations="QQmlListReference">QQmlListReference</db:link>
               </db:td>
               <db:td>Allows the manipulation of QQmlListProperty properties</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlndefrecord.webxml" xlink:title="QQmlNdefRecord" xrefstyle="class" annotations="QQmlNdefRecord">QQmlNdefRecord</db:link>
               </db:td>
               <db:td>Implements the NdefRecord type in QML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlnetworkaccessmanagerfactory.webxml" xlink:title="QQmlNetworkAccessManagerFactory" xrefstyle="class" annotations="QQmlNetworkAccessManagerFactory">QQmlNetworkAccessManagerFactory</db:link>
               </db:td>
               <db:td>Creates QNetworkAccessManager instances for a QML engine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlparserstatus.webxml" xlink:title="QQmlParserStatus" xrefstyle="class" annotations="QQmlParserStatus">QQmlParserStatus</db:link>
               </db:td>
               <db:td>Updates on the QML parser state</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlproperty.webxml" xlink:title="QQmlProperty" xrefstyle="class" annotations="QQmlProperty">QQmlProperty</db:link>
               </db:td>
               <db:td>Abstracts accessing properties on objects created from QML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlpropertymap.webxml" xlink:title="QQmlPropertyMap" xrefstyle="class" annotations="QQmlPropertyMap">QQmlPropertyMap</db:link>
               </db:td>
               <db:td>Allows you to set key-value pairs that can be used in QML bindings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlpropertyvaluesource.webxml" xlink:title="QQmlPropertyValueSource" xrefstyle="class" annotations="QQmlPropertyValueSource">QQmlPropertyValueSource</db:link>
               </db:td>
               <db:td>Interface for property value sources such as animations and bindings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqmlscriptstring.webxml" xlink:title="QQmlScriptString" xrefstyle="class" annotations="QQmlScriptString">QQmlScriptString</db:link>
               </db:td>
               <db:td>Encapsulates a script and its context</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qquaternion.webxml" xlink:title="QQuaternion" xrefstyle="class" annotations="QQuaternion">QQuaternion</db:link>
               </db:td>
               <db:td>Represents a quaternion consisting of a vector and scalar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qqueue.webxml" xlink:title="QQueue" xrefstyle="class" annotations="QQueue">QQueue</db:link>
               </db:td>
               <db:td>Generic container that provides a queue</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>R</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qradialgradient.webxml" xlink:title="QRadialGradient" xrefstyle="class" annotations="QRadialGradient">QRadialGradient</db:link>
               </db:td>
               <db:td>Used in combination with QBrush to specify a radial gradient brush</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qradiobutton.webxml" xlink:title="QRadioButton" xrefstyle="class" annotations="QRadioButton">QRadioButton</db:link>
               </db:td>
               <db:td>Radio button with a text label</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrandomgenerator.webxml" xlink:title="QRandomGenerator" xrefstyle="class" annotations="QRandomGenerator">QRandomGenerator</db:link>
               </db:td>
               <db:td>Allows one to obtain random values from a high-quality Random Number Generator</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrandomgenerator64.webxml" xlink:title="QRandomGenerator64" xrefstyle="class" annotations="QRandomGenerator64">QRandomGenerator64</db:link>
               </db:td>
               <db:td>Allows one to obtain 64-bit random values from a high-quality, seed-less Random Number Generator</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrasterpaintengine.webxml" xlink:title="QRasterPaintEngine" xrefstyle="class" annotations="QRasterPaintEngine">QRasterPaintEngine</db:link>
               </db:td>
               <db:td>Enables hardware acceleration of painting operations in Qt for Embedded Linux</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrasterwindow.webxml" xlink:title="QRasterWindow" xrefstyle="class" annotations="QRasterWindow">QRasterWindow</db:link>
               </db:td>
               <db:td>Convenience class for using QPainter on a QWindow</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrawfont.webxml" xlink:title="QRawFont" xrefstyle="class" annotations="QRawFont">QRawFont</db:link>
               </db:td>
               <db:td>Access to a single physical instance of a font</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qreadlocker.webxml" xlink:title="QReadLocker" xrefstyle="class" annotations="QReadLocker">QReadLocker</db:link>
               </db:td>
               <db:td>Convenience class that simplifies locking and unlocking read-write locks for read access</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qreadwritelock.webxml" xlink:title="QReadWriteLock" xrefstyle="class" annotations="QReadWriteLock">QReadWriteLock</db:link>
               </db:td>
               <db:td>Read-write locking</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrect.webxml" xlink:title="QRect" xrefstyle="class" annotations="QRect">QRect</db:link>
               </db:td>
               <db:td>Defines a rectangle in the plane using integer precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrectf.webxml" xlink:title="QRectF" xrefstyle="class" annotations="QRectF">QRectF</db:link>
               </db:td>
               <db:td>Defines a rectangle in the plane using floating point precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregexp.webxml" xlink:title="QRegExp" xrefstyle="class" annotations="QRegExp">QRegExp</db:link>
               </db:td>
               <db:td>Pattern matching using regular expressions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregexpvalidator.webxml" xlink:title="QRegExpValidator" xrefstyle="class" annotations="QRegExpValidator">QRegExpValidator</db:link>
               </db:td>
               <db:td>Used to check a string against a regular expression</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregion.webxml" xlink:title="QRegion" xrefstyle="class" annotations="QRegion">QRegion</db:link>
               </db:td>
               <db:td>Specifies a clip region for a painter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregularexpression.webxml" xlink:title="QRegularExpression" xrefstyle="class" annotations="QRegularExpression">QRegularExpression</db:link>
               </db:td>
               <db:td>Pattern matching using regular expressions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregularexpressionmatch.webxml" xlink:title="QRegularExpressionMatch" xrefstyle="class" annotations="QRegularExpressionMatch">QRegularExpressionMatch</db:link>
               </db:td>
               <db:td>The results of a matching a QRegularExpression against a string</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregularexpressionmatchiterator.webxml" xlink:title="QRegularExpressionMatchIterator" xrefstyle="class" annotations="QRegularExpressionMatchIterator">QRegularExpressionMatchIterator</db:link>
               </db:td>
               <db:td>Iterator on the results of a global match of a QRegularExpression object against a string</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qregularexpressionvalidator.webxml" xlink:title="QRegularExpressionValidator" xrefstyle="class" annotations="QRegularExpressionValidator">QRegularExpressionValidator</db:link>
               </db:td>
               <db:td>Used to check a string against a regular expression</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qresizeevent.webxml" xlink:title="QResizeEvent" xrefstyle="class" annotations="QResizeEvent">QResizeEvent</db:link>
               </db:td>
               <db:td>Contains event parameters for resize events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qresource.webxml" xlink:title="QResource" xrefstyle="class" annotations="QResource">QResource</db:link>
               </db:td>
               <db:td>Interface for reading directly from resources</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrgba64.webxml" xlink:title="QRgba64" xrefstyle="class" annotations="QRgba64">QRgba64</db:link>
               </db:td>
               <db:td>Struct contains a 64-bit RGB color</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrubberband.webxml" xlink:title="QRubberBand" xrefstyle="class" annotations="QRubberBand">QRubberBand</db:link>
               </db:td>
               <db:td>Rectangle or line that can indicate a selection or a boundary</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qrunnable.webxml" xlink:title="QRunnable" xrefstyle="class" annotations="QRunnable">QRunnable</db:link>
               </db:td>
               <db:td>The base class for all runnable objects</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>S</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsgmaterialtype.webxml" xlink:title="QSGMaterialType" xrefstyle="class" annotations="QSGMaterialType">QSGMaterialType</db:link>
               </db:td>
               <db:td>Used as a unique type token in combination with QSGMaterial</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsavefile.webxml" xlink:title="QSaveFile" xrefstyle="class" annotations="QSaveFile">QSaveFile</db:link>
               </db:td>
               <db:td>Interface for safely writing to files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscatter3dseries.webxml" xlink:title="QScatter3DSeries" xrefstyle="class" annotations="QScatter3DSeries">QScatter3DSeries</db:link>
               </db:td>
               <db:td>Represents a data series in a 3D scatter graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscatterdataitem.webxml" xlink:title="QScatterDataItem" xrefstyle="class" annotations="QScatterDataItem">QScatterDataItem</db:link>
               </db:td>
               <db:td>Container for resolved data to be added to scatter graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscatterdataproxy.webxml" xlink:title="QScatterDataProxy" xrefstyle="class" annotations="QScatterDataProxy">QScatterDataProxy</db:link>
               </db:td>
               <db:td>The data proxy for 3D scatter graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscatterseries.webxml" xlink:title="QScatterSeries" xrefstyle="class" annotations="QScatterSeries">QScatterSeries</db:link>
               </db:td>
               <db:td>Presents data in scatter charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscopedarraypointer.webxml" xlink:title="QScopedArrayPointer" xrefstyle="class" annotations="QScopedArrayPointer">QScopedArrayPointer</db:link>
               </db:td>
               <db:td>Stores a pointer to a dynamically allocated array of objects, and deletes it upon destruction</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscopedpointer.webxml" xlink:title="QScopedPointer" xrefstyle="class" annotations="QScopedPointer">QScopedPointer</db:link>
               </db:td>
               <db:td>Stores a pointer to a dynamically allocated object, and deletes it upon destruction</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscopedvaluerollback.webxml" xlink:title="QScopedValueRollback" xrefstyle="class" annotations="QScopedValueRollback">QScopedValueRollback</db:link>
               </db:td>
               <db:td>Resets a variable to its previous value on destruction</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscreen.webxml" xlink:title="QScreen" xrefstyle="class" annotations="QScreen">QScreen</db:link>
               </db:td>
               <db:td>Used to query screen properties</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscrollarea.webxml" xlink:title="QScrollArea" xrefstyle="class" annotations="QScrollArea">QScrollArea</db:link>
               </db:td>
               <db:td>Scrolling view onto another widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscrollbar.webxml" xlink:title="QScrollBar" xrefstyle="class" annotations="QScrollBar">QScrollBar</db:link>
               </db:td>
               <db:td>Vertical or horizontal scroll bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscrollevent.webxml" xlink:title="QScrollEvent" xrefstyle="class" annotations="QScrollEvent">QScrollEvent</db:link>
               </db:td>
               <db:td>Sent when scrolling</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscrollprepareevent.webxml" xlink:title="QScrollPrepareEvent" xrefstyle="class" annotations="QScrollPrepareEvent">QScrollPrepareEvent</db:link>
               </db:td>
               <db:td>Sent in preparation of scrolling</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscroller.webxml" xlink:title="QScroller" xrefstyle="class" annotations="QScroller">QScroller</db:link>
               </db:td>
               <db:td>Enables kinetic scrolling for any scrolling widget or graphics item</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qscrollerproperties.webxml" xlink:title="QScrollerProperties" xrefstyle="class" annotations="QScrollerProperties">QScrollerProperties</db:link>
               </db:td>
               <db:td>Stores the settings for a QScroller</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsctpserver.webxml" xlink:title="QSctpServer" xrefstyle="class" annotations="QSctpServer">QSctpServer</db:link>
               </db:td>
               <db:td>SCTP-based server</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsctpsocket.webxml" xlink:title="QSctpSocket" xrefstyle="class" annotations="QSctpSocket">QSctpSocket</db:link>
               </db:td>
               <db:td>SCTP socket</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsemaphore.webxml" xlink:title="QSemaphore" xrefstyle="class" annotations="QSemaphore">QSemaphore</db:link>
               </db:td>
               <db:td>General counting semaphore</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsemaphorereleaser.webxml" xlink:title="QSemaphoreReleaser" xrefstyle="class" annotations="QSemaphoreReleaser">QSemaphoreReleaser</db:link>
               </db:td>
               <db:td>Exception-safe deferral of a QSemaphore::release() call</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsequentialanimationgroup.webxml" xlink:title="QSequentialAnimationGroup" xrefstyle="class" annotations="QSequentialAnimationGroup">QSequentialAnimationGroup</db:link>
               </db:td>
               <db:td>Sequential group of animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsequentialiterable.webxml" xlink:title="QSequentialIterable" xrefstyle="class" annotations="QSequentialIterable">QSequentialIterable</db:link>
               </db:td>
               <db:td>Iterable interface for a container in a QVariant</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsequentialiterable::const_iterator.webxml" xlink:title="QSequentialIterable::const_iterator" xrefstyle="class" annotations="QSequentialIterable::const_iterator">QSequentialIterable::const_iterator</db:link>
               </db:td>
               <db:td>QSequentialIterable::const_iterator allows iteration over a container in a QVariant</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsessionmanager.webxml" xlink:title="QSessionManager" xrefstyle="class" annotations="QSessionManager">QSessionManager</db:link>
               </db:td>
               <db:td>Access to the session manager</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qset.webxml" xlink:title="QSet" xrefstyle="class" annotations="QSet">QSet</db:link>
               </db:td>
               <db:td>Template class that provides a hash-table-based set</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qset::const_iterator.webxml" xlink:title="QSet::const_iterator" xrefstyle="class" annotations="QSet::const_iterator">QSet::const_iterator</db:link>
               </db:td>
               <db:td>QSet::const_iterator class provides an STL-style const iterator for QSet</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qset::iterator.webxml" xlink:title="QSet::iterator" xrefstyle="class" annotations="QSet::iterator">QSet::iterator</db:link>
               </db:td>
               <db:td>QSet::iterator class provides an STL-style non-const iterator for QSet</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsetiterator.webxml" xlink:title="QSetIterator" xrefstyle="class" annotations="QSetIterator">QSetIterator</db:link>
               </db:td>
               <db:td>Java-style const iterator for QSet</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsettings.webxml" xlink:title="QSettings" xrefstyle="class" annotations="QSettings">QSettings</db:link>
               </db:td>
               <db:td>Persistent platform-independent application settings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qshareddata.webxml" xlink:title="QSharedData" xrefstyle="class" annotations="QSharedData">QSharedData</db:link>
               </db:td>
               <db:td>Base class for shared data objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qshareddatapointer.webxml" xlink:title="QSharedDataPointer" xrefstyle="class" annotations="QSharedDataPointer">QSharedDataPointer</db:link>
               </db:td>
               <db:td>Represents a pointer to an implicitly shared object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsharedmemory.webxml" xlink:title="QSharedMemory" xrefstyle="class" annotations="QSharedMemory">QSharedMemory</db:link>
               </db:td>
               <db:td>Access to a shared memory segment</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsharedpointer.webxml" xlink:title="QSharedPointer" xrefstyle="class" annotations="QSharedPointer">QSharedPointer</db:link>
               </db:td>
               <db:td>Holds a strong reference to a shared pointer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qshortcut.webxml" xlink:title="QShortcut" xrefstyle="class" annotations="QShortcut">QShortcut</db:link>
               </db:td>
               <db:td>Used to create keyboard shortcuts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qshortcutevent.webxml" xlink:title="QShortcutEvent" xrefstyle="class" annotations="QShortcutEvent">QShortcutEvent</db:link>
               </db:td>
               <db:td>Event which is generated when the user presses a key combination</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qshowevent.webxml" xlink:title="QShowEvent" xrefstyle="class" annotations="QShowEvent">QShowEvent</db:link>
               </db:td>
               <db:td>Event that is sent when a widget is shown</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsignalblocker.webxml" xlink:title="QSignalBlocker" xrefstyle="class" annotations="QSignalBlocker">QSignalBlocker</db:link>
               </db:td>
               <db:td>Exception-safe wrapper around QObject::blockSignals()</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsignalmapper.webxml" xlink:title="QSignalMapper" xrefstyle="class" annotations="QSignalMapper">QSignalMapper</db:link>
               </db:td>
               <db:td>Bundles signals from identifiable senders</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsignalspy.webxml" xlink:title="QSignalSpy" xrefstyle="class" annotations="QSignalSpy">QSignalSpy</db:link>
               </db:td>
               <db:td>Enables introspection of signal emission</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsignaltransition.webxml" xlink:title="QSignalTransition" xrefstyle="class" annotations="QSignalTransition">QSignalTransition</db:link>
               </db:td>
               <db:td>Transition based on a Qt signal</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsimplexmlnodemodel.webxml" xlink:title="QSimpleXmlNodeModel" xrefstyle="class" annotations="QSimpleXmlNodeModel">QSimpleXmlNodeModel</db:link>
               </db:td>
               <db:td>Implementation of QAbstractXmlNodeModel sufficient for many common cases</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsize.webxml" xlink:title="QSize" xrefstyle="class" annotations="QSize">QSize</db:link>
               </db:td>
               <db:td>Defines the size of a two-dimensional object using integer point precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsizef.webxml" xlink:title="QSizeF" xrefstyle="class" annotations="QSizeF">QSizeF</db:link>
               </db:td>
               <db:td>Defines the size of a two-dimensional object using floating point precision</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsizegrip.webxml" xlink:title="QSizeGrip" xrefstyle="class" annotations="QSizeGrip">QSizeGrip</db:link>
               </db:td>
               <db:td>Resize handle for resizing top-level windows</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsizepolicy.webxml" xlink:title="QSizePolicy" xrefstyle="class" annotations="QSizePolicy">QSizePolicy</db:link>
               </db:td>
               <db:td>Layout attribute describing horizontal and vertical resizing policy</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qslider.webxml" xlink:title="QSlider" xrefstyle="class" annotations="QSlider">QSlider</db:link>
               </db:td>
               <db:td>Vertical or horizontal slider</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsocketnotifier.webxml" xlink:title="QSocketNotifier" xrefstyle="class" annotations="QSocketNotifier">QSocketNotifier</db:link>
               </db:td>
               <db:td>Support for monitoring activity on a file descriptor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsortfilterproxymodel.webxml" xlink:title="QSortFilterProxyModel" xrefstyle="class" annotations="QSortFilterProxyModel">QSortFilterProxyModel</db:link>
               </db:td>
               <db:td>Support for sorting and filtering data passed between another model and a view</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsourcelocation.webxml" xlink:title="QSourceLocation" xrefstyle="class" annotations="QSourceLocation">QSourceLocation</db:link>
               </db:td>
               <db:td>Identifies a location in a resource by URI, line, and column</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qspaceritem.webxml" xlink:title="QSpacerItem" xrefstyle="class" annotations="QSpacerItem">QSpacerItem</db:link>
               </db:td>
               <db:td>Blank space in a layout</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qspinbox.webxml" xlink:title="QSpinBox" xrefstyle="class" annotations="QSpinBox">QSpinBox</db:link>
               </db:td>
               <db:td>Spin box widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsplashscreen.webxml" xlink:title="QSplashScreen" xrefstyle="class" annotations="QSplashScreen">QSplashScreen</db:link>
               </db:td>
               <db:td>Splash screen that can be shown during application startup</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsplineseries.webxml" xlink:title="QSplineSeries" xrefstyle="class" annotations="QSplineSeries">QSplineSeries</db:link>
               </db:td>
               <db:td>Presents data as spline charts</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsplitter.webxml" xlink:title="QSplitter" xrefstyle="class" annotations="QSplitter">QSplitter</db:link>
               </db:td>
               <db:td>Implements a splitter widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsplitterhandle.webxml" xlink:title="QSplitterHandle" xrefstyle="class" annotations="QSplitterHandle">QSplitterHandle</db:link>
               </db:td>
               <db:td>Handle functionality for the splitter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqldatabase.webxml" xlink:title="QSqlDatabase" xrefstyle="class" annotations="QSqlDatabase">QSqlDatabase</db:link>
               </db:td>
               <db:td>Handles a connection to a database</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqldriver.webxml" xlink:title="QSqlDriver" xrefstyle="class" annotations="QSqlDriver">QSqlDriver</db:link>
               </db:td>
               <db:td>Abstract base class for accessing specific SQL databases</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqldrivercreator.webxml" xlink:title="QSqlDriverCreator" xrefstyle="class" annotations="QSqlDriverCreator">QSqlDriverCreator</db:link>
               </db:td>
               <db:td>Template class that provides a SQL driver factory for a specific driver type</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqldrivercreatorbase.webxml" xlink:title="QSqlDriverCreatorBase" xrefstyle="class" annotations="QSqlDriverCreatorBase">QSqlDriverCreatorBase</db:link>
               </db:td>
               <db:td>The base class for SQL driver factories</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqldriverplugin.webxml" xlink:title="QSqlDriverPlugin" xrefstyle="class" annotations="QSqlDriverPlugin">QSqlDriverPlugin</db:link>
               </db:td>
               <db:td>Abstract base for custom QSqlDriver plugins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlerror.webxml" xlink:title="QSqlError" xrefstyle="class" annotations="QSqlError">QSqlError</db:link>
               </db:td>
               <db:td>SQL database error information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlfield.webxml" xlink:title="QSqlField" xrefstyle="class" annotations="QSqlField">QSqlField</db:link>
               </db:td>
               <db:td>Manipulates the fields in SQL database tables and views</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlindex.webxml" xlink:title="QSqlIndex" xrefstyle="class" annotations="QSqlIndex">QSqlIndex</db:link>
               </db:td>
               <db:td>Functions to manipulate and describe database indexes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlquery.webxml" xlink:title="QSqlQuery" xrefstyle="class" annotations="QSqlQuery">QSqlQuery</db:link>
               </db:td>
               <db:td>Means of executing and manipulating SQL statements</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlquerymodel.webxml" xlink:title="QSqlQueryModel" xrefstyle="class" annotations="QSqlQueryModel">QSqlQueryModel</db:link>
               </db:td>
               <db:td>Read-only data model for SQL result sets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlrecord.webxml" xlink:title="QSqlRecord" xrefstyle="class" annotations="QSqlRecord">QSqlRecord</db:link>
               </db:td>
               <db:td>Encapsulates a database record</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlrelation.webxml" xlink:title="QSqlRelation" xrefstyle="class" annotations="QSqlRelation">QSqlRelation</db:link>
               </db:td>
               <db:td>Stores information about an SQL foreign key</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlrelationaltablemodel.webxml" xlink:title="QSqlRelationalTableModel" xrefstyle="class" annotations="QSqlRelationalTableModel">QSqlRelationalTableModel</db:link>
               </db:td>
               <db:td>Editable data model for a single database table, with foreign key support</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqlresult.webxml" xlink:title="QSqlResult" xrefstyle="class" annotations="QSqlResult">QSqlResult</db:link>
               </db:td>
               <db:td>Abstract interface for accessing data from specific SQL databases</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsqltablemodel.webxml" xlink:title="QSqlTableModel" xrefstyle="class" annotations="QSqlTableModel">QSqlTableModel</db:link>
               </db:td>
               <db:td>Editable data model for a single database table</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslcertificate.webxml" xlink:title="QSslCertificate" xrefstyle="class" annotations="QSslCertificate">QSslCertificate</db:link>
               </db:td>
               <db:td>Convenient API for an X509 certificate</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslcertificateextension.webxml" xlink:title="QSslCertificateExtension" xrefstyle="class" annotations="QSslCertificateExtension">QSslCertificateExtension</db:link>
               </db:td>
               <db:td>API for accessing the extensions of an X509 certificate</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslcipher.webxml" xlink:title="QSslCipher" xrefstyle="class" annotations="QSslCipher">QSslCipher</db:link>
               </db:td>
               <db:td>Represents an SSL cryptographic cipher</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslconfiguration.webxml" xlink:title="QSslConfiguration" xrefstyle="class" annotations="QSslConfiguration">QSslConfiguration</db:link>
               </db:td>
               <db:td>Holds the configuration and state of an SSL connection</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qssldiffiehellmanparameters.webxml" xlink:title="QSslDiffieHellmanParameters" xrefstyle="class" annotations="QSslDiffieHellmanParameters">QSslDiffieHellmanParameters</db:link>
               </db:td>
               <db:td>Interface for Diffie-Hellman parameters for servers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslellipticcurve.webxml" xlink:title="QSslEllipticCurve" xrefstyle="class" annotations="QSslEllipticCurve">QSslEllipticCurve</db:link>
               </db:td>
               <db:td>Represents an elliptic curve for use by elliptic-curve cipher algorithms</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslerror.webxml" xlink:title="QSslError" xrefstyle="class" annotations="QSslError">QSslError</db:link>
               </db:td>
               <db:td>SSL error</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslkey.webxml" xlink:title="QSslKey" xrefstyle="class" annotations="QSslKey">QSslKey</db:link>
               </db:td>
               <db:td>Interface for private and public keys</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslpresharedkeyauthenticator.webxml" xlink:title="QSslPreSharedKeyAuthenticator" xrefstyle="class" annotations="QSslPreSharedKeyAuthenticator">QSslPreSharedKeyAuthenticator</db:link>
               </db:td>
               <db:td>Authentication data for pre shared keys (PSK) ciphersuites</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsslsocket.webxml" xlink:title="QSslSocket" xrefstyle="class" annotations="QSslSocket">QSslSocket</db:link>
               </db:td>
               <db:td>SSL encrypted socket for both clients and servers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstack.webxml" xlink:title="QStack" xrefstyle="class" annotations="QStack">QStack</db:link>
               </db:td>
               <db:td>Template class that provides a stack</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstackedbarseries.webxml" xlink:title="QStackedBarSeries" xrefstyle="class" annotations="QStackedBarSeries">QStackedBarSeries</db:link>
               </db:td>
               <db:td>Presents a series of data as vertically stacked bars, with one bar per category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstackedlayout.webxml" xlink:title="QStackedLayout" xrefstyle="class" annotations="QStackedLayout">QStackedLayout</db:link>
               </db:td>
               <db:td>Stack of widgets where only one widget is visible at a time</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstackedwidget.webxml" xlink:title="QStackedWidget" xrefstyle="class" annotations="QStackedWidget">QStackedWidget</db:link>
               </db:td>
               <db:td>Stack of widgets where only one widget is visible at a time</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstandarditem.webxml" xlink:title="QStandardItem" xrefstyle="class" annotations="QStandardItem">QStandardItem</db:link>
               </db:td>
               <db:td>Item for use with the QStandardItemModel class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstandarditemeditorcreator.webxml" xlink:title="QStandardItemEditorCreator" xrefstyle="class" annotations="QStandardItemEditorCreator">QStandardItemEditorCreator</db:link>
               </db:td>
               <db:td>The possibility to register widgets without having to subclass QItemEditorCreatorBase</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstandarditemmodel.webxml" xlink:title="QStandardItemModel" xrefstyle="class" annotations="QStandardItemModel">QStandardItemModel</db:link>
               </db:td>
               <db:td>Generic model for storing custom data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstandardpaths.webxml" xlink:title="QStandardPaths" xrefstyle="class" annotations="QStandardPaths">QStandardPaths</db:link>
               </db:td>
               <db:td>Methods for accessing standard paths</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstate.webxml" xlink:title="QState" xrefstyle="class" annotations="QState">QState</db:link>
               </db:td>
               <db:td>General-purpose state for QStateMachine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstatemachine.webxml" xlink:title="QStateMachine" xrefstyle="class" annotations="QStateMachine">QStateMachine</db:link>
               </db:td>
               <db:td>Hierarchical finite state machine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstatemachine::signalevent.webxml" xlink:title="QStateMachine::SignalEvent" xrefstyle="class" annotations="QStateMachine::SignalEvent">QStateMachine::SignalEvent</db:link>
               </db:td>
               <db:td>Represents a Qt signal event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstatemachine::wrappedevent.webxml" xlink:title="QStateMachine::WrappedEvent" xrefstyle="class" annotations="QStateMachine::WrappedEvent">QStateMachine::WrappedEvent</db:link>
               </db:td>
               <db:td>Inherits QEvent and holds a clone of an event associated with a QObject</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstaticbytearraymatcher.webxml" xlink:title="QStaticByteArrayMatcher" xrefstyle="class" annotations="QStaticByteArrayMatcher">QStaticByteArrayMatcher</db:link>
               </db:td>
               <db:td>Compile-time version of QByteArrayMatcher</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstaticplugin.webxml" xlink:title="QStaticPlugin" xrefstyle="class" annotations="QStaticPlugin">QStaticPlugin</db:link>
               </db:td>
               <db:td>Struct containing a reference to a static plugin instance together with its meta data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstatictext.webxml" xlink:title="QStaticText" xrefstyle="class" annotations="QStaticText">QStaticText</db:link>
               </db:td>
               <db:td>Enables optimized drawing of text when the text and its layout is updated rarely</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstatusbar.webxml" xlink:title="QStatusBar" xrefstyle="class" annotations="QStatusBar">QStatusBar</db:link>
               </db:td>
               <db:td>Horizontal bar suitable for presenting status information</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstatustipevent.webxml" xlink:title="QStatusTipEvent" xrefstyle="class" annotations="QStatusTipEvent">QStatusTipEvent</db:link>
               </db:td>
               <db:td>Event that is used to show messages in a status bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstorageinfo.webxml" xlink:title="QStorageInfo" xrefstyle="class" annotations="QStorageInfo">QStorageInfo</db:link>
               </db:td>
               <db:td>Provides information about currently mounted storage and drives</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstring.webxml" xlink:title="QString" xrefstyle="class" annotations="QString">QString</db:link>
               </db:td>
               <db:td>Unicode character string</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstring::null.webxml" xlink:title="QString::Null" xrefstyle="class" annotations="QString::Null">QString::Null</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstringlist.webxml" xlink:title="QStringList" xrefstyle="class" annotations="QStringList">QStringList</db:link>
               </db:td>
               <db:td>List of strings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstringlistmodel.webxml" xlink:title="QStringListModel" xrefstyle="class" annotations="QStringListModel">QStringListModel</db:link>
               </db:td>
               <db:td>Model that supplies strings to views</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstringmatcher.webxml" xlink:title="QStringMatcher" xrefstyle="class" annotations="QStringMatcher">QStringMatcher</db:link>
               </db:td>
               <db:td>Holds a sequence of characters that can be quickly matched in a Unicode string</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstringref.webxml" xlink:title="QStringRef" xrefstyle="class" annotations="QStringRef">QStringRef</db:link>
               </db:td>
               <db:td>Thin wrapper around QString substrings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstringview.webxml" xlink:title="QStringView" xrefstyle="class" annotations="QStringView">QStringView</db:link>
               </db:td>
               <db:td>Unified view on UTF-16 strings with a read-only subset of the QString API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyle.webxml" xlink:title="QStyle" xrefstyle="class" annotations="QStyle">QStyle</db:link>
               </db:td>
               <db:td>Abstract base class that encapsulates the look and feel of a GUI</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstylefactory.webxml" xlink:title="QStyleFactory" xrefstyle="class" annotations="QStyleFactory">QStyleFactory</db:link>
               </db:td>
               <db:td>Creates QStyle objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstylehintreturn.webxml" xlink:title="QStyleHintReturn" xrefstyle="class" annotations="QStyleHintReturn">QStyleHintReturn</db:link>
               </db:td>
               <db:td>Style hints that return more than basic data types</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstylehintreturnmask.webxml" xlink:title="QStyleHintReturnMask" xrefstyle="class" annotations="QStyleHintReturnMask">QStyleHintReturnMask</db:link>
               </db:td>
               <db:td>Style hints that return a QRegion</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstylehintreturnvariant.webxml" xlink:title="QStyleHintReturnVariant" xrefstyle="class" annotations="QStyleHintReturnVariant">QStyleHintReturnVariant</db:link>
               </db:td>
               <db:td>Style hints that return a QVariant</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstylehints.webxml" xlink:title="QStyleHints" xrefstyle="class" annotations="QStyleHints">QStyleHints</db:link>
               </db:td>
               <db:td>Contains platform specific hints and settings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoption.webxml" xlink:title="QStyleOption" xrefstyle="class" annotations="QStyleOption">QStyleOption</db:link>
               </db:td>
               <db:td>Stores the parameters used by QStyle functions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionbutton.webxml" xlink:title="QStyleOptionButton" xrefstyle="class" annotations="QStyleOptionButton">QStyleOptionButton</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing buttons</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptioncombobox.webxml" xlink:title="QStyleOptionComboBox" xrefstyle="class" annotations="QStyleOptionComboBox">QStyleOptionComboBox</db:link>
               </db:td>
               <db:td>Used to describe the parameter for drawing a combobox</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptioncomplex.webxml" xlink:title="QStyleOptionComplex" xrefstyle="class" annotations="QStyleOptionComplex">QStyleOptionComplex</db:link>
               </db:td>
               <db:td>Used to hold parameters that are common to all complex controls</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiondockwidget.webxml" xlink:title="QStyleOptionDockWidget" xrefstyle="class" annotations="QStyleOptionDockWidget">QStyleOptionDockWidget</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a dock widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionfocusrect.webxml" xlink:title="QStyleOptionFocusRect" xrefstyle="class" annotations="QStyleOptionFocusRect">QStyleOptionFocusRect</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a focus rectangle with QStyle</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionframe.webxml" xlink:title="QStyleOptionFrame" xrefstyle="class" annotations="QStyleOptionFrame">QStyleOptionFrame</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a frame</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiongraphicsitem.webxml" xlink:title="QStyleOptionGraphicsItem" xrefstyle="class" annotations="QStyleOptionGraphicsItem">QStyleOptionGraphicsItem</db:link>
               </db:td>
               <db:td>Used to describe the parameters needed to draw a QGraphicsItem</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiongroupbox.webxml" xlink:title="QStyleOptionGroupBox" xrefstyle="class" annotations="QStyleOptionGroupBox">QStyleOptionGroupBox</db:link>
               </db:td>
               <db:td>Describes the parameters for drawing a group box</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionheader.webxml" xlink:title="QStyleOptionHeader" xrefstyle="class" annotations="QStyleOptionHeader">QStyleOptionHeader</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a header</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionmenuitem.webxml" xlink:title="QStyleOptionMenuItem" xrefstyle="class" annotations="QStyleOptionMenuItem">QStyleOptionMenuItem</db:link>
               </db:td>
               <db:td>Used to describe the parameter necessary for drawing a menu item</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionprogressbar.webxml" xlink:title="QStyleOptionProgressBar" xrefstyle="class" annotations="QStyleOptionProgressBar">QStyleOptionProgressBar</db:link>
               </db:td>
               <db:td>Used to describe the parameters necessary for drawing a progress bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionrubberband.webxml" xlink:title="QStyleOptionRubberBand" xrefstyle="class" annotations="QStyleOptionRubberBand">QStyleOptionRubberBand</db:link>
               </db:td>
               <db:td>Used to describe the parameters needed for drawing a rubber band</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionsizegrip.webxml" xlink:title="QStyleOptionSizeGrip" xrefstyle="class" annotations="QStyleOptionSizeGrip">QStyleOptionSizeGrip</db:link>
               </db:td>
               <db:td>Used to describe the parameter for drawing a size grip</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionslider.webxml" xlink:title="QStyleOptionSlider" xrefstyle="class" annotations="QStyleOptionSlider">QStyleOptionSlider</db:link>
               </db:td>
               <db:td>Used to describe the parameters needed for drawing a slider</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionspinbox.webxml" xlink:title="QStyleOptionSpinBox" xrefstyle="class" annotations="QStyleOptionSpinBox">QStyleOptionSpinBox</db:link>
               </db:td>
               <db:td>Used to describe the parameters necessary for drawing a spin box</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontab.webxml" xlink:title="QStyleOptionTab" xrefstyle="class" annotations="QStyleOptionTab">QStyleOptionTab</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a tab bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontabbarbase.webxml" xlink:title="QStyleOptionTabBarBase" xrefstyle="class" annotations="QStyleOptionTabBarBase">QStyleOptionTabBarBase</db:link>
               </db:td>
               <db:td>Used to describe the base of a tab bar, i.e. the part that the tab bar usually overlaps with</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontabwidgetframe.webxml" xlink:title="QStyleOptionTabWidgetFrame" xrefstyle="class" annotations="QStyleOptionTabWidgetFrame">QStyleOptionTabWidgetFrame</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing the frame around a tab widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontitlebar.webxml" xlink:title="QStyleOptionTitleBar" xrefstyle="class" annotations="QStyleOptionTitleBar">QStyleOptionTitleBar</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a title bar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontoolbar.webxml" xlink:title="QStyleOptionToolBar" xrefstyle="class" annotations="QStyleOptionToolBar">QStyleOptionToolBar</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a toolbar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontoolbox.webxml" xlink:title="QStyleOptionToolBox" xrefstyle="class" annotations="QStyleOptionToolBox">QStyleOptionToolBox</db:link>
               </db:td>
               <db:td>Used to describe the parameters needed for drawing a tool box</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptiontoolbutton.webxml" xlink:title="QStyleOptionToolButton" xrefstyle="class" annotations="QStyleOptionToolButton">QStyleOptionToolButton</db:link>
               </db:td>
               <db:td>Used to describe the parameters for drawing a tool button</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleoptionviewitem.webxml" xlink:title="QStyleOptionViewItem" xrefstyle="class" annotations="QStyleOptionViewItem">QStyleOptionViewItem</db:link>
               </db:td>
               <db:td>Used to describe the parameters used to draw an item in a view widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstylepainter.webxml" xlink:title="QStylePainter" xrefstyle="class" annotations="QStylePainter">QStylePainter</db:link>
               </db:td>
               <db:td>Convenience class for drawing QStyle elements inside a widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleplugin.webxml" xlink:title="QStylePlugin" xrefstyle="class" annotations="QStylePlugin">QStylePlugin</db:link>
               </db:td>
               <db:td>Abstract base for custom QStyle plugins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qstyleditemdelegate.webxml" xlink:title="QStyledItemDelegate" xrefstyle="class" annotations="QStyledItemDelegate">QStyledItemDelegate</db:link>
               </db:td>
               <db:td>Display and editing facilities for data items from a model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsupportedwritingsystems.webxml" xlink:title="QSupportedWritingSystems" xrefstyle="class" annotations="QSupportedWritingSystems">QSupportedWritingSystems</db:link>
               </db:td>
               <db:td>Used when registering fonts with the internal Qt fontdatabase</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsurface.webxml" xlink:title="QSurface" xrefstyle="class" annotations="QSurface">QSurface</db:link>
               </db:td>
               <db:td>Abstraction of renderable surfaces in Qt</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsurface3dseries.webxml" xlink:title="QSurface3DSeries" xrefstyle="class" annotations="QSurface3DSeries">QSurface3DSeries</db:link>
               </db:td>
               <db:td>Represents a data series in a 3D surface graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsurfacedataitem.webxml" xlink:title="QSurfaceDataItem" xrefstyle="class" annotations="QSurfaceDataItem">QSurfaceDataItem</db:link>
               </db:td>
               <db:td>Container for resolved data to be added to surface graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsurfacedataproxy.webxml" xlink:title="QSurfaceDataProxy" xrefstyle="class" annotations="QSurfaceDataProxy">QSurfaceDataProxy</db:link>
               </db:td>
               <db:td>The data proxy for a 3D surface graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsurfaceformat.webxml" xlink:title="QSurfaceFormat" xrefstyle="class" annotations="QSurfaceFormat">QSurfaceFormat</db:link>
               </db:td>
               <db:td>Represents the format of a QSurface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsvggenerator.webxml" xlink:title="QSvgGenerator" xrefstyle="class" annotations="QSvgGenerator">QSvgGenerator</db:link>
               </db:td>
               <db:td>Paint device that is used to create SVG drawings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsvgrenderer.webxml" xlink:title="QSvgRenderer" xrefstyle="class" annotations="QSvgRenderer">QSvgRenderer</db:link>
               </db:td>
               <db:td>Used to draw the contents of SVG files onto paint devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsvgwidget.webxml" xlink:title="QSvgWidget" xrefstyle="class" annotations="QSvgWidget">QSvgWidget</db:link>
               </db:td>
               <db:td>Widget that is used to display the contents of Scalable Vector Graphics (SVG) files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qswipegesture.webxml" xlink:title="QSwipeGesture" xrefstyle="class" annotations="QSwipeGesture">QSwipeGesture</db:link>
               </db:td>
               <db:td>Describes a swipe gesture made by the user</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsyntaxhighlighter.webxml" xlink:title="QSyntaxHighlighter" xrefstyle="class" annotations="QSyntaxHighlighter">QSyntaxHighlighter</db:link>
               </db:td>
               <db:td>Allows you to define syntax highlighting rules, and in addition you can use the class to query a document's current formatting or user data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsysinfo.webxml" xlink:title="QSysInfo" xrefstyle="class" annotations="QSysInfo">QSysInfo</db:link>
               </db:td>
               <db:td>Information about the system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsystemsemaphore.webxml" xlink:title="QSystemSemaphore" xrefstyle="class" annotations="QSystemSemaphore">QSystemSemaphore</db:link>
               </db:td>
               <db:td>General counting system semaphore</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qsystemtrayicon.webxml" xlink:title="QSystemTrayIcon" xrefstyle="class" annotations="QSystemTrayIcon">QSystemTrayIcon</db:link>
               </db:td>
               <db:td>Icon for an application in the system tray</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>T</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtabbar.webxml" xlink:title="QTabBar" xrefstyle="class" annotations="QTabBar">QTabBar</db:link>
               </db:td>
               <db:td>Tab bar, e.g. for use in tabbed dialogs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtabwidget.webxml" xlink:title="QTabWidget" xrefstyle="class" annotations="QTabWidget">QTabWidget</db:link>
               </db:td>
               <db:td>Stack of tabbed widgets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtableview.webxml" xlink:title="QTableView" xrefstyle="class" annotations="QTableView">QTableView</db:link>
               </db:td>
               <db:td>Default model/view implementation of a table view</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtablewidget.webxml" xlink:title="QTableWidget" xrefstyle="class" annotations="QTableWidget">QTableWidget</db:link>
               </db:td>
               <db:td>Item-based table view with a default model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtablewidgetitem.webxml" xlink:title="QTableWidgetItem" xrefstyle="class" annotations="QTableWidgetItem">QTableWidgetItem</db:link>
               </db:td>
               <db:td>Item for use with the QTableWidget class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtablewidgetselectionrange.webxml" xlink:title="QTableWidgetSelectionRange" xrefstyle="class" annotations="QTableWidgetSelectionRange">QTableWidgetSelectionRange</db:link>
               </db:td>
               <db:td>Way to interact with selection in a model without using model indexes and a selection model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtabletevent.webxml" xlink:title="QTabletEvent" xrefstyle="class" annotations="QTabletEvent">QTabletEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a Tablet event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtapandholdgesture.webxml" xlink:title="QTapAndHoldGesture" xrefstyle="class" annotations="QTapAndHoldGesture">QTapAndHoldGesture</db:link>
               </db:td>
               <db:td>Describes a tap-and-hold (aka LongTap) gesture made by the user</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtapgesture.webxml" xlink:title="QTapGesture" xrefstyle="class" annotations="QTapGesture">QTapGesture</db:link>
               </db:td>
               <db:td>Describes a tap gesture made by the user</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtcpserver.webxml" xlink:title="QTcpServer" xrefstyle="class" annotations="QTcpServer">QTcpServer</db:link>
               </db:td>
               <db:td>TCP-based server</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtcpsocket.webxml" xlink:title="QTcpSocket" xrefstyle="class" annotations="QTcpSocket">QTcpSocket</db:link>
               </db:td>
               <db:td>TCP socket</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtemporarydir.webxml" xlink:title="QTemporaryDir" xrefstyle="class" annotations="QTemporaryDir">QTemporaryDir</db:link>
               </db:td>
               <db:td>Creates a unique directory for temporary use</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtemporaryfile.webxml" xlink:title="QTemporaryFile" xrefstyle="class" annotations="QTemporaryFile">QTemporaryFile</db:link>
               </db:td>
               <db:td>I/O device that operates on temporary files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtest::qtoucheventsequence.webxml" xlink:title="QTest::QTouchEventSequence" xrefstyle="class" annotations="QTest::QTouchEventSequence">QTest::QTouchEventSequence</db:link>
               </db:td>
               <db:td>Used to simulate a sequence of touch events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtesteventlist.webxml" xlink:title="QTestEventList" xrefstyle="class" annotations="QTestEventList">QTestEventList</db:link>
               </db:td>
               <db:td>List of GUI events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextblock.webxml" xlink:title="QTextBlock" xrefstyle="class" annotations="QTextBlock">QTextBlock</db:link>
               </db:td>
               <db:td>Container for text fragments in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextblock::iterator.webxml" xlink:title="QTextBlock::iterator" xrefstyle="class" annotations="QTextBlock::iterator">QTextBlock::iterator</db:link>
               </db:td>
               <db:td>QTextBlock::iterator class provides an iterator for reading the contents of a QTextBlock</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextblockformat.webxml" xlink:title="QTextBlockFormat" xrefstyle="class" annotations="QTextBlockFormat">QTextBlockFormat</db:link>
               </db:td>
               <db:td>Formatting information for blocks of text in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextblockgroup.webxml" xlink:title="QTextBlockGroup" xrefstyle="class" annotations="QTextBlockGroup">QTextBlockGroup</db:link>
               </db:td>
               <db:td>Container for text blocks within a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextblockuserdata.webxml" xlink:title="QTextBlockUserData" xrefstyle="class" annotations="QTextBlockUserData">QTextBlockUserData</db:link>
               </db:td>
               <db:td>Used to associate custom data with blocks of text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextboundaryfinder.webxml" xlink:title="QTextBoundaryFinder" xrefstyle="class" annotations="QTextBoundaryFinder">QTextBoundaryFinder</db:link>
               </db:td>
               <db:td>Way of finding Unicode text boundaries in a string</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextbrowser.webxml" xlink:title="QTextBrowser" xrefstyle="class" annotations="QTextBrowser">QTextBrowser</db:link>
               </db:td>
               <db:td>Rich text browser with hypertext navigation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextcharformat.webxml" xlink:title="QTextCharFormat" xrefstyle="class" annotations="QTextCharFormat">QTextCharFormat</db:link>
               </db:td>
               <db:td>Formatting information for characters in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextcodec.webxml" xlink:title="QTextCodec" xrefstyle="class" annotations="QTextCodec">QTextCodec</db:link>
               </db:td>
               <db:td>Conversions between text encodings</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextcodec::converterstate.webxml" xlink:title="QTextCodec::ConverterState" xrefstyle="class" annotations="QTextCodec::ConverterState">QTextCodec::ConverterState</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextcursor.webxml" xlink:title="QTextCursor" xrefstyle="class" annotations="QTextCursor">QTextCursor</db:link>
               </db:td>
               <db:td>Offers an API to access and modify QTextDocuments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextdecoder.webxml" xlink:title="QTextDecoder" xrefstyle="class" annotations="QTextDecoder">QTextDecoder</db:link>
               </db:td>
               <db:td>State-based decoder</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextdocument.webxml" xlink:title="QTextDocument" xrefstyle="class" annotations="QTextDocument">QTextDocument</db:link>
               </db:td>
               <db:td>Holds formatted text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextdocumentfragment.webxml" xlink:title="QTextDocumentFragment" xrefstyle="class" annotations="QTextDocumentFragment">QTextDocumentFragment</db:link>
               </db:td>
               <db:td>Represents a piece of formatted text from a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextdocumentwriter.webxml" xlink:title="QTextDocumentWriter" xrefstyle="class" annotations="QTextDocumentWriter">QTextDocumentWriter</db:link>
               </db:td>
               <db:td>Format-independent interface for writing a QTextDocument to files or other devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextedit.webxml" xlink:title="QTextEdit" xrefstyle="class" annotations="QTextEdit">QTextEdit</db:link>
               </db:td>
               <db:td>Widget that is used to edit and display both plain and rich text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextedit::extraselection.webxml" xlink:title="QTextEdit::ExtraSelection" xrefstyle="class" annotations="QTextEdit::ExtraSelection">QTextEdit::ExtraSelection</db:link>
               </db:td>
               <db:td>QTextEdit::ExtraSelection structure provides a way of specifying a character format for a given selection in a document</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextencoder.webxml" xlink:title="QTextEncoder" xrefstyle="class" annotations="QTextEncoder">QTextEncoder</db:link>
               </db:td>
               <db:td>State-based encoder</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextformat.webxml" xlink:title="QTextFormat" xrefstyle="class" annotations="QTextFormat">QTextFormat</db:link>
               </db:td>
               <db:td>Formatting information for a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextfragment.webxml" xlink:title="QTextFragment" xrefstyle="class" annotations="QTextFragment">QTextFragment</db:link>
               </db:td>
               <db:td>Holds a piece of text in a QTextDocument with a single QTextCharFormat</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextframe.webxml" xlink:title="QTextFrame" xrefstyle="class" annotations="QTextFrame">QTextFrame</db:link>
               </db:td>
               <db:td>Represents a frame in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextframe::iterator.webxml" xlink:title="QTextFrame::iterator" xrefstyle="class" annotations="QTextFrame::iterator">QTextFrame::iterator</db:link>
               </db:td>
               <db:td>Iterator for reading the contents of a QTextFrame</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextframeformat.webxml" xlink:title="QTextFrameFormat" xrefstyle="class" annotations="QTextFrameFormat">QTextFrameFormat</db:link>
               </db:td>
               <db:td>Formatting information for frames in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextimageformat.webxml" xlink:title="QTextImageFormat" xrefstyle="class" annotations="QTextImageFormat">QTextImageFormat</db:link>
               </db:td>
               <db:td>Formatting information for images in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextinlineobject.webxml" xlink:title="QTextInlineObject" xrefstyle="class" annotations="QTextInlineObject">QTextInlineObject</db:link>
               </db:td>
               <db:td>Represents an inline object in a QAbstractTextDocumentLayout and its implementations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextitem.webxml" xlink:title="QTextItem" xrefstyle="class" annotations="QTextItem">QTextItem</db:link>
               </db:td>
               <db:td>All the information required to draw text in a custom paint engine</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextlayout.webxml" xlink:title="QTextLayout" xrefstyle="class" annotations="QTextLayout">QTextLayout</db:link>
               </db:td>
               <db:td>Used to lay out and render text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextlayout::formatrange.webxml" xlink:title="QTextLayout::FormatRange" xrefstyle="class" annotations="QTextLayout::FormatRange">QTextLayout::FormatRange</db:link>
               </db:td>
               <db:td>QTextLayout::FormatRange structure is used to apply extra formatting information for a specified area in the text layout's content</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextlength.webxml" xlink:title="QTextLength" xrefstyle="class" annotations="QTextLength">QTextLength</db:link>
               </db:td>
               <db:td>Encapsulates the different types of length used in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextline.webxml" xlink:title="QTextLine" xrefstyle="class" annotations="QTextLine">QTextLine</db:link>
               </db:td>
               <db:td>Represents a line of text inside a QTextLayout</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextlist.webxml" xlink:title="QTextList" xrefstyle="class" annotations="QTextList">QTextList</db:link>
               </db:td>
               <db:td>Decorated list of items in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextlistformat.webxml" xlink:title="QTextListFormat" xrefstyle="class" annotations="QTextListFormat">QTextListFormat</db:link>
               </db:td>
               <db:td>Formatting information for lists in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextobject.webxml" xlink:title="QTextObject" xrefstyle="class" annotations="QTextObject">QTextObject</db:link>
               </db:td>
               <db:td>Base class for different kinds of objects that can group parts of a QTextDocument together</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextobjectinterface.webxml" xlink:title="QTextObjectInterface" xrefstyle="class" annotations="QTextObjectInterface">QTextObjectInterface</db:link>
               </db:td>
               <db:td>Allows drawing of custom text objects in QTextDocuments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextoption.webxml" xlink:title="QTextOption" xrefstyle="class" annotations="QTextOption">QTextOption</db:link>
               </db:td>
               <db:td>Description of general rich text properties</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextoption::tab.webxml" xlink:title="QTextOption::Tab" xrefstyle="class" annotations="QTextOption::Tab">QTextOption::Tab</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtextstream.webxml" xlink:title="QTextStream" xrefstyle="class" annotations="QTextStream">QTextStream</db:link>
               </db:td>
               <db:td>Convenient interface for reading and writing text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttable.webxml" xlink:title="QTextTable" xrefstyle="class" annotations="QTextTable">QTextTable</db:link>
               </db:td>
               <db:td>Represents a table in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttablecell.webxml" xlink:title="QTextTableCell" xrefstyle="class" annotations="QTextTableCell">QTextTableCell</db:link>
               </db:td>
               <db:td>Represents the properties of a cell in a QTextTable</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttablecellformat.webxml" xlink:title="QTextTableCellFormat" xrefstyle="class" annotations="QTextTableCellFormat">QTextTableCellFormat</db:link>
               </db:td>
               <db:td>Formatting information for table cells in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttableformat.webxml" xlink:title="QTextTableFormat" xrefstyle="class" annotations="QTextTableFormat">QTextTableFormat</db:link>
               </db:td>
               <db:td>Formatting information for tables in a QTextDocument</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttospeech.webxml" xlink:title="QTextToSpeech" xrefstyle="class" annotations="QTextToSpeech">QTextToSpeech</db:link>
               </db:td>
               <db:td>Convenient access to text-to-speech engines</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttospeechengine.webxml" xlink:title="QTextToSpeechEngine" xrefstyle="class" annotations="QTextToSpeechEngine">QTextToSpeechEngine</db:link>
               </db:td>
               <db:td>The base for text-to-speech engine integrations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtexttospeechplugin.webxml" xlink:title="QTextToSpeechPlugin" xrefstyle="class" annotations="QTextToSpeechPlugin">QTextToSpeechPlugin</db:link>
               </db:td>
               <db:td>The base for all text-to-speech plug-ins</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qthread.webxml" xlink:title="QThread" xrefstyle="class" annotations="QThread">QThread</db:link>
               </db:td>
               <db:td>Platform-independent way to manage threads</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qthreadpool.webxml" xlink:title="QThreadPool" xrefstyle="class" annotations="QThreadPool">QThreadPool</db:link>
               </db:td>
               <db:td>Manages a collection of QThreads</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qthreadstorage.webxml" xlink:title="QThreadStorage" xrefstyle="class" annotations="QThreadStorage">QThreadStorage</db:link>
               </db:td>
               <db:td>Per-thread data storage</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtilerules.webxml" xlink:title="QTileRules" xrefstyle="class" annotations="QTileRules">QTileRules</db:link>
               </db:td>
               <db:td>The rules used to draw a pixmap or image split into nine segments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtime.webxml" xlink:title="QTime" xrefstyle="class" annotations="QTime">QTime</db:link>
               </db:td>
               <db:td>Clock time functions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtimeedit.webxml" xlink:title="QTimeEdit" xrefstyle="class" annotations="QTimeEdit">QTimeEdit</db:link>
               </db:td>
               <db:td>Widget for editing times based on the QDateTimeEdit widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtimeline.webxml" xlink:title="QTimeLine" xrefstyle="class" annotations="QTimeLine">QTimeLine</db:link>
               </db:td>
               <db:td>Timeline for controlling animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtimezone.webxml" xlink:title="QTimeZone" xrefstyle="class" annotations="QTimeZone">QTimeZone</db:link>
               </db:td>
               <db:td>Converts between UTC and local time in a specific time zone</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtimezone::offsetdata.webxml" xlink:title="QTimeZone::OffsetData" xrefstyle="class" annotations="QTimeZone::OffsetData">QTimeZone::OffsetData</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtimer.webxml" xlink:title="QTimer" xrefstyle="class" annotations="QTimer">QTimer</db:link>
               </db:td>
               <db:td>Repetitive and single-shot timers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtimerevent.webxml" xlink:title="QTimerEvent" xrefstyle="class" annotations="QTimerEvent">QTimerEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a timer event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtoolbar.webxml" xlink:title="QToolBar" xrefstyle="class" annotations="QToolBar">QToolBar</db:link>
               </db:td>
               <db:td>Movable panel that contains a set of controls</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtoolbox.webxml" xlink:title="QToolBox" xrefstyle="class" annotations="QToolBox">QToolBox</db:link>
               </db:td>
               <db:td>Column of tabbed widget items</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtoolbutton.webxml" xlink:title="QToolButton" xrefstyle="class" annotations="QToolButton">QToolButton</db:link>
               </db:td>
               <db:td>Quick-access button to commands or options, usually used inside a QToolBar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtooltip.webxml" xlink:title="QToolTip" xrefstyle="class" annotations="QToolTip">QToolTip</db:link>
               </db:td>
               <db:td>Tool tips (balloon help) for any widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtouch3dinputhandler.webxml" xlink:title="QTouch3DInputHandler" xrefstyle="class" annotations="QTouch3DInputHandler">QTouch3DInputHandler</db:link>
               </db:td>
               <db:td>Basic touch display based input handler</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtouchdevice.webxml" xlink:title="QTouchDevice" xrefstyle="class" annotations="QTouchDevice">QTouchDevice</db:link>
               </db:td>
               <db:td>Describes the device from which touch events originate</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtouchevent.webxml" xlink:title="QTouchEvent" xrefstyle="class" annotations="QTouchEvent">QTouchEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a touch event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtouchevent::touchpoint.webxml" xlink:title="QTouchEvent::TouchPoint" xrefstyle="class" annotations="QTouchEvent::TouchPoint">QTouchEvent::TouchPoint</db:link>
               </db:td>
               <db:td>Information about a touch point in a QTouchEvent</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtransform.webxml" xlink:title="QTransform" xrefstyle="class" annotations="QTransform">QTransform</db:link>
               </db:td>
               <db:td>Specifies 2D transformations of a coordinate system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtranslator.webxml" xlink:title="QTranslator" xrefstyle="class" annotations="QTranslator">QTranslator</db:link>
               </db:td>
               <db:td>Internationalization support for text output</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtreeview.webxml" xlink:title="QTreeView" xrefstyle="class" annotations="QTreeView">QTreeView</db:link>
               </db:td>
               <db:td>Default model/view implementation of a tree view</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtreewidget.webxml" xlink:title="QTreeWidget" xrefstyle="class" annotations="QTreeWidget">QTreeWidget</db:link>
               </db:td>
               <db:td>Tree view that uses a predefined tree model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtreewidgetitem.webxml" xlink:title="QTreeWidgetItem" xrefstyle="class" annotations="QTreeWidgetItem">QTreeWidgetItem</db:link>
               </db:td>
               <db:td>Item for use with the QTreeWidget convenience class</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtreewidgetitemiterator.webxml" xlink:title="QTreeWidgetItemIterator" xrefstyle="class" annotations="QTreeWidgetItemIterator">QTreeWidgetItemIterator</db:link>
               </db:td>
               <db:td>Way to iterate over the items in a QTreeWidget instance</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>U</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qudpsocket.webxml" xlink:title="QUdpSocket" xrefstyle="class" annotations="QUdpSocket">QUdpSocket</db:link>
               </db:td>
               <db:td>UDP socket</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="quiloader.webxml" xlink:title="QUiLoader" xrefstyle="class" annotations="QUiLoader">QUiLoader</db:link>
               </db:td>
               <db:td>Enables standalone applications to dynamically create user interfaces at run-time using the information stored in UI files or specified in plugin paths</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qundocommand.webxml" xlink:title="QUndoCommand" xrefstyle="class" annotations="QUndoCommand">QUndoCommand</db:link>
               </db:td>
               <db:td>The base class of all commands stored on a QUndoStack</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qundogroup.webxml" xlink:title="QUndoGroup" xrefstyle="class" annotations="QUndoGroup">QUndoGroup</db:link>
               </db:td>
               <db:td>Group of QUndoStack objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qundostack.webxml" xlink:title="QUndoStack" xrefstyle="class" annotations="QUndoStack">QUndoStack</db:link>
               </db:td>
               <db:td>Stack of QUndoCommand objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qundoview.webxml" xlink:title="QUndoView" xrefstyle="class" annotations="QUndoView">QUndoView</db:link>
               </db:td>
               <db:td>Displays the contents of a QUndoStack</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qunhandledexception.webxml" xlink:title="QUnhandledException" xrefstyle="class" annotations="QUnhandledException">QUnhandledException</db:link>
               </db:td>
               <db:td>UnhandledException class represents an unhandled exception in a worker thread</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qurl.webxml" xlink:title="QUrl" xrefstyle="class" annotations="QUrl">QUrl</db:link>
               </db:td>
               <db:td>Convenient interface for working with URLs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qurlquery.webxml" xlink:title="QUrlQuery" xrefstyle="class" annotations="QUrlQuery">QUrlQuery</db:link>
               </db:td>
               <db:td>Way to manipulate a key-value pairs in a URL's query</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="quuid.webxml" xlink:title="QUuid" xrefstyle="class" annotations="QUuid">QUuid</db:link>
               </db:td>
               <db:td>Stores a Universally Unique Identifier (UUID)</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>V</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvbarmodelmapper.webxml" xlink:title="QVBarModelMapper" xrefstyle="class" annotations="QVBarModelMapper">QVBarModelMapper</db:link>
               </db:td>
               <db:td>Vertical model mapper for bar series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvboxlayout.webxml" xlink:title="QVBoxLayout" xrefstyle="class" annotations="QVBoxLayout">QVBoxLayout</db:link>
               </db:td>
               <db:td>Lines up widgets vertically</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvboxplotmodelmapper.webxml" xlink:title="QVBoxPlotModelMapper" xrefstyle="class" annotations="QVBoxPlotModelMapper">QVBoxPlotModelMapper</db:link>
               </db:td>
               <db:td>Vertical model mapper for box plot series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvcandlestickmodelmapper.webxml" xlink:title="QVCandlestickModelMapper" xrefstyle="class" annotations="QVCandlestickModelMapper">QVCandlestickModelMapper</db:link>
               </db:td>
               <db:td>Vertical model mapper for a candlestick series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvpiemodelmapper.webxml" xlink:title="QVPieModelMapper" xrefstyle="class" annotations="QVPieModelMapper">QVPieModelMapper</db:link>
               </db:td>
               <db:td>Vertical model mapper for pie series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvxymodelmapper.webxml" xlink:title="QVXYModelMapper" xrefstyle="class" annotations="QVXYModelMapper">QVXYModelMapper</db:link>
               </db:td>
               <db:td>Vertical model mapper for line, spline, and scatter series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvalidator.webxml" xlink:title="QValidator" xrefstyle="class" annotations="QValidator">QValidator</db:link>
               </db:td>
               <db:td>Validation of input text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvalue3daxis.webxml" xlink:title="QValue3DAxis" xrefstyle="class" annotations="QValue3DAxis">QValue3DAxis</db:link>
               </db:td>
               <db:td>Manipulates an axis of a graph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvalue3daxisformatter.webxml" xlink:title="QValue3DAxisFormatter" xrefstyle="class" annotations="QValue3DAxisFormatter">QValue3DAxisFormatter</db:link>
               </db:td>
               <db:td>Base class for value axis formatters</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvalueaxis.webxml" xlink:title="QValueAxis" xrefstyle="class" annotations="QValueAxis">QValueAxis</db:link>
               </db:td>
               <db:td>Adds values to a chart's axes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvarlengtharray.webxml" xlink:title="QVarLengthArray" xrefstyle="class" annotations="QVarLengthArray">QVarLengthArray</db:link>
               </db:td>
               <db:td>Low-level variable-length array</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvariant.webxml" xlink:title="QVariant" xrefstyle="class" annotations="QVariant">QVariant</db:link>
               </db:td>
               <db:td>Acts like a union for the most common Qt data types</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvariant::handler.webxml" xlink:title="QVariant::Handler" xrefstyle="class" annotations="QVariant::Handler">QVariant::Handler</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvariant::private.webxml" xlink:title="QVariant::Private" xrefstyle="class" annotations="QVariant::Private">QVariant::Private</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvariant::private::data.webxml" xlink:title="QVariant::Private::Data" xrefstyle="class" annotations="QVariant::Private::Data">QVariant::Private::Data</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvariant::privateshared.webxml" xlink:title="QVariant::PrivateShared" xrefstyle="class" annotations="QVariant::PrivateShared">QVariant::PrivateShared</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvariantanimation.webxml" xlink:title="QVariantAnimation" xrefstyle="class" annotations="QVariantAnimation">QVariantAnimation</db:link>
               </db:td>
               <db:td>Base class for animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvector.webxml" xlink:title="QVector" xrefstyle="class" annotations="QVector">QVector</db:link>
               </db:td>
               <db:td>Template class that provides a dynamic array</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvector2d.webxml" xlink:title="QVector2D" xrefstyle="class" annotations="QVector2D">QVector2D</db:link>
               </db:td>
               <db:td>Represents a vector or vertex in 2D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvector3d.webxml" xlink:title="QVector3D" xrefstyle="class" annotations="QVector3D">QVector3D</db:link>
               </db:td>
               <db:td>Represents a vector or vertex in 3D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvector4d.webxml" xlink:title="QVector4D" xrefstyle="class" annotations="QVector4D">QVector4D</db:link>
               </db:td>
               <db:td>Represents a vector or vertex in 4D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvectoriterator.webxml" xlink:title="QVectorIterator" xrefstyle="class" annotations="QVectorIterator">QVectorIterator</db:link>
               </db:td>
               <db:td>Java-style const iterator for QVector and QStack</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qversionnumber.webxml" xlink:title="QVersionNumber" xrefstyle="class" annotations="QVersionNumber">QVersionNumber</db:link>
               </db:td>
               <db:td>Contains a version number with an arbitrary number of segments</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvoice.webxml" xlink:title="QVoice" xrefstyle="class" annotations="QVoice">QVoice</db:link>
               </db:td>
               <db:td>Allows to set and retrieve values of a particular voice</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvulkandevicefunctions.webxml" xlink:title="QVulkanDeviceFunctions" xrefstyle="class" annotations="QVulkanDeviceFunctions">QVulkanDeviceFunctions</db:link>
               </db:td>
               <db:td>Cross-platform access to the device level core Vulkan 1.0 API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvulkanextension.webxml" xlink:title="QVulkanExtension" xrefstyle="class" annotations="QVulkanExtension">QVulkanExtension</db:link>
               </db:td>
               <db:td>Represents information about a Vulkan extension</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvulkanfunctions.webxml" xlink:title="QVulkanFunctions" xrefstyle="class" annotations="QVulkanFunctions">QVulkanFunctions</db:link>
               </db:td>
               <db:td>Cross-platform access to the instance level core Vulkan 1.0 API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvulkaninfovector.webxml" xlink:title="QVulkanInfoVector" xrefstyle="class" annotations="QVulkanInfoVector">QVulkanInfoVector</db:link>
               </db:td>
               <db:td>A specialized QVector for QVulkanLayer and QVulkanExtension</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvulkaninstance.webxml" xlink:title="QVulkanInstance" xrefstyle="class" annotations="QVulkanInstance">QVulkanInstance</db:link>
               </db:td>
               <db:td>Represents a native Vulkan instance, enabling Vulkan rendering onto a QSurface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qvulkanlayer.webxml" xlink:title="QVulkanLayer" xrefstyle="class" annotations="QVulkanLayer">QVulkanLayer</db:link>
               </db:td>
               <db:td>Represents information about a Vulkan layer</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>W</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwaitcondition.webxml" xlink:title="QWaitCondition" xrefstyle="class" annotations="QWaitCondition">QWaitCondition</db:link>
               </db:td>
               <db:td>Condition variable for synchronizing threads</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qweakpointer.webxml" xlink:title="QWeakPointer" xrefstyle="class" annotations="QWeakPointer">QWeakPointer</db:link>
               </db:td>
               <db:td>Holds a weak reference to a shared pointer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwhatsthis.webxml" xlink:title="QWhatsThis" xrefstyle="class" annotations="QWhatsThis">QWhatsThis</db:link>
               </db:td>
               <db:td>Simple description of any widget, i.e. answering the question "What's This?"</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwhatsthisclickedevent.webxml" xlink:title="QWhatsThisClickedEvent" xrefstyle="class" annotations="QWhatsThisClickedEvent">QWhatsThisClickedEvent</db:link>
               </db:td>
               <db:td>Event that can be used to handle hyperlinks in a "What's This?" text</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwheelevent.webxml" xlink:title="QWheelEvent" xrefstyle="class" annotations="QWheelEvent">QWheelEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a wheel event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwidget.webxml" xlink:title="QWidget" xrefstyle="class" annotations="QWidget">QWidget</db:link>
               </db:td>
               <db:td>The base class of all user interface objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwidgetaction.webxml" xlink:title="QWidgetAction" xrefstyle="class" annotations="QWidgetAction">QWidgetAction</db:link>
               </db:td>
               <db:td>Extends QAction by an interface for inserting custom widgets into action based containers, such as toolbars</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwidgetitem.webxml" xlink:title="QWidgetItem" xrefstyle="class" annotations="QWidgetItem">QWidgetItem</db:link>
               </db:td>
               <db:td>Layout item that represents a widget</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwineventnotifier.webxml" xlink:title="QWinEventNotifier" xrefstyle="class" annotations="QWinEventNotifier">QWinEventNotifier</db:link>
               </db:td>
               <db:td>Support for the Windows Wait functions</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwinjumplist.webxml" xlink:title="QWinJumpList" xrefstyle="class" annotations="QWinJumpList">QWinJumpList</db:link>
               </db:td>
               <db:td>Represents a transparent wrapper around Windows Jump Lists</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwinjumplistcategory.webxml" xlink:title="QWinJumpListCategory" xrefstyle="class" annotations="QWinJumpListCategory">QWinJumpListCategory</db:link>
               </db:td>
               <db:td>Represents a jump list category</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwinjumplistitem.webxml" xlink:title="QWinJumpListItem" xrefstyle="class" annotations="QWinJumpListItem">QWinJumpListItem</db:link>
               </db:td>
               <db:td>Represents a jump list item</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwinmime.webxml" xlink:title="QWinMime" xrefstyle="class" annotations="QWinMime">QWinMime</db:link>
               </db:td>
               <db:td>Maps open-standard MIME to Window Clipboard formats</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwintaskbarbutton.webxml" xlink:title="QWinTaskbarButton" xrefstyle="class" annotations="QWinTaskbarButton">QWinTaskbarButton</db:link>
               </db:td>
               <db:td>Represents the Windows taskbar button for a top-level window (Windows 7 and newer)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwintaskbarprogress.webxml" xlink:title="QWinTaskbarProgress" xrefstyle="class" annotations="QWinTaskbarProgress">QWinTaskbarProgress</db:link>
               </db:td>
               <db:td>Represents a progress indicator in the Windows taskbar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwinthumbnailtoolbar.webxml" xlink:title="QWinThumbnailToolBar" xrefstyle="class" annotations="QWinThumbnailToolBar">QWinThumbnailToolBar</db:link>
               </db:td>
               <db:td>Allows manipulating the thumbnail toolbar of a window</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwinthumbnailtoolbutton.webxml" xlink:title="QWinThumbnailToolButton" xrefstyle="class" annotations="QWinThumbnailToolButton">QWinThumbnailToolButton</db:link>
               </db:td>
               <db:td>Represents a button in a thumbnail toolbar</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwindow.webxml" xlink:title="QWindow" xrefstyle="class" annotations="QWindow">QWindow</db:link>
               </db:td>
               <db:td>Represents a window in the underlying windowing system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwindowstatechangeevent.webxml" xlink:title="QWindowStateChangeEvent" xrefstyle="class" annotations="QWindowStateChangeEvent">QWindowStateChangeEvent</db:link>
               </db:td>
               <db:td>The window state before a window state change</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwizard.webxml" xlink:title="QWizard" xrefstyle="class" annotations="QWizard">QWizard</db:link>
               </db:td>
               <db:td>Framework for wizards</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwizardpage.webxml" xlink:title="QWizardPage" xrefstyle="class" annotations="QWizardPage">QWizardPage</db:link>
               </db:td>
               <db:td>The base class for wizard pages</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qwritelocker.webxml" xlink:title="QWriteLocker" xrefstyle="class" annotations="QWriteLocker">QWriteLocker</db:link>
               </db:td>
               <db:td>Convenience class that simplifies locking and unlocking read-write locks for write access</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>X</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxylegendmarker.webxml" xlink:title="QXYLegendMarker" xrefstyle="class" annotations="QXYLegendMarker">QXYLegendMarker</db:link>
               </db:td>
               <db:td>Legend marker for a line, spline, or scatter series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxyseries.webxml" xlink:title="QXYSeries" xrefstyle="class" annotations="QXYSeries">QXYSeries</db:link>
               </db:td>
               <db:td>Base class for line, spline, and scatter series</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlattributes.webxml" xlink:title="QXmlAttributes" xrefstyle="class" annotations="QXmlAttributes">QXmlAttributes</db:link>
               </db:td>
               <db:td>XML attributes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlcontenthandler.webxml" xlink:title="QXmlContentHandler" xrefstyle="class" annotations="QXmlContentHandler">QXmlContentHandler</db:link>
               </db:td>
               <db:td>Interface to report the logical content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmldtdhandler.webxml" xlink:title="QXmlDTDHandler" xrefstyle="class" annotations="QXmlDTDHandler">QXmlDTDHandler</db:link>
               </db:td>
               <db:td>Interface to report DTD content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmldeclhandler.webxml" xlink:title="QXmlDeclHandler" xrefstyle="class" annotations="QXmlDeclHandler">QXmlDeclHandler</db:link>
               </db:td>
               <db:td>Interface to report declaration content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmldefaulthandler.webxml" xlink:title="QXmlDefaultHandler" xrefstyle="class" annotations="QXmlDefaultHandler">QXmlDefaultHandler</db:link>
               </db:td>
               <db:td>Default implementation of all the XML handler classes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlentityresolver.webxml" xlink:title="QXmlEntityResolver" xrefstyle="class" annotations="QXmlEntityResolver">QXmlEntityResolver</db:link>
               </db:td>
               <db:td>Interface to resolve external entities contained in XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlerrorhandler.webxml" xlink:title="QXmlErrorHandler" xrefstyle="class" annotations="QXmlErrorHandler">QXmlErrorHandler</db:link>
               </db:td>
               <db:td>Interface to report errors in XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlformatter.webxml" xlink:title="QXmlFormatter" xrefstyle="class" annotations="QXmlFormatter">QXmlFormatter</db:link>
               </db:td>
               <db:td>Implementation of QXmlSerializer for transforming XQuery output into formatted XML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlinputsource.webxml" xlink:title="QXmlInputSource" xrefstyle="class" annotations="QXmlInputSource">QXmlInputSource</db:link>
               </db:td>
               <db:td>The input data for the QXmlReader subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlitem.webxml" xlink:title="QXmlItem" xrefstyle="class" annotations="QXmlItem">QXmlItem</db:link>
               </db:td>
               <db:td>Contains either an XML node or an atomic value</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmllexicalhandler.webxml" xlink:title="QXmlLexicalHandler" xrefstyle="class" annotations="QXmlLexicalHandler">QXmlLexicalHandler</db:link>
               </db:td>
               <db:td>Interface to report the lexical content of XML data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmllocator.webxml" xlink:title="QXmlLocator" xrefstyle="class" annotations="QXmlLocator">QXmlLocator</db:link>
               </db:td>
               <db:td>The XML handler classes with information about the parsing position within a file</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlname.webxml" xlink:title="QXmlName" xrefstyle="class" annotations="QXmlName">QXmlName</db:link>
               </db:td>
               <db:td>Represents the name of an XML node, in an efficient, namespace-aware way. QXmlName represents the name of an XML node in a way that is both efficient and safe for comparing names. Normally, an XML node represents an XML element or attribute, but QXmlName can also represent the names of other kinds of nodes, e.g., QAbstractXmlReceiver::processingInstruction() and QAbstractXmlReceiver::namespaceBinding()</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlnamepool.webxml" xlink:title="QXmlNamePool" xrefstyle="class" annotations="QXmlNamePool">QXmlNamePool</db:link>
               </db:td>
               <db:td>Table of shared strings referenced by instances of QXmlName</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlnamespacesupport.webxml" xlink:title="QXmlNamespaceSupport" xrefstyle="class" annotations="QXmlNamespaceSupport">QXmlNamespaceSupport</db:link>
               </db:td>
               <db:td>Helper class for XML readers which want to include namespace support</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlnodemodelindex.webxml" xlink:title="QXmlNodeModelIndex" xrefstyle="class" annotations="QXmlNodeModelIndex">QXmlNodeModelIndex</db:link>
               </db:td>
               <db:td>Identifies a node in an XML node model subclassed from QAbstractXmlNodeModel</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlparseexception.webxml" xlink:title="QXmlParseException" xrefstyle="class" annotations="QXmlParseException">QXmlParseException</db:link>
               </db:td>
               <db:td>Used to report errors with the QXmlErrorHandler interface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlquery.webxml" xlink:title="QXmlQuery" xrefstyle="class" annotations="QXmlQuery">QXmlQuery</db:link>
               </db:td>
               <db:td>Performs XQueries on XML data, or on non-XML data modeled to look like XML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlreader.webxml" xlink:title="QXmlReader" xrefstyle="class" annotations="QXmlReader">QXmlReader</db:link>
               </db:td>
               <db:td>Interface for XML readers (i.e. parsers)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlresultitems.webxml" xlink:title="QXmlResultItems" xrefstyle="class" annotations="QXmlResultItems">QXmlResultItems</db:link>
               </db:td>
               <db:td>Iterates through the results of evaluating an XQuery in QXmlQuery</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlschema.webxml" xlink:title="QXmlSchema" xrefstyle="class" annotations="QXmlSchema">QXmlSchema</db:link>
               </db:td>
               <db:td>Loading and validation of a W3C XML Schema</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlschemavalidator.webxml" xlink:title="QXmlSchemaValidator" xrefstyle="class" annotations="QXmlSchemaValidator">QXmlSchemaValidator</db:link>
               </db:td>
               <db:td>Validates XML instance documents against a W3C XML Schema</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlserializer.webxml" xlink:title="QXmlSerializer" xrefstyle="class" annotations="QXmlSerializer">QXmlSerializer</db:link>
               </db:td>
               <db:td>Implementation of QAbstractXmlReceiver for transforming XQuery output into unformatted XML</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlsimplereader.webxml" xlink:title="QXmlSimpleReader" xrefstyle="class" annotations="QXmlSimpleReader">QXmlSimpleReader</db:link>
               </db:td>
               <db:td>Implementation of a simple XML parser</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamattribute.webxml" xlink:title="QXmlStreamAttribute" xrefstyle="class" annotations="QXmlStreamAttribute">QXmlStreamAttribute</db:link>
               </db:td>
               <db:td>Represents a single XML attribute</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamattributes.webxml" xlink:title="QXmlStreamAttributes" xrefstyle="class" annotations="QXmlStreamAttributes">QXmlStreamAttributes</db:link>
               </db:td>
               <db:td>Represents a vector of QXmlStreamAttribute</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamentitydeclaration.webxml" xlink:title="QXmlStreamEntityDeclaration" xrefstyle="class" annotations="QXmlStreamEntityDeclaration">QXmlStreamEntityDeclaration</db:link>
               </db:td>
               <db:td>Represents a DTD entity declaration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamentityresolver.webxml" xlink:title="QXmlStreamEntityResolver" xrefstyle="class" annotations="QXmlStreamEntityResolver">QXmlStreamEntityResolver</db:link>
               </db:td>
               <db:td>Entity resolver for a QXmlStreamReader</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamnamespacedeclaration.webxml" xlink:title="QXmlStreamNamespaceDeclaration" xrefstyle="class" annotations="QXmlStreamNamespaceDeclaration">QXmlStreamNamespaceDeclaration</db:link>
               </db:td>
               <db:td>Represents a namespace declaration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamnotationdeclaration.webxml" xlink:title="QXmlStreamNotationDeclaration" xrefstyle="class" annotations="QXmlStreamNotationDeclaration">QXmlStreamNotationDeclaration</db:link>
               </db:td>
               <db:td>Represents a DTD notation declaration</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamreader.webxml" xlink:title="QXmlStreamReader" xrefstyle="class" annotations="QXmlStreamReader">QXmlStreamReader</db:link>
               </db:td>
               <db:td>Fast parser for reading well-formed XML via a simple streaming API</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qxmlstreamwriter.webxml" xlink:title="QXmlStreamWriter" xrefstyle="class" annotations="QXmlStreamWriter">QXmlStreamWriter</db:link>
               </db:td>
               <db:td>XML writer with a simple streaming API</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>t</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qabstractanimation.webxml" xlink:title="Qt3DAnimation::QAbstractAnimation" xrefstyle="class" annotations="Qt3DAnimation::QAbstractAnimation">Qt3DAnimation::QAbstractAnimation</db:link>
               </db:td>
               <db:td>An abstract base class for Qt3D animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qabstractanimationclip.webxml" xlink:title="Qt3DAnimation::QAbstractAnimationClip" xrefstyle="class" annotations="Qt3DAnimation::QAbstractAnimationClip">Qt3DAnimation::QAbstractAnimationClip</db:link>
               </db:td>
               <db:td>The base class for types providing key frame animation data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qabstractchannelmapping.webxml" xlink:title="Qt3DAnimation::QAbstractChannelMapping" xrefstyle="class" annotations="Qt3DAnimation::QAbstractChannelMapping">Qt3DAnimation::QAbstractChannelMapping</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qabstractclipanimator.webxml" xlink:title="Qt3DAnimation::QAbstractClipAnimator" xrefstyle="class" annotations="Qt3DAnimation::QAbstractClipAnimator">Qt3DAnimation::QAbstractClipAnimator</db:link>
               </db:td>
               <db:td>The base class for types providing animation playback capabilities</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qabstractclipblendnode.webxml" xlink:title="Qt3DAnimation::QAbstractClipBlendNode" xrefstyle="class" annotations="Qt3DAnimation::QAbstractClipBlendNode">Qt3DAnimation::QAbstractClipBlendNode</db:link>
               </db:td>
               <db:td>The base class for types used to construct animation blend trees</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qadditiveclipblend.webxml" xlink:title="Qt3DAnimation::QAdditiveClipBlend" xrefstyle="class" annotations="Qt3DAnimation::QAdditiveClipBlend">Qt3DAnimation::QAdditiveClipBlend</db:link>
               </db:td>
               <db:td>Performs an additive blend of two animation clips based on an additive factor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationaspect.webxml" xlink:title="Qt3DAnimation::QAnimationAspect" xrefstyle="class" annotations="Qt3DAnimation::QAnimationAspect">Qt3DAnimation::QAnimationAspect</db:link>
               </db:td>
               <db:td>Provides key-frame animation capabilities to Qt 3D</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationcallback.webxml" xlink:title="Qt3DAnimation::QAnimationCallback" xrefstyle="class" annotations="Qt3DAnimation::QAnimationCallback">Qt3DAnimation::QAnimationCallback</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationclip.webxml" xlink:title="Qt3DAnimation::QAnimationClip" xrefstyle="class" annotations="Qt3DAnimation::QAnimationClip">Qt3DAnimation::QAnimationClip</db:link>
               </db:td>
               <db:td>Specifies key frame animation data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationclipdata.webxml" xlink:title="Qt3DAnimation::QAnimationClipData" xrefstyle="class" annotations="Qt3DAnimation::QAnimationClipData">Qt3DAnimation::QAnimationClipData</db:link>
               </db:td>
               <db:td>Class containing the animation data</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationcliploader.webxml" xlink:title="Qt3DAnimation::QAnimationClipLoader" xrefstyle="class" annotations="Qt3DAnimation::QAnimationClipLoader">Qt3DAnimation::QAnimationClipLoader</db:link>
               </db:td>
               <db:td>Enables loading key frame animation data from a file</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationcontroller.webxml" xlink:title="Qt3DAnimation::QAnimationController" xrefstyle="class" annotations="Qt3DAnimation::QAnimationController">Qt3DAnimation::QAnimationController</db:link>
               </db:td>
               <db:td>A controller class for animations</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qanimationgroup.webxml" xlink:title="Qt3DAnimation::QAnimationGroup" xrefstyle="class" annotations="Qt3DAnimation::QAnimationGroup">Qt3DAnimation::QAnimationGroup</db:link>
               </db:td>
               <db:td>A class grouping animations together</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qblendedclipanimator.webxml" xlink:title="Qt3DAnimation::QBlendedClipAnimator" xrefstyle="class" annotations="Qt3DAnimation::QBlendedClipAnimator">Qt3DAnimation::QBlendedClipAnimator</db:link>
               </db:td>
               <db:td>Component providing animation playback capabilities of a tree of blend nodes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qcallbackmapping.webxml" xlink:title="Qt3DAnimation::QCallbackMapping" xrefstyle="class" annotations="Qt3DAnimation::QCallbackMapping">Qt3DAnimation::QCallbackMapping</db:link>
               </db:td>
               <db:td>Allows to map the channels within the clip onto an invocation of a callback object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qchannel.webxml" xlink:title="Qt3DAnimation::QChannel" xrefstyle="class" annotations="Qt3DAnimation::QChannel">Qt3DAnimation::QChannel</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qchannelcomponent.webxml" xlink:title="Qt3DAnimation::QChannelComponent" xrefstyle="class" annotations="Qt3DAnimation::QChannelComponent">Qt3DAnimation::QChannelComponent</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qchannelmapper.webxml" xlink:title="Qt3DAnimation::QChannelMapper" xrefstyle="class" annotations="Qt3DAnimation::QChannelMapper">Qt3DAnimation::QChannelMapper</db:link>
               </db:td>
               <db:td>Allows to map the channels within the clip onto properties of objects in the application</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qchannelmapping.webxml" xlink:title="Qt3DAnimation::QChannelMapping" xrefstyle="class" annotations="Qt3DAnimation::QChannelMapping">Qt3DAnimation::QChannelMapping</db:link>
               </db:td>
               <db:td>Allows to map the channels within the clip onto properties of objects in the application</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qchannelmappingcreatedchange.webxml" xlink:title="Qt3DAnimation::QChannelMappingCreatedChange" xrefstyle="class" annotations="Qt3DAnimation::QChannelMappingCreatedChange">Qt3DAnimation::QChannelMappingCreatedChange</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qclipanimator.webxml" xlink:title="Qt3DAnimation::QClipAnimator" xrefstyle="class" annotations="Qt3DAnimation::QClipAnimator">Qt3DAnimation::QClipAnimator</db:link>
               </db:td>
               <db:td>Component providing simple animation playback capabilities</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qclipblendnodecreatedchange.webxml" xlink:title="Qt3DAnimation::QClipBlendNodeCreatedChange" xrefstyle="class" annotations="Qt3DAnimation::QClipBlendNodeCreatedChange">Qt3DAnimation::QClipBlendNodeCreatedChange</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qclipblendnodecreatedchangebase.webxml" xlink:title="Qt3DAnimation::QClipBlendNodeCreatedChangeBase" xrefstyle="class" annotations="Qt3DAnimation::QClipBlendNodeCreatedChangeBase">Qt3DAnimation::QClipBlendNodeCreatedChangeBase</db:link>
               </db:td>
               <db:td>Base class for changes in QClipBlendNode</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qclipblendvalue.webxml" xlink:title="Qt3DAnimation::QClipBlendValue" xrefstyle="class" annotations="Qt3DAnimation::QClipBlendValue">Qt3DAnimation::QClipBlendValue</db:link>
               </db:td>
               <db:td>Class used for including a clip in a blend tree</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qclock.webxml" xlink:title="Qt3DAnimation::QClock" xrefstyle="class" annotations="Qt3DAnimation::QClock">Qt3DAnimation::QClock</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qkeyframe.webxml" xlink:title="Qt3DAnimation::QKeyFrame" xrefstyle="class" annotations="Qt3DAnimation::QKeyFrame">Qt3DAnimation::QKeyFrame</db:link>
               </db:td>
               <db:td>A base class for handling keyframes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qkeyframeanimation.webxml" xlink:title="Qt3DAnimation::QKeyframeAnimation" xrefstyle="class" annotations="Qt3DAnimation::QKeyframeAnimation">Qt3DAnimation::QKeyframeAnimation</db:link>
               </db:td>
               <db:td>A class implementing simple keyframe animation to a QTransform</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qlerpclipblend.webxml" xlink:title="Qt3DAnimation::QLerpClipBlend" xrefstyle="class" annotations="Qt3DAnimation::QLerpClipBlend">Qt3DAnimation::QLerpClipBlend</db:link>
               </db:td>
               <db:td>Performs a linear interpolation of two animation clips based on a normalized factor</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qmorphtarget.webxml" xlink:title="Qt3DAnimation::QMorphTarget" xrefstyle="class" annotations="Qt3DAnimation::QMorphTarget">Qt3DAnimation::QMorphTarget</db:link>
               </db:td>
               <db:td>A class providing morph targets to blend-shape animation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qmorphinganimation.webxml" xlink:title="Qt3DAnimation::QMorphingAnimation" xrefstyle="class" annotations="Qt3DAnimation::QMorphingAnimation">Qt3DAnimation::QMorphingAnimation</db:link>
               </db:td>
               <db:td>A class implementing blend-shape morphing animation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qskeletonmapping.webxml" xlink:title="Qt3DAnimation::QSkeletonMapping" xrefstyle="class" annotations="Qt3DAnimation::QSkeletonMapping">Qt3DAnimation::QSkeletonMapping</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3danimation::qvertexblendanimation.webxml" xlink:title="Qt3DAnimation::QVertexBlendAnimation" xrefstyle="class" annotations="Qt3DAnimation::QVertexBlendAnimation">Qt3DAnimation::QVertexBlendAnimation</db:link>
               </db:td>
               <db:td>A class implementing vertex-blend morphing animation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qabstractaspect.webxml" xlink:title="Qt3DCore::QAbstractAspect" xrefstyle="class" annotations="Qt3DCore::QAbstractAspect">Qt3DCore::QAbstractAspect</db:link>
               </db:td>
               <db:td>The base class for aspects that provide a vertical slice of behavior</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qabstractskeleton.webxml" xlink:title="Qt3DCore::QAbstractSkeleton" xrefstyle="class" annotations="Qt3DCore::QAbstractSkeleton">Qt3DCore::QAbstractSkeleton</db:link>
               </db:td>
               <db:td>A skeleton contains the joints for a skinned mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qarmature.webxml" xlink:title="Qt3DCore::QArmature" xrefstyle="class" annotations="Qt3DCore::QArmature">Qt3DCore::QArmature</db:link>
               </db:td>
               <db:td>Used to calculate skinning transform matrices and set them on shaders</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qaspectengine.webxml" xlink:title="Qt3DCore::QAspectEngine" xrefstyle="class" annotations="Qt3DCore::QAspectEngine">Qt3DCore::QAspectEngine</db:link>
               </db:td>
               <db:td>Responsible for handling all the QAbstractAspect subclasses that have been registered with the scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qaspectjob.webxml" xlink:title="Qt3DCore::QAspectJob" xrefstyle="class" annotations="Qt3DCore::QAspectJob">Qt3DCore::QAspectJob</db:link>
               </db:td>
               <db:td>Base class for jobs executed in an aspect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qbackendnode.webxml" xlink:title="Qt3DCore::QBackendNode" xrefstyle="class" annotations="Qt3DCore::QBackendNode">Qt3DCore::QBackendNode</db:link>
               </db:td>
               <db:td>Base class for all Qt3D backend nodes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qbackendnodemapper.webxml" xlink:title="Qt3DCore::QBackendNodeMapper" xrefstyle="class" annotations="Qt3DCore::QBackendNodeMapper">Qt3DCore::QBackendNodeMapper</db:link>
               </db:td>
               <db:td>Creates and maps backend nodes to their respective frontend nodes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qcomponent.webxml" xlink:title="Qt3DCore::QComponent" xrefstyle="class" annotations="Qt3DCore::QComponent">Qt3DCore::QComponent</db:link>
               </db:td>
               <db:td>Base class of scene nodes that can be aggregated by Qt3DCore::QEntity instances as a component</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qcomponentaddedchange.webxml" xlink:title="Qt3DCore::QComponentAddedChange" xrefstyle="class" annotations="Qt3DCore::QComponentAddedChange">Qt3DCore::QComponentAddedChange</db:link>
               </db:td>
               <db:td>Used to notify when a component is added to an entity</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qcomponentremovedchange.webxml" xlink:title="Qt3DCore::QComponentRemovedChange" xrefstyle="class" annotations="Qt3DCore::QComponentRemovedChange">Qt3DCore::QComponentRemovedChange</db:link>
               </db:td>
               <db:td>Used to notify when a component is removed from an entity</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qdynamicpropertyupdatedchange.webxml" xlink:title="Qt3DCore::QDynamicPropertyUpdatedChange" xrefstyle="class" annotations="Qt3DCore::QDynamicPropertyUpdatedChange">Qt3DCore::QDynamicPropertyUpdatedChange</db:link>
               </db:td>
               <db:td>Used to notify when a dynamic property value is updated</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qentity.webxml" xlink:title="Qt3DCore::QEntity" xrefstyle="class" annotations="Qt3DCore::QEntity">Qt3DCore::QEntity</db:link>
               </db:td>
               <db:td>Qt3DCore::QEntity is a Qt3DCore::QNode subclass that can aggregate several Qt3DCore::QComponent instances that will specify its behavior</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qjoint.webxml" xlink:title="Qt3DCore::QJoint" xrefstyle="class" annotations="Qt3DCore::QJoint">Qt3DCore::QJoint</db:link>
               </db:td>
               <db:td>Used to transforms parts of skinned meshes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnode.webxml" xlink:title="Qt3DCore::QNode" xrefstyle="class" annotations="Qt3DCore::QNode">Qt3DCore::QNode</db:link>
               </db:td>
               <db:td>The base class of all Qt3D node classes used to build a Qt3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnodecommand.webxml" xlink:title="Qt3DCore::QNodeCommand" xrefstyle="class" annotations="Qt3DCore::QNodeCommand">Qt3DCore::QNodeCommand</db:link>
               </db:td>
               <db:td>The base class for all CommandRequested QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnodecreatedchange.webxml" xlink:title="Qt3DCore::QNodeCreatedChange" xrefstyle="class" annotations="Qt3DCore::QNodeCreatedChange">Qt3DCore::QNodeCreatedChange</db:link>
               </db:td>
               <db:td>Used to notify when a node is created</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnodecreatedchangebase.webxml" xlink:title="Qt3DCore::QNodeCreatedChangeBase" xrefstyle="class" annotations="Qt3DCore::QNodeCreatedChangeBase">Qt3DCore::QNodeCreatedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all NodeCreated QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnodedestroyedchange.webxml" xlink:title="Qt3DCore::QNodeDestroyedChange" xrefstyle="class" annotations="Qt3DCore::QNodeDestroyedChange">Qt3DCore::QNodeDestroyedChange</db:link>
               </db:td>
               <db:td>Used to notify when a node is destroyed</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnodeid.webxml" xlink:title="Qt3DCore::QNodeId" xrefstyle="class" annotations="Qt3DCore::QNodeId">Qt3DCore::QNodeId</db:link>
               </db:td>
               <db:td>Uniquely identifies a QNode</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qnodeidtypepair.webxml" xlink:title="Qt3DCore::QNodeIdTypePair" xrefstyle="class" annotations="Qt3DCore::QNodeIdTypePair">Qt3DCore::QNodeIdTypePair</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertynodeaddedchange.webxml" xlink:title="Qt3DCore::QPropertyNodeAddedChange" xrefstyle="class" annotations="Qt3DCore::QPropertyNodeAddedChange">Qt3DCore::QPropertyNodeAddedChange</db:link>
               </db:td>
               <db:td>Used to notify when a node is added to a property</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertynoderemovedchange.webxml" xlink:title="Qt3DCore::QPropertyNodeRemovedChange" xrefstyle="class" annotations="Qt3DCore::QPropertyNodeRemovedChange">Qt3DCore::QPropertyNodeRemovedChange</db:link>
               </db:td>
               <db:td>Used to notify when a node is removed from a property</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertyupdatedchange.webxml" xlink:title="Qt3DCore::QPropertyUpdatedChange" xrefstyle="class" annotations="Qt3DCore::QPropertyUpdatedChange">Qt3DCore::QPropertyUpdatedChange</db:link>
               </db:td>
               <db:td>Used to notify when a property value is updated</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertyupdatedchangebase.webxml" xlink:title="Qt3DCore::QPropertyUpdatedChangeBase" xrefstyle="class" annotations="Qt3DCore::QPropertyUpdatedChangeBase">Qt3DCore::QPropertyUpdatedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all PropertyUpdated QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertyvalueaddedchange.webxml" xlink:title="Qt3DCore::QPropertyValueAddedChange" xrefstyle="class" annotations="Qt3DCore::QPropertyValueAddedChange">Qt3DCore::QPropertyValueAddedChange</db:link>
               </db:td>
               <db:td>Used to notify when a value is added to a property</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertyvalueaddedchangebase.webxml" xlink:title="Qt3DCore::QPropertyValueAddedChangeBase" xrefstyle="class" annotations="Qt3DCore::QPropertyValueAddedChangeBase">Qt3DCore::QPropertyValueAddedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all PropertyValueAdded QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertyvalueremovedchange.webxml" xlink:title="Qt3DCore::QPropertyValueRemovedChange" xrefstyle="class" annotations="Qt3DCore::QPropertyValueRemovedChange">Qt3DCore::QPropertyValueRemovedChange</db:link>
               </db:td>
               <db:td>Used to notify when a value is added to a property</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qpropertyvalueremovedchangebase.webxml" xlink:title="Qt3DCore::QPropertyValueRemovedChangeBase" xrefstyle="class" annotations="Qt3DCore::QPropertyValueRemovedChangeBase">Qt3DCore::QPropertyValueRemovedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all PropertyValueRemoved QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qscenechange.webxml" xlink:title="Qt3DCore::QSceneChange" xrefstyle="class" annotations="Qt3DCore::QSceneChange">Qt3DCore::QSceneChange</db:link>
               </db:td>
               <db:td>Base class for changes that can be sent and received by Qt3D's change notification system</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qskeleton.webxml" xlink:title="Qt3DCore::QSkeleton" xrefstyle="class" annotations="Qt3DCore::QSkeleton">Qt3DCore::QSkeleton</db:link>
               </db:td>
               <db:td>Holds the data for a skeleton to be used with skinned meshes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qskeletonloader.webxml" xlink:title="Qt3DCore::QSkeletonLoader" xrefstyle="class" annotations="Qt3DCore::QSkeletonLoader">Qt3DCore::QSkeletonLoader</db:link>
               </db:td>
               <db:td>Used to load a skeleton of joints from file</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qstaticpropertyupdatedchangebase.webxml" xlink:title="Qt3DCore::QStaticPropertyUpdatedChangeBase" xrefstyle="class" annotations="Qt3DCore::QStaticPropertyUpdatedChangeBase">Qt3DCore::QStaticPropertyUpdatedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all static PropertyUpdated QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qstaticpropertyvalueaddedchangebase.webxml" xlink:title="Qt3DCore::QStaticPropertyValueAddedChangeBase" xrefstyle="class" annotations="Qt3DCore::QStaticPropertyValueAddedChangeBase">Qt3DCore::QStaticPropertyValueAddedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all static PropertyValueAdded QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qstaticpropertyvalueremovedchangebase.webxml" xlink:title="Qt3DCore::QStaticPropertyValueRemovedChangeBase" xrefstyle="class" annotations="Qt3DCore::QStaticPropertyValueRemovedChangeBase">Qt3DCore::QStaticPropertyValueRemovedChangeBase</db:link>
               </db:td>
               <db:td>The base class for all static PropertyValueRemoved QSceneChange events</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::qtransform.webxml" xlink:title="Qt3DCore::QTransform" xrefstyle="class" annotations="Qt3DCore::QTransform">Qt3DCore::QTransform</db:link>
               </db:td>
               <db:td>Used to perform transforms on meshes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dcore::quick::qqmlaspectengine.webxml" xlink:title="Qt3DCore::Quick::QQmlAspectEngine" xrefstyle="class" annotations="Qt3DCore::Quick::QQmlAspectEngine">Qt3DCore::Quick::QQmlAspectEngine</db:link>
               </db:td>
               <db:td>Environment for the QAspectEngine and a method for instantiating QML components</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qabstractcameracontroller.webxml" xlink:title="Qt3DExtras::QAbstractCameraController" xrefstyle="class" annotations="Qt3DExtras::QAbstractCameraController">Qt3DExtras::QAbstractCameraController</db:link>
               </db:td>
               <db:td>Basic functionality for camera controllers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qabstractcameracontroller::inputstate.webxml" xlink:title="Qt3DExtras::QAbstractCameraController::InputState" xrefstyle="class" annotations="Qt3DExtras::QAbstractCameraController::InputState">Qt3DExtras::QAbstractCameraController::InputState</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qabstractspritesheet.webxml" xlink:title="Qt3DExtras::QAbstractSpriteSheet" xrefstyle="class" annotations="Qt3DExtras::QAbstractSpriteSheet">Qt3DExtras::QAbstractSpriteSheet</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qconegeometry.webxml" xlink:title="Qt3DExtras::QConeGeometry" xrefstyle="class" annotations="Qt3DExtras::QConeGeometry">Qt3DExtras::QConeGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a cone in 3D space. * * * * * The QConeGeometry class is most commonly used internally by the QConeMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses. The class * allows for creation of both a cone and a truncated cone</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qconemesh.webxml" xlink:title="Qt3DExtras::QConeMesh" xrefstyle="class" annotations="Qt3DExtras::QConeMesh">Qt3DExtras::QConeMesh</db:link>
               </db:td>
               <db:td>A conical mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qcuboidgeometry.webxml" xlink:title="Qt3DExtras::QCuboidGeometry" xrefstyle="class" annotations="Qt3DExtras::QCuboidGeometry">Qt3DExtras::QCuboidGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a cuboid in 3D space. * * * * * The QCuboidGeometry class is most commonly used internally by the QCuboidMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qcuboidmesh.webxml" xlink:title="Qt3DExtras::QCuboidMesh" xrefstyle="class" annotations="Qt3DExtras::QCuboidMesh">Qt3DExtras::QCuboidMesh</db:link>
               </db:td>
               <db:td>A cuboid mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qcylindergeometry.webxml" xlink:title="Qt3DExtras::QCylinderGeometry" xrefstyle="class" annotations="Qt3DExtras::QCylinderGeometry">Qt3DExtras::QCylinderGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a cylinder in 3D space. * * * * * The QCylinderGeometry class is most commonly used internally by the QCylinderMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qcylindermesh.webxml" xlink:title="Qt3DExtras::QCylinderMesh" xrefstyle="class" annotations="Qt3DExtras::QCylinderMesh">Qt3DExtras::QCylinderMesh</db:link>
               </db:td>
               <db:td>A cylindrical mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qdiffusemapmaterial.webxml" xlink:title="Qt3DExtras::QDiffuseMapMaterial" xrefstyle="class" annotations="Qt3DExtras::QDiffuseMapMaterial">Qt3DExtras::QDiffuseMapMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting effect where the diffuse light component is read from a texture map</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qdiffusespecularmapmaterial.webxml" xlink:title="Qt3DExtras::QDiffuseSpecularMapMaterial" xrefstyle="class" annotations="Qt3DExtras::QDiffuseSpecularMapMaterial">Qt3DExtras::QDiffuseSpecularMapMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting effect where the diffuse and specular light components are read from texture maps</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qdiffusespecularmaterial.webxml" xlink:title="Qt3DExtras::QDiffuseSpecularMaterial" xrefstyle="class" annotations="Qt3DExtras::QDiffuseSpecularMaterial">Qt3DExtras::QDiffuseSpecularMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qextrudedtextgeometry.webxml" xlink:title="Qt3DExtras::QExtrudedTextGeometry" xrefstyle="class" annotations="Qt3DExtras::QExtrudedTextGeometry">Qt3DExtras::QExtrudedTextGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a 3D extruded text in 3D space</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qextrudedtextmesh.webxml" xlink:title="Qt3DExtras::QExtrudedTextMesh" xrefstyle="class" annotations="Qt3DExtras::QExtrudedTextMesh">Qt3DExtras::QExtrudedTextMesh</db:link>
               </db:td>
               <db:td>A 3D extruded Text mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qfirstpersoncameracontroller.webxml" xlink:title="Qt3DExtras::QFirstPersonCameraController" xrefstyle="class" annotations="Qt3DExtras::QFirstPersonCameraController">Qt3DExtras::QFirstPersonCameraController</db:link>
               </db:td>
               <db:td>Allows controlling the scene camera from the first person perspective</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qforwardrenderer.webxml" xlink:title="Qt3DExtras::QForwardRenderer" xrefstyle="class" annotations="Qt3DExtras::QForwardRenderer">Qt3DExtras::QForwardRenderer</db:link>
               </db:td>
               <db:td>Default FrameGraph implementation of a forward renderer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qgoochmaterial.webxml" xlink:title="Qt3DExtras::QGoochMaterial" xrefstyle="class" annotations="Qt3DExtras::QGoochMaterial">Qt3DExtras::QGoochMaterial</db:link>
               </db:td>
               <db:td>Material that implements the Gooch shading model, popular in CAD and CAM applications</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qmetalroughmaterial.webxml" xlink:title="Qt3DExtras::QMetalRoughMaterial" xrefstyle="class" annotations="Qt3DExtras::QMetalRoughMaterial">Qt3DExtras::QMetalRoughMaterial</db:link>
               </db:td>
               <db:td>Default implementation of PBR lighting</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qmorphphongmaterial.webxml" xlink:title="Qt3DExtras::QMorphPhongMaterial" xrefstyle="class" annotations="Qt3DExtras::QMorphPhongMaterial">Qt3DExtras::QMorphPhongMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qnormaldiffusemapalphamaterial.webxml" xlink:title="Qt3DExtras::QNormalDiffuseMapAlphaMaterial" xrefstyle="class" annotations="Qt3DExtras::QNormalDiffuseMapAlphaMaterial">Qt3DExtras::QNormalDiffuseMapAlphaMaterial</db:link>
               </db:td>
               <db:td>Specialization of QNormalDiffuseMapMaterial with alpha coverage and a depth test performed in the rendering pass</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qnormaldiffusemapmaterial.webxml" xlink:title="Qt3DExtras::QNormalDiffuseMapMaterial" xrefstyle="class" annotations="Qt3DExtras::QNormalDiffuseMapMaterial">Qt3DExtras::QNormalDiffuseMapMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting and bump effect where the diffuse light component is read from a texture map and the normals of the mesh being rendered from a normal texture map</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qnormaldiffusespecularmapmaterial.webxml" xlink:title="Qt3DExtras::QNormalDiffuseSpecularMapMaterial" xrefstyle="class" annotations="Qt3DExtras::QNormalDiffuseSpecularMapMaterial">Qt3DExtras::QNormalDiffuseSpecularMapMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting and bump effect where the diffuse and specular light components are read from texture maps and the normals of the mesh being rendered from a normal texture map</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qorbitcameracontroller.webxml" xlink:title="Qt3DExtras::QOrbitCameraController" xrefstyle="class" annotations="Qt3DExtras::QOrbitCameraController">Qt3DExtras::QOrbitCameraController</db:link>
               </db:td>
               <db:td>Allows controlling the scene camera along orbital path</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qpervertexcolormaterial.webxml" xlink:title="Qt3DExtras::QPerVertexColorMaterial" xrefstyle="class" annotations="Qt3DExtras::QPerVertexColorMaterial">Qt3DExtras::QPerVertexColorMaterial</db:link>
               </db:td>
               <db:td>Default implementation for rendering the color properties set for each vertex</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qphongalphamaterial.webxml" xlink:title="Qt3DExtras::QPhongAlphaMaterial" xrefstyle="class" annotations="Qt3DExtras::QPhongAlphaMaterial">Qt3DExtras::QPhongAlphaMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting effect with alpha</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qphongmaterial.webxml" xlink:title="Qt3DExtras::QPhongMaterial" xrefstyle="class" annotations="Qt3DExtras::QPhongMaterial">Qt3DExtras::QPhongMaterial</db:link>
               </db:td>
               <db:td>Default implementation of the phong lighting effect</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qplanegeometry.webxml" xlink:title="Qt3DExtras::QPlaneGeometry" xrefstyle="class" annotations="Qt3DExtras::QPlaneGeometry">Qt3DExtras::QPlaneGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a plane in 3D space. * * * * The QPlaneGeometry class is most commonly used internally by the QPlaneMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qplanemesh.webxml" xlink:title="Qt3DExtras::QPlaneMesh" xrefstyle="class" annotations="Qt3DExtras::QPlaneMesh">Qt3DExtras::QPlaneMesh</db:link>
               </db:td>
               <db:td>A square planar mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qskyboxentity.webxml" xlink:title="Qt3DExtras::QSkyboxEntity" xrefstyle="class" annotations="Qt3DExtras::QSkyboxEntity">Qt3DExtras::QSkyboxEntity</db:link>
               </db:td>
               <db:td>Qt3DExtras::QSkyboxEntity is a convenience Qt3DCore::QEntity subclass that can be used to insert a skybox in a 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qspheregeometry.webxml" xlink:title="Qt3DExtras::QSphereGeometry" xrefstyle="class" annotations="Qt3DExtras::QSphereGeometry">Qt3DExtras::QSphereGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a sphere in 3D space. * * * * * The QSphereGeometry class is most commonly used internally by the QSphereMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qspheremesh.webxml" xlink:title="Qt3DExtras::QSphereMesh" xrefstyle="class" annotations="Qt3DExtras::QSphereMesh">Qt3DExtras::QSphereMesh</db:link>
               </db:td>
               <db:td>A spherical mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qspritegrid.webxml" xlink:title="Qt3DExtras::QSpriteGrid" xrefstyle="class" annotations="Qt3DExtras::QSpriteGrid">Qt3DExtras::QSpriteGrid</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qspritesheet.webxml" xlink:title="Qt3DExtras::QSpriteSheet" xrefstyle="class" annotations="Qt3DExtras::QSpriteSheet">Qt3DExtras::QSpriteSheet</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qspritesheetitem.webxml" xlink:title="Qt3DExtras::QSpriteSheetItem" xrefstyle="class" annotations="Qt3DExtras::QSpriteSheetItem">Qt3DExtras::QSpriteSheetItem</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qtext2dentity.webxml" xlink:title="Qt3DExtras::QText2DEntity" xrefstyle="class" annotations="Qt3DExtras::QText2DEntity">Qt3DExtras::QText2DEntity</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qtexturematerial.webxml" xlink:title="Qt3DExtras::QTextureMaterial" xrefstyle="class" annotations="Qt3DExtras::QTextureMaterial">Qt3DExtras::QTextureMaterial</db:link>
               </db:td>
               <db:td>Default implementation of a simple unlit texture material</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qtexturedmetalroughmaterial.webxml" xlink:title="Qt3DExtras::QTexturedMetalRoughMaterial" xrefstyle="class" annotations="Qt3DExtras::QTexturedMetalRoughMaterial">Qt3DExtras::QTexturedMetalRoughMaterial</db:link>
               </db:td>
               <db:td>This class is deprecated; use QMetalRoughMaterial instead</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qtorusgeometry.webxml" xlink:title="Qt3DExtras::QTorusGeometry" xrefstyle="class" annotations="Qt3DExtras::QTorusGeometry">Qt3DExtras::QTorusGeometry</db:link>
               </db:td>
               <db:td>Allows creation of a torus in 3D space. * * * * * The QTorusGeometry class is most commonly used internally by the QTorusMesh * but can also be used in custom Qt3DRender::QGeometryRenderer subclasses</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qtorusmesh.webxml" xlink:title="Qt3DExtras::QTorusMesh" xrefstyle="class" annotations="Qt3DExtras::QTorusMesh">Qt3DExtras::QTorusMesh</db:link>
               </db:td>
               <db:td>A toroidal mesh</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dextras::qt3dwindow.webxml" xlink:title="Qt3DExtras::Qt3DWindow" xrefstyle="class" annotations="Qt3DExtras::Qt3DWindow">Qt3DExtras::Qt3DWindow</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qabstractactioninput.webxml" xlink:title="Qt3DInput::QAbstractActionInput" xrefstyle="class" annotations="Qt3DInput::QAbstractActionInput">Qt3DInput::QAbstractActionInput</db:link>
               </db:td>
               <db:td>The base class for the Action Input and all Aggregate Action Inputs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qabstractaxisinput.webxml" xlink:title="Qt3DInput::QAbstractAxisInput" xrefstyle="class" annotations="Qt3DInput::QAbstractAxisInput">Qt3DInput::QAbstractAxisInput</db:link>
               </db:td>
               <db:td>QAbstractActionInput is the base class for all Axis Input</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qabstractphysicaldevice.webxml" xlink:title="Qt3DInput::QAbstractPhysicalDevice" xrefstyle="class" annotations="Qt3DInput::QAbstractPhysicalDevice">Qt3DInput::QAbstractPhysicalDevice</db:link>
               </db:td>
               <db:td>The base class used by Qt3d to interact with arbitrary input devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qaction.webxml" xlink:title="Qt3DInput::QAction" xrefstyle="class" annotations="Qt3DInput::QAction">Qt3DInput::QAction</db:link>
               </db:td>
               <db:td>Links a set of QAbstractActionInput that trigger the same event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qactioninput.webxml" xlink:title="Qt3DInput::QActionInput" xrefstyle="class" annotations="Qt3DInput::QActionInput">Qt3DInput::QActionInput</db:link>
               </db:td>
               <db:td>Stores Device and Buttons used to trigger an input event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qanalogaxisinput.webxml" xlink:title="Qt3DInput::QAnalogAxisInput" xrefstyle="class" annotations="Qt3DInput::QAnalogAxisInput">Qt3DInput::QAnalogAxisInput</db:link>
               </db:td>
               <db:td>An axis input controlled by an analog input The axis value is controlled like a traditional analog input such as a joystick</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qaxis.webxml" xlink:title="Qt3DInput::QAxis" xrefstyle="class" annotations="Qt3DInput::QAxis">Qt3DInput::QAxis</db:link>
               </db:td>
               <db:td>Stores QAbstractAxisInputs used to trigger an input event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qaxisaccumulator.webxml" xlink:title="Qt3DInput::QAxisAccumulator" xrefstyle="class" annotations="Qt3DInput::QAxisAccumulator">Qt3DInput::QAxisAccumulator</db:link>
               </db:td>
               <db:td>Processes velocity or acceleration data from a QAxis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qaxissetting.webxml" xlink:title="Qt3DInput::QAxisSetting" xrefstyle="class" annotations="Qt3DInput::QAxisSetting">Qt3DInput::QAxisSetting</db:link>
               </db:td>
               <db:td>Stores settings for the specified list of Axis</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qbuttonaxisinput.webxml" xlink:title="Qt3DInput::QButtonAxisInput" xrefstyle="class" annotations="Qt3DInput::QButtonAxisInput">Qt3DInput::QButtonAxisInput</db:link>
               </db:td>
               <db:td>An axis input controlled by buttons The axis value is controlled by buttons rather than a traditional analog input such as a joystick</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qinputaspect.webxml" xlink:title="Qt3DInput::QInputAspect" xrefstyle="class" annotations="Qt3DInput::QInputAspect">Qt3DInput::QInputAspect</db:link>
               </db:td>
               <db:td>Responsible for creating physical devices and handling associated jobs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qinputchord.webxml" xlink:title="Qt3DInput::QInputChord" xrefstyle="class" annotations="Qt3DInput::QInputChord">Qt3DInput::QInputChord</db:link>
               </db:td>
               <db:td>Represents a set of QAbstractActionInput's that must be triggerd at once</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qinputsequence.webxml" xlink:title="Qt3DInput::QInputSequence" xrefstyle="class" annotations="Qt3DInput::QInputSequence">Qt3DInput::QInputSequence</db:link>
               </db:td>
               <db:td>Represents a set of QAbstractActionInput's that must be triggerd one after the other</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qinputsettings.webxml" xlink:title="Qt3DInput::QInputSettings" xrefstyle="class" annotations="Qt3DInput::QInputSettings">Qt3DInput::QInputSettings</db:link>
               </db:td>
               <db:td>Holds the pointer to an input event source object</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qkeyevent.webxml" xlink:title="Qt3DInput::QKeyEvent" xrefstyle="class" annotations="Qt3DInput::QKeyEvent">Qt3DInput::QKeyEvent</db:link>
               </db:td>
               <db:td>Event type send by KeyBoardHandler</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qkeyboarddevice.webxml" xlink:title="Qt3DInput::QKeyboardDevice" xrefstyle="class" annotations="Qt3DInput::QKeyboardDevice">Qt3DInput::QKeyboardDevice</db:link>
               </db:td>
               <db:td>In charge of dispatching keyboard events to attached QQKeyboardHandler objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qkeyboardhandler.webxml" xlink:title="Qt3DInput::QKeyboardHandler" xrefstyle="class" annotations="Qt3DInput::QKeyboardHandler">Qt3DInput::QKeyboardHandler</db:link>
               </db:td>
               <db:td>Provides keyboard event notification</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qlogicaldevice.webxml" xlink:title="Qt3DInput::QLogicalDevice" xrefstyle="class" annotations="Qt3DInput::QLogicalDevice">Qt3DInput::QLogicalDevice</db:link>
               </db:td>
               <db:td>Allows the user to define a set of actions that they wish to use within an application</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qmousedevice.webxml" xlink:title="Qt3DInput::QMouseDevice" xrefstyle="class" annotations="Qt3DInput::QMouseDevice">Qt3DInput::QMouseDevice</db:link>
               </db:td>
               <db:td>Delegates mouse events to the attached MouseHandler objects</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qmouseevent.webxml" xlink:title="Qt3DInput::QMouseEvent" xrefstyle="class" annotations="Qt3DInput::QMouseEvent">Qt3DInput::QMouseEvent</db:link>
               </db:td>
               <db:td>Qt3DCore::QMouseEvent contains parameters that describe a mouse event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qmousehandler.webxml" xlink:title="Qt3DInput::QMouseHandler" xrefstyle="class" annotations="Qt3DInput::QMouseHandler">Qt3DInput::QMouseHandler</db:link>
               </db:td>
               <db:td>Provides a means of being notified about mouse events when attached to a QMouseDevice instance</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qphysicaldevicecreatedchange.webxml" xlink:title="Qt3DInput::QPhysicalDeviceCreatedChange" xrefstyle="class" annotations="Qt3DInput::QPhysicalDeviceCreatedChange">Qt3DInput::QPhysicalDeviceCreatedChange</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qphysicaldevicecreatedchangebase.webxml" xlink:title="Qt3DInput::QPhysicalDeviceCreatedChangeBase" xrefstyle="class" annotations="Qt3DInput::QPhysicalDeviceCreatedChangeBase">Qt3DInput::QPhysicalDeviceCreatedChangeBase</db:link>
               </db:td>
               <db:td>Base class for handling changes in physical devices</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dinput::qwheelevent.webxml" xlink:title="Qt3DInput::QWheelEvent" xrefstyle="class" annotations="Qt3DInput::QWheelEvent">Qt3DInput::QWheelEvent</db:link>
               </db:td>
               <db:td>Contains parameters that describe a mouse wheel event</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dlogic::qframeaction.webxml" xlink:title="Qt3DLogic::QFrameAction" xrefstyle="class" annotations="Qt3DLogic::QFrameAction">Qt3DLogic::QFrameAction</db:link>
               </db:td>
               <db:td>Provides a way to have a synchronous function executed each frame</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3dlogic::qlogicaspect.webxml" xlink:title="Qt3DLogic::QLogicAspect" xrefstyle="class" annotations="Qt3DLogic::QLogicAspect">Qt3DLogic::QLogicAspect</db:link>
               </db:td>
               <db:td>Responsible for handling frame synchronization jobs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::assimpimporter.webxml" xlink:title="Qt3DRender::AssimpImporter" xrefstyle="class" annotations="Qt3DRender::AssimpImporter">Qt3DRender::AssimpImporter</db:link>
               </db:td>
               <db:td>Provides a generic way of loading various 3D assets format into a Qt3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::assimpimporter::sceneimporter.webxml" xlink:title="Qt3DRender::AssimpImporter::SceneImporter" xrefstyle="class" annotations="Qt3DRender::AssimpImporter::SceneImporter">Qt3DRender::AssimpImporter::SceneImporter</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::fbxgeometryloader.webxml" xlink:title="Qt3DRender::FbxGeometryLoader" xrefstyle="class" annotations="Qt3DRender::FbxGeometryLoader">Qt3DRender::FbxGeometryLoader</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::functortype.webxml" xlink:title="Qt3DRender::FunctorType" xrefstyle="class" annotations="Qt3DRender::FunctorType">Qt3DRender::FunctorType</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter.webxml" xlink:title="Qt3DRender::GLTFExporter" xrefstyle="class" annotations="Qt3DRender::GLTFExporter">Qt3DRender::GLTFExporter</db:link>
               </db:td>
               <db:td>Manages the export of a 3D scene to the GLTF format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter::gltfoptions.webxml" xlink:title="Qt3DRender::GLTFExporter::GltfOptions" xrefstyle="class" annotations="Qt3DRender::GLTFExporter::GltfOptions">Qt3DRender::GLTFExporter::GltfOptions</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter::materialinfo.webxml" xlink:title="Qt3DRender::GLTFExporter::MaterialInfo" xrefstyle="class" annotations="Qt3DRender::GLTFExporter::MaterialInfo">Qt3DRender::GLTFExporter::MaterialInfo</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter::meshinfo.webxml" xlink:title="Qt3DRender::GLTFExporter::MeshInfo" xrefstyle="class" annotations="Qt3DRender::GLTFExporter::MeshInfo">Qt3DRender::GLTFExporter::MeshInfo</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter::meshinfo::accessor.webxml" xlink:title="Qt3DRender::GLTFExporter::MeshInfo::Accessor" xrefstyle="class" annotations="Qt3DRender::GLTFExporter::MeshInfo::Accessor">Qt3DRender::GLTFExporter::MeshInfo::Accessor</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter::meshinfo::bufferview.webxml" xlink:title="Qt3DRender::GLTFExporter::MeshInfo::BufferView" xrefstyle="class" annotations="Qt3DRender::GLTFExporter::MeshInfo::BufferView">Qt3DRender::GLTFExporter::MeshInfo::BufferView</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfexporter::node.webxml" xlink:title="Qt3DRender::GLTFExporter::Node" xrefstyle="class" annotations="Qt3DRender::GLTFExporter::Node">Qt3DRender::GLTFExporter::Node</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfgeometryloader.webxml" xlink:title="Qt3DRender::GLTFGeometryLoader" xrefstyle="class" annotations="Qt3DRender::GLTFGeometryLoader">Qt3DRender::GLTFGeometryLoader</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfgeometryloader::gltf1.webxml" xlink:title="Qt3DRender::GLTFGeometryLoader::Gltf1" xrefstyle="class" annotations="Qt3DRender::GLTFGeometryLoader::Gltf1">Qt3DRender::GLTFGeometryLoader::Gltf1</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfgeometryloader::gltf2.webxml" xlink:title="Qt3DRender::GLTFGeometryLoader::Gltf2" xrefstyle="class" annotations="Qt3DRender::GLTFGeometryLoader::Gltf2">Qt3DRender::GLTFGeometryLoader::Gltf2</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::gltfimporter.webxml" xlink:title="Qt3DRender::GLTFImporter" xrefstyle="class" annotations="Qt3DRender::GLTFImporter">Qt3DRender::GLTFImporter</db:link>
               </db:td>
               <db:td>Handles importing of gltf files</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::objgeometryloader.webxml" xlink:title="Qt3DRender::ObjGeometryLoader" xrefstyle="class" annotations="Qt3DRender::ObjGeometryLoader">Qt3DRender::ObjGeometryLoader</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::plygeometryloader.webxml" xlink:title="Qt3DRender::PlyGeometryLoader" xrefstyle="class" annotations="Qt3DRender::PlyGeometryLoader">Qt3DRender::PlyGeometryLoader</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::plygeometryloader::element.webxml" xlink:title="Qt3DRender::PlyGeometryLoader::Element" xrefstyle="class" annotations="Qt3DRender::PlyGeometryLoader::Element">Qt3DRender::PlyGeometryLoader::Element</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::plygeometryloader::property.webxml" xlink:title="Qt3DRender::PlyGeometryLoader::Property" xrefstyle="class" annotations="Qt3DRender::PlyGeometryLoader::Property">Qt3DRender::PlyGeometryLoader::Property</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::propertyreaderinterface.webxml" xlink:title="Qt3DRender::PropertyReaderInterface" xrefstyle="class" annotations="Qt3DRender::PropertyReaderInterface">Qt3DRender::PropertyReaderInterface</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qabstractfunctor.webxml" xlink:title="Qt3DRender::QAbstractFunctor" xrefstyle="class" annotations="Qt3DRender::QAbstractFunctor">Qt3DRender::QAbstractFunctor</db:link>
               </db:td>
               <db:td>Abstract base class for all functors</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qabstractlight.webxml" xlink:title="Qt3DRender::QAbstractLight" xrefstyle="class" annotations="Qt3DRender::QAbstractLight">Qt3DRender::QAbstractLight</db:link>
               </db:td>
               <db:td>Encapsulate a QAbstractLight object in a Qt 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qabstractraycaster.webxml" xlink:title="Qt3DRender::QAbstractRayCaster" xrefstyle="class" annotations="Qt3DRender::QAbstractRayCaster">Qt3DRender::QAbstractRayCaster</db:link>
               </db:td>
               <db:td>An abstract base class for ray casting in 3d scenes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qabstracttexture.webxml" xlink:title="Qt3DRender::QAbstractTexture" xrefstyle="class" annotations="Qt3DRender::QAbstractTexture">Qt3DRender::QAbstractTexture</db:link>
               </db:td>
               <db:td>A base class to be used to provide textures</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qabstracttextureimage.webxml" xlink:title="Qt3DRender::QAbstractTextureImage" xrefstyle="class" annotations="Qt3DRender::QAbstractTextureImage">Qt3DRender::QAbstractTextureImage</db:link>
               </db:td>
               <db:td>Encapsulates the necessary information to create an OpenGL texture image</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qalphacoverage.webxml" xlink:title="Qt3DRender::QAlphaCoverage" xrefstyle="class" annotations="Qt3DRender::QAlphaCoverage">Qt3DRender::QAlphaCoverage</db:link>
               </db:td>
               <db:td>Enable alpha-to-coverage multisampling mode</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qalphatest.webxml" xlink:title="Qt3DRender::QAlphaTest" xrefstyle="class" annotations="Qt3DRender::QAlphaTest">Qt3DRender::QAlphaTest</db:link>
               </db:td>
               <db:td>Specify alpha reference test</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qattribute.webxml" xlink:title="Qt3DRender::QAttribute" xrefstyle="class" annotations="Qt3DRender::QAttribute">Qt3DRender::QAttribute</db:link>
               </db:td>
               <db:td>Defines an attribute and how data should be read from a QBuffer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qblendequation.webxml" xlink:title="Qt3DRender::QBlendEquation" xrefstyle="class" annotations="Qt3DRender::QBlendEquation">Qt3DRender::QBlendEquation</db:link>
               </db:td>
               <db:td>Specifies the equation used for both the RGB blend equation and the Alpha blend equation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qblendequationarguments.webxml" xlink:title="Qt3DRender::QBlendEquationArguments" xrefstyle="class" annotations="Qt3DRender::QBlendEquationArguments">Qt3DRender::QBlendEquationArguments</db:link>
               </db:td>
               <db:td>Encapsulates blending information: specifies how the incoming values (what's going to be drawn) are going to affect the existing values (what is already drawn)</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qblitframebuffer.webxml" xlink:title="Qt3DRender::QBlitFramebuffer" xrefstyle="class" annotations="Qt3DRender::QBlitFramebuffer">Qt3DRender::QBlitFramebuffer</db:link>
               </db:td>
               <db:td>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qbuffer.webxml" xlink:title="Qt3DRender::QBuffer" xrefstyle="class" annotations="Qt3DRender::QBuffer">Qt3DRender::QBuffer</db:link>
               </db:td>
               <db:td>Provides a data store for raw data to later be used as vertices or uniforms</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qbuffercapture.webxml" xlink:title="Qt3DRender::QBufferCapture" xrefstyle="class" annotations="Qt3DRender::QBufferCapture">Qt3DRender::QBufferCapture</db:link>
               </db:td>
               <db:td>Exchanges buffer data between GPU and CPU</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qbufferdatagenerator.webxml" xlink:title="Qt3DRender::QBufferDataGenerator" xrefstyle="class" annotations="Qt3DRender::QBufferDataGenerator">Qt3DRender::QBufferDataGenerator</db:link>
               </db:td>
               <db:td>Provides a mechanism to generate buffer data from a job</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qcamera.webxml" xlink:title="Qt3DRender::QCamera" xrefstyle="class" annotations="Qt3DRender::QCamera">Qt3DRender::QCamera</db:link>
               </db:td>
               <db:td>Defines a view point through which the scene will be rendered</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qcameralens.webxml" xlink:title="Qt3DRender::QCameraLens" xrefstyle="class" annotations="Qt3DRender::QCameraLens">Qt3DRender::QCameraLens</db:link>
               </db:td>
               <db:td>Qt3DRender::QCameraLens specifies the projection matrix that will be used to define a Camera for a 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qcameraselector.webxml" xlink:title="Qt3DRender::QCameraSelector" xrefstyle="class" annotations="Qt3DRender::QCameraSelector">Qt3DRender::QCameraSelector</db:link>
               </db:td>
               <db:td>Class to allow for selection of camera to be used</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qclearbuffers.webxml" xlink:title="Qt3DRender::QClearBuffers" xrefstyle="class" annotations="Qt3DRender::QClearBuffers">Qt3DRender::QClearBuffers</db:link>
               </db:td>
               <db:td>Class to clear buffers</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qclipplane.webxml" xlink:title="Qt3DRender::QClipPlane" xrefstyle="class" annotations="Qt3DRender::QClipPlane">Qt3DRender::QClipPlane</db:link>
               </db:td>
               <db:td>Enables an additional OpenGL clipping plane that can be in shaders using gl_ClipDistance</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qcolormask.webxml" xlink:title="Qt3DRender::QColorMask" xrefstyle="class" annotations="Qt3DRender::QColorMask">Qt3DRender::QColorMask</db:link>
               </db:td>
               <db:td>Allows specifying which color components should be written to the currently bound frame buffer</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qcomputecommand.webxml" xlink:title="Qt3DRender::QComputeCommand" xrefstyle="class" annotations="Qt3DRender::QComputeCommand">Qt3DRender::QComputeCommand</db:link>
               </db:td>
               <db:td>QComponent to issue work for the compute shader on GPU</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qcullface.webxml" xlink:title="Qt3DRender::QCullFace" xrefstyle="class" annotations="Qt3DRender::QCullFace">Qt3DRender::QCullFace</db:link>
               </db:td>
               <db:td>Specifies whether front or back face culling is enabled</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qdepthtest.webxml" xlink:title="Qt3DRender::QDepthTest" xrefstyle="class" annotations="Qt3DRender::QDepthTest">Qt3DRender::QDepthTest</db:link>
               </db:td>
               <db:td>Tests the fragment shader's depth value against the depth of a sample being written to</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qdirectionallight.webxml" xlink:title="Qt3DRender::QDirectionalLight" xrefstyle="class" annotations="Qt3DRender::QDirectionalLight">Qt3DRender::QDirectionalLight</db:link>
               </db:td>
               <db:td>Encapsulate a Directional Light object in a Qt 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qdispatchcompute.webxml" xlink:title="Qt3DRender::QDispatchCompute" xrefstyle="class" annotations="Qt3DRender::QDispatchCompute">Qt3DRender::QDispatchCompute</db:link>
               </db:td>
               <db:td>FrameGraph node to issue work for the compute shader on GPU</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qdithering.webxml" xlink:title="Qt3DRender::QDithering" xrefstyle="class" annotations="Qt3DRender::QDithering">Qt3DRender::QDithering</db:link>
               </db:td>
               <db:td>Enable dithering</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qeffect.webxml" xlink:title="Qt3DRender::QEffect" xrefstyle="class" annotations="Qt3DRender::QEffect">Qt3DRender::QEffect</db:link>
               </db:td>
               <db:td>Base class for effects in a Qt 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qenvironmentlight.webxml" xlink:title="Qt3DRender::QEnvironmentLight" xrefstyle="class" annotations="Qt3DRender::QEnvironmentLight">Qt3DRender::QEnvironmentLight</db:link>
               </db:td>
               <db:td>Encapsulate an environment light object in a Qt 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qfilterkey.webxml" xlink:title="Qt3DRender::QFilterKey" xrefstyle="class" annotations="Qt3DRender::QFilterKey">Qt3DRender::QFilterKey</db:link>
               </db:td>
               <db:td>Storage for filter keys and their values</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qframegraphnode.webxml" xlink:title="Qt3DRender::QFrameGraphNode" xrefstyle="class" annotations="Qt3DRender::QFrameGraphNode">Qt3DRender::QFrameGraphNode</db:link>
               </db:td>
               <db:td>Base class of all FrameGraph configuration nodes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qframegraphnodecreatedchange.webxml" xlink:title="Qt3DRender::QFrameGraphNodeCreatedChange" xrefstyle="class" annotations="Qt3DRender::QFrameGraphNodeCreatedChange">Qt3DRender::QFrameGraphNodeCreatedChange</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qframegraphnodecreatedchangebase.webxml" xlink:title="Qt3DRender::QFrameGraphNodeCreatedChangeBase" xrefstyle="class" annotations="Qt3DRender::QFrameGraphNodeCreatedChangeBase">Qt3DRender::QFrameGraphNodeCreatedChangeBase</db:link>
               </db:td>
               <db:td>A base class for changes in the FrameGraphNode</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qfrontface.webxml" xlink:title="Qt3DRender::QFrontFace" xrefstyle="class" annotations="Qt3DRender::QFrontFace">Qt3DRender::QFrontFace</db:link>
               </db:td>
               <db:td>Defines front and back facing polygons</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qfrustumculling.webxml" xlink:title="Qt3DRender::QFrustumCulling" xrefstyle="class" annotations="Qt3DRender::QFrustumCulling">Qt3DRender::QFrustumCulling</db:link>
               </db:td>
               <db:td>Enable frustum culling for the FrameGraph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qgeometry.webxml" xlink:title="Qt3DRender::QGeometry" xrefstyle="class" annotations="Qt3DRender::QGeometry">Qt3DRender::QGeometry</db:link>
               </db:td>
               <db:td>Encapsulates geometry</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qgeometryfactory.webxml" xlink:title="Qt3DRender::QGeometryFactory" xrefstyle="class" annotations="Qt3DRender::QGeometryFactory">Qt3DRender::QGeometryFactory</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qgeometryrenderer.webxml" xlink:title="Qt3DRender::QGeometryRenderer" xrefstyle="class" annotations="Qt3DRender::QGeometryRenderer">Qt3DRender::QGeometryRenderer</db:link>
               </db:td>
               <db:td>Encapsulates geometry rendering</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qgraphicsapifilter.webxml" xlink:title="Qt3DRender::QGraphicsApiFilter" xrefstyle="class" annotations="Qt3DRender::QGraphicsApiFilter">Qt3DRender::QGraphicsApiFilter</db:link>
               </db:td>
               <db:td>Identifies the API required for the attached QTechnique</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qlayer.webxml" xlink:title="Qt3DRender::QLayer" xrefstyle="class" annotations="Qt3DRender::QLayer">Qt3DRender::QLayer</db:link>
               </db:td>
               <db:td>Way of filtering which entities will be rendered</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qlayerfilter.webxml" xlink:title="Qt3DRender::QLayerFilter" xrefstyle="class" annotations="Qt3DRender::QLayerFilter">Qt3DRender::QLayerFilter</db:link>
               </db:td>
               <db:td>Controls layers drawn in a frame graph branch</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qlevelofdetail.webxml" xlink:title="Qt3DRender::QLevelOfDetail" xrefstyle="class" annotations="Qt3DRender::QLevelOfDetail">Qt3DRender::QLevelOfDetail</db:link>
               </db:td>
               <db:td>Way of controlling the complexity of rendered entities based on their size on the screen</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qlevelofdetailboundingsphere.webxml" xlink:title="Qt3DRender::QLevelOfDetailBoundingSphere" xrefstyle="class" annotations="Qt3DRender::QLevelOfDetailBoundingSphere">Qt3DRender::QLevelOfDetailBoundingSphere</db:link>
               </db:td>
               <db:td>Simple spherical volume, defined by its center and radius</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qlevelofdetailswitch.webxml" xlink:title="Qt3DRender::QLevelOfDetailSwitch" xrefstyle="class" annotations="Qt3DRender::QLevelOfDetailSwitch">Qt3DRender::QLevelOfDetailSwitch</db:link>
               </db:td>
               <db:td>Provides a way of enabling child entities based on distance or screen size</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qlinewidth.webxml" xlink:title="Qt3DRender::QLineWidth" xrefstyle="class" annotations="Qt3DRender::QLineWidth">Qt3DRender::QLineWidth</db:link>
               </db:td>
               <db:td>Specifies the width of rasterized lines</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qmaterial.webxml" xlink:title="Qt3DRender::QMaterial" xrefstyle="class" annotations="Qt3DRender::QMaterial">Qt3DRender::QMaterial</db:link>
               </db:td>
               <db:td>Provides an abstract class that should be the base of all material component classes in a scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qmemorybarrier.webxml" xlink:title="Qt3DRender::QMemoryBarrier" xrefstyle="class" annotations="Qt3DRender::QMemoryBarrier">Qt3DRender::QMemoryBarrier</db:link>
               </db:td>
               <db:td>Class to emplace a memory barrier</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qmesh.webxml" xlink:title="Qt3DRender::QMesh" xrefstyle="class" annotations="Qt3DRender::QMesh">Qt3DRender::QMesh</db:link>
               </db:td>
               <db:td>A custom mesh loader</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qmultisampleantialiasing.webxml" xlink:title="Qt3DRender::QMultiSampleAntiAliasing" xrefstyle="class" annotations="Qt3DRender::QMultiSampleAntiAliasing">Qt3DRender::QMultiSampleAntiAliasing</db:link>
               </db:td>
               <db:td>Enable multisample antialiasing</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qnodepthmask.webxml" xlink:title="Qt3DRender::QNoDepthMask" xrefstyle="class" annotations="Qt3DRender::QNoDepthMask">Qt3DRender::QNoDepthMask</db:link>
               </db:td>
               <db:td>Disable depth write</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qnodraw.webxml" xlink:title="Qt3DRender::QNoDraw" xrefstyle="class" annotations="Qt3DRender::QNoDraw">Qt3DRender::QNoDraw</db:link>
               </db:td>
               <db:td>When a Qt3DRender::QNoDraw node is present in a FrameGraph branch, this prevents the renderer from rendering any primitive</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qobjectpicker.webxml" xlink:title="Qt3DRender::QObjectPicker" xrefstyle="class" annotations="Qt3DRender::QObjectPicker">Qt3DRender::QObjectPicker</db:link>
               </db:td>
               <db:td>Instantiates a component that can be used to interact with a QEntity by a process known as picking</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpaintedtextureimage.webxml" xlink:title="Qt3DRender::QPaintedTextureImage" xrefstyle="class" annotations="Qt3DRender::QPaintedTextureImage">Qt3DRender::QPaintedTextureImage</db:link>
               </db:td>
               <db:td>A QAbstractTextureImage that can be written through a QPainter</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qparameter.webxml" xlink:title="Qt3DRender::QParameter" xrefstyle="class" annotations="Qt3DRender::QParameter">Qt3DRender::QParameter</db:link>
               </db:td>
               <db:td>Provides storage for a name and value pair. This maps to a shader uniform</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpickevent.webxml" xlink:title="Qt3DRender::QPickEvent" xrefstyle="class" annotations="Qt3DRender::QPickEvent">Qt3DRender::QPickEvent</db:link>
               </db:td>
               <db:td>Holds information when an object is picked</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpicklineevent.webxml" xlink:title="Qt3DRender::QPickLineEvent" xrefstyle="class" annotations="Qt3DRender::QPickLineEvent">Qt3DRender::QPickLineEvent</db:link>
               </db:td>
               <db:td>Holds information when a segment of a line is picked</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpickpointevent.webxml" xlink:title="Qt3DRender::QPickPointEvent" xrefstyle="class" annotations="Qt3DRender::QPickPointEvent">Qt3DRender::QPickPointEvent</db:link>
               </db:td>
               <db:td>Holds information when a segment of a point cloud is picked</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpicktriangleevent.webxml" xlink:title="Qt3DRender::QPickTriangleEvent" xrefstyle="class" annotations="Qt3DRender::QPickTriangleEvent">Qt3DRender::QPickTriangleEvent</db:link>
               </db:td>
               <db:td>Holds information when a triangle is picked</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpickingsettings.webxml" xlink:title="Qt3DRender::QPickingSettings" xrefstyle="class" annotations="Qt3DRender::QPickingSettings">Qt3DRender::QPickingSettings</db:link>
               </db:td>
               <db:td>Specifies how entity picking is handled</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpointlight.webxml" xlink:title="Qt3DRender::QPointLight" xrefstyle="class" annotations="Qt3DRender::QPointLight">Qt3DRender::QPointLight</db:link>
               </db:td>
               <db:td>Encapsulate a Point Light object in a Qt 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpointsize.webxml" xlink:title="Qt3DRender::QPointSize" xrefstyle="class" annotations="Qt3DRender::QPointSize">Qt3DRender::QPointSize</db:link>
               </db:td>
               <db:td>Specifies the size of rasterized points. May either be set statically or by shader programs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qpolygonoffset.webxml" xlink:title="Qt3DRender::QPolygonOffset" xrefstyle="class" annotations="Qt3DRender::QPolygonOffset">Qt3DRender::QPolygonOffset</db:link>
               </db:td>
               <db:td>Sets the scale and steps to calculate depth values for polygon offsets</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qproximityfilter.webxml" xlink:title="Qt3DRender::QProximityFilter" xrefstyle="class" annotations="Qt3DRender::QProximityFilter">Qt3DRender::QProximityFilter</db:link>
               </db:td>
               <db:td>Select entities which are within a distance threshold of a target entity</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qraycaster.webxml" xlink:title="Qt3DRender::QRayCaster" xrefstyle="class" annotations="Qt3DRender::QRayCaster">Qt3DRender::QRayCaster</db:link>
               </db:td>
               <db:td>Qt3DRender::QRayCaster is used to perform ray casting tests in 3d world coordinates</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qraycasterhit.webxml" xlink:title="Qt3DRender::QRayCasterHit" xrefstyle="class" annotations="Qt3DRender::QRayCasterHit">Qt3DRender::QRayCasterHit</db:link>
               </db:td>
               <db:td>Details of a hit when casting a ray through a model</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrenderaspect.webxml" xlink:title="Qt3DRender::QRenderAspect" xrefstyle="class" annotations="Qt3DRender::QRenderAspect">Qt3DRender::QRenderAspect</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendercapture.webxml" xlink:title="Qt3DRender::QRenderCapture" xrefstyle="class" annotations="Qt3DRender::QRenderCapture">Qt3DRender::QRenderCapture</db:link>
               </db:td>
               <db:td>Frame graph node for render capture</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendercapturereply.webxml" xlink:title="Qt3DRender::QRenderCaptureReply" xrefstyle="class" annotations="Qt3DRender::QRenderCaptureReply">Qt3DRender::QRenderCaptureReply</db:link>
               </db:td>
               <db:td>Receives the result of render capture request</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrenderpass.webxml" xlink:title="Qt3DRender::QRenderPass" xrefstyle="class" annotations="Qt3DRender::QRenderPass">Qt3DRender::QRenderPass</db:link>
               </db:td>
               <db:td>Encapsulates a Render Pass</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrenderpassfilter.webxml" xlink:title="Qt3DRender::QRenderPassFilter" xrefstyle="class" annotations="Qt3DRender::QRenderPassFilter">Qt3DRender::QRenderPassFilter</db:link>
               </db:td>
               <db:td>Provides storage for vectors of Filter Keys and Parameters</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendersettings.webxml" xlink:title="Qt3DRender::QRenderSettings" xrefstyle="class" annotations="Qt3DRender::QRenderSettings">Qt3DRender::QRenderSettings</db:link>
               </db:td>
               <db:td>Holds settings related to rendering process and host the active FrameGraph</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrenderstate.webxml" xlink:title="Qt3DRender::QRenderState" xrefstyle="class" annotations="Qt3DRender::QRenderState">Qt3DRender::QRenderState</db:link>
               </db:td>
               <db:td>An abstract base class for all render states</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrenderstateset.webxml" xlink:title="Qt3DRender::QRenderStateSet" xrefstyle="class" annotations="Qt3DRender::QRenderStateSet">Qt3DRender::QRenderStateSet</db:link>
               </db:td>
               <db:td>FrameGraph node offers a way of specifying a set of QRenderState objects to be applied during the execution of a framegraph branch</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendersurfaceselector.webxml" xlink:title="Qt3DRender::QRenderSurfaceSelector" xrefstyle="class" annotations="Qt3DRender::QRenderSurfaceSelector">Qt3DRender::QRenderSurfaceSelector</db:link>
               </db:td>
               <db:td>Provides a way of specifying the render surface</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendertarget.webxml" xlink:title="Qt3DRender::QRenderTarget" xrefstyle="class" annotations="Qt3DRender::QRenderTarget">Qt3DRender::QRenderTarget</db:link>
               </db:td>
               <db:td>Encapsulates a target (usually a frame buffer object) which the renderer can render into</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendertargetoutput.webxml" xlink:title="Qt3DRender::QRenderTargetOutput" xrefstyle="class" annotations="Qt3DRender::QRenderTargetOutput">Qt3DRender::QRenderTargetOutput</db:link>
               </db:td>
               <db:td>Allows the specification of an attachment of a render target (whether it is a color texture, a depth texture, etc... )</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qrendertargetselector.webxml" xlink:title="Qt3DRender::QRenderTargetSelector" xrefstyle="class" annotations="Qt3DRender::QRenderTargetSelector">Qt3DRender::QRenderTargetSelector</db:link>
               </db:td>
               <db:td>Provides a way of specifying a render target</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qsceneloader.webxml" xlink:title="Qt3DRender::QSceneLoader" xrefstyle="class" annotations="Qt3DRender::QSceneLoader">Qt3DRender::QSceneLoader</db:link>
               </db:td>
               <db:td>Provides the facility to load an existing Scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qscissortest.webxml" xlink:title="Qt3DRender::QScissorTest" xrefstyle="class" annotations="Qt3DRender::QScissorTest">Qt3DRender::QScissorTest</db:link>
               </db:td>
               <db:td>Discards fragments that fall outside of a certain rectangular portion of the screen</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qscreenraycaster.webxml" xlink:title="Qt3DRender::QScreenRayCaster" xrefstyle="class" annotations="Qt3DRender::QScreenRayCaster">Qt3DRender::QScreenRayCaster</db:link>
               </db:td>
               <db:td>Performe ray casting test based on screen coordinates</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qseamlesscubemap.webxml" xlink:title="Qt3DRender::QSeamlessCubemap" xrefstyle="class" annotations="Qt3DRender::QSeamlessCubemap">Qt3DRender::QSeamlessCubemap</db:link>
               </db:td>
               <db:td>Enables seamless cubemap texture filtering</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qshaderdata.webxml" xlink:title="Qt3DRender::QShaderData" xrefstyle="class" annotations="Qt3DRender::QShaderData">Qt3DRender::QShaderData</db:link>
               </db:td>
               <db:td>Provides a way of specifying values of a Uniform Block or a shader structure</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qshaderprogram.webxml" xlink:title="Qt3DRender::QShaderProgram" xrefstyle="class" annotations="Qt3DRender::QShaderProgram">Qt3DRender::QShaderProgram</db:link>
               </db:td>
               <db:td>Encapsulates a Shader Program</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qshaderprogrambuilder.webxml" xlink:title="Qt3DRender::QShaderProgramBuilder" xrefstyle="class" annotations="Qt3DRender::QShaderProgramBuilder">Qt3DRender::QShaderProgramBuilder</db:link>
               </db:td>
               <db:td>Generates a Shader Program content from loaded graphs</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qsortpolicy.webxml" xlink:title="Qt3DRender::QSortPolicy" xrefstyle="class" annotations="Qt3DRender::QSortPolicy">Qt3DRender::QSortPolicy</db:link>
               </db:td>
               <db:td>Provides storage for the sort types to be used</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qspotlight.webxml" xlink:title="Qt3DRender::QSpotLight" xrefstyle="class" annotations="Qt3DRender::QSpotLight">Qt3DRender::QSpotLight</db:link>
               </db:td>
               <db:td>Encapsulate a Spot Light object in a Qt 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qstencilmask.webxml" xlink:title="Qt3DRender::QStencilMask" xrefstyle="class" annotations="Qt3DRender::QStencilMask">Qt3DRender::QStencilMask</db:link>
               </db:td>
               <db:td>Controls the front and back writing of individual bits in the stencil planes</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qstenciloperation.webxml" xlink:title="Qt3DRender::QStencilOperation" xrefstyle="class" annotations="Qt3DRender::QStencilOperation">Qt3DRender::QStencilOperation</db:link>
               </db:td>
               <db:td>Specifies stencil operation</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qstenciloperationarguments.webxml" xlink:title="Qt3DRender::QStencilOperationArguments" xrefstyle="class" annotations="Qt3DRender::QStencilOperationArguments">Qt3DRender::QStencilOperationArguments</db:link>
               </db:td>
               <db:td>Sets the actions to be taken when stencil and depth tests fail</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qstenciltest.webxml" xlink:title="Qt3DRender::QStencilTest" xrefstyle="class" annotations="Qt3DRender::QStencilTest">Qt3DRender::QStencilTest</db:link>
               </db:td>
               <db:td>Specifies arguments for the stecil test</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qstenciltestarguments.webxml" xlink:title="Qt3DRender::QStencilTestArguments" xrefstyle="class" annotations="Qt3DRender::QStencilTestArguments">Qt3DRender::QStencilTestArguments</db:link>
               </db:td>
               <db:td>Specifies arguments for stencil test</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtechnique.webxml" xlink:title="Qt3DRender::QTechnique" xrefstyle="class" annotations="Qt3DRender::QTechnique">Qt3DRender::QTechnique</db:link>
               </db:td>
               <db:td>Encapsulates a Technique</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtechniquefilter.webxml" xlink:title="Qt3DRender::QTechniqueFilter" xrefstyle="class" annotations="Qt3DRender::QTechniqueFilter">Qt3DRender::QTechniqueFilter</db:link>
               </db:td>
               <db:td>A QFrameGraphNode used to select QTechniques to use</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture1d.webxml" xlink:title="Qt3DRender::QTexture1D" xrefstyle="class" annotations="Qt3DRender::QTexture1D">Qt3DRender::QTexture1D</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target1D target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture1darray.webxml" xlink:title="Qt3DRender::QTexture1DArray" xrefstyle="class" annotations="Qt3DRender::QTexture1DArray">Qt3DRender::QTexture1DArray</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target1DArray target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture2d.webxml" xlink:title="Qt3DRender::QTexture2D" xrefstyle="class" annotations="Qt3DRender::QTexture2D">Qt3DRender::QTexture2D</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target2D target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture2darray.webxml" xlink:title="Qt3DRender::QTexture2DArray" xrefstyle="class" annotations="Qt3DRender::QTexture2DArray">Qt3DRender::QTexture2DArray</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target2DArray target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture2dmultisample.webxml" xlink:title="Qt3DRender::QTexture2DMultisample" xrefstyle="class" annotations="Qt3DRender::QTexture2DMultisample">Qt3DRender::QTexture2DMultisample</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target2DMultisample target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture2dmultisamplearray.webxml" xlink:title="Qt3DRender::QTexture2DMultisampleArray" xrefstyle="class" annotations="Qt3DRender::QTexture2DMultisampleArray">Qt3DRender::QTexture2DMultisampleArray</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target2DMultisampleArray target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexture3d.webxml" xlink:title="Qt3DRender::QTexture3D" xrefstyle="class" annotations="Qt3DRender::QTexture3D">Qt3DRender::QTexture3D</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a Target3D target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturebuffer.webxml" xlink:title="Qt3DRender::QTextureBuffer" xrefstyle="class" annotations="Qt3DRender::QTextureBuffer">Qt3DRender::QTextureBuffer</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a TargetBuffer target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturecubemap.webxml" xlink:title="Qt3DRender::QTextureCubeMap" xrefstyle="class" annotations="Qt3DRender::QTextureCubeMap">Qt3DRender::QTextureCubeMap</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a TargetCubeMap target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturecubemaparray.webxml" xlink:title="Qt3DRender::QTextureCubeMapArray" xrefstyle="class" annotations="Qt3DRender::QTextureCubeMapArray">Qt3DRender::QTextureCubeMapArray</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a TargetCubeMapArray target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturedata.webxml" xlink:title="Qt3DRender::QTextureData" xrefstyle="class" annotations="Qt3DRender::QTextureData">Qt3DRender::QTextureData</db:link>
               </db:td>
               <db:td>Stores texture information such as the target, height, width, depth, layers, wrap, and if mipmaps are enabled</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturegenerator.webxml" xlink:title="Qt3DRender::QTextureGenerator" xrefstyle="class" annotations="Qt3DRender::QTextureGenerator">Qt3DRender::QTextureGenerator</db:link>
               </db:td>
               <db:td>Provides the image data for a texture</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtextureimage.webxml" xlink:title="Qt3DRender::QTextureImage" xrefstyle="class" annotations="Qt3DRender::QTextureImage">Qt3DRender::QTextureImage</db:link>
               </db:td>
               <db:td>Encapsulates the necessary information to create an OpenGL texture image from an image source</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtextureimagedata.webxml" xlink:title="Qt3DRender::QTextureImageData" xrefstyle="class" annotations="Qt3DRender::QTextureImageData">Qt3DRender::QTextureImageData</db:link>
               </db:td>
               <db:td>Stores data representing a texture</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtextureimagedatagenerator.webxml" xlink:title="Qt3DRender::QTextureImageDataGenerator" xrefstyle="class" annotations="Qt3DRender::QTextureImageDataGenerator">Qt3DRender::QTextureImageDataGenerator</db:link>
               </db:td>
               <db:td>Provides texture image data for QAbstractTextureImage</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtextureloader.webxml" xlink:title="Qt3DRender::QTextureLoader" xrefstyle="class" annotations="Qt3DRender::QTextureLoader">Qt3DRender::QTextureLoader</db:link>
               </db:td>
               <db:td>Handles the texture loading and setting the texture's properties</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturerectangle.webxml" xlink:title="Qt3DRender::QTextureRectangle" xrefstyle="class" annotations="Qt3DRender::QTextureRectangle">Qt3DRender::QTextureRectangle</db:link>
               </db:td>
               <db:td>A QAbstractTexture with a TargetRectangle target format</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qtexturewrapmode.webxml" xlink:title="Qt3DRender::QTextureWrapMode" xrefstyle="class" annotations="Qt3DRender::QTextureWrapMode">Qt3DRender::QTextureWrapMode</db:link>
               </db:td>
               <db:td>Defines the wrap mode a Qt3DRender::QAbstractTexture should apply to a texture</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::qviewport.webxml" xlink:title="Qt3DRender::QViewport" xrefstyle="class" annotations="Qt3DRender::QViewport">Qt3DRender::QViewport</db:link>
               </db:td>
               <db:td>A viewport on the Qt3D Scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::quick::qscene2d.webxml" xlink:title="Qt3DRender::Quick::QScene2D" xrefstyle="class" annotations="Qt3DRender::Quick::QScene2D">Qt3DRender::Quick::QScene2D</db:link>
               </db:td>
               <db:td>This class enables rendering qml into a texture, which then can be used as a part of 3D scene</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qt3drender::stlgeometryloader.webxml" xlink:title="Qt3DRender::StlGeometryLoader" xrefstyle="class" annotations="Qt3DRender::StlGeometryLoader">Qt3DRender::StlGeometryLoader</db:link>
               </db:td>
               <db:td/>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtroclientfactory.webxml" xlink:title="QtROClientFactory" xrefstyle="class" annotations="QtROClientFactory">QtROClientFactory</db:link>
               </db:td>
               <db:td>A class holding information about client backends available on the Qt Remote Objects network</db:td>
            </db:tr>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qtroserverfactory.webxml" xlink:title="QtROServerFactory" xrefstyle="class" annotations="QtROServerFactory">QtROServerFactory</db:link>
               </db:td>
               <db:td>A class holding information about server backends available on the Qt Remote Objects network</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>o</db:title>
      <db:informaltable>
         <db:tbody>
            <db:tr>
               <db:td>
                  <db:link xlink:href="qoutputrange.webxml" xlink:title="qoutputrange" xrefstyle="class" annotations="qoutputrange">qoutputrange</db:link>
               </db:td>
               <db:td>Holds the specifics of an output range</db:td>
            </db:tr>
         </db:tbody>
      </db:informaltable>
   </db:section>
   <db:section>
      <db:title>See Also</db:title>
      <db:para>
         <db:emphasis role="bold">See Also:</db:emphasis>
         <db:simplelist type="vert">
            <db:member>
               <db:link xlink:href="qtmodules.html" xrefstyle="page" annotations="All Modules">All Modules</db:link>
            </db:member>
            <db:member>
               <db:link xlink:href="obsoleteclasses.html" xrefstyle="page" annotations="Obsolete Classes">Obsolete Classes</db:link>
            </db:member>
         </db:simplelist>
      </db:para>
   </db:section>
</db:article>
