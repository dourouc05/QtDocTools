<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <page name="activeqt/comapp" href="activeqt-activeqt-comapp-example.html" status="active" location="comapp.qdoc" filepath="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/doc/src/comapp.qdoc" lineno="28" subtype="example" title="COM App Example (ActiveQt)" fulltitle="COM App Example (ActiveQt)" subtitle="" module="ActiveQt" brief="COM App example shows how to use ActiveQt to develop a Qt application that can be automated via COM. Different QObject based classes are exposed as COM objects that communicate with the GUI of the running Qt application. The APIs of those COM objects has been designed to resemble the APIs of standard COM applications; i.e. those from Microsoft Office">
            <description path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/doc/src/comapp.qdoc" line="28" column="4">
                <brief>The COM App example shows how to use <link raw="ActiveQt" href="activeqt-index.html" type="page" page="Active Qt">ActiveQt</link> to develop a Qt application that can be automated via COM. Different <link raw="QObject" href="qobject.html" type="class">QObject</link> based classes are exposed as COM objects that communicate with the GUI of the running Qt application. The APIs of those COM objects has been designed to resemble the APIs of standard COM applications; i.e. those from Microsoft Office.</brief>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="2"/>
                <para>The first class <teletype type="highlighted">Application</teletype> represents the application object. It exposes read-only properties <teletype type="highlighted">documents</teletype> and <teletype type="highlighted">id</teletype> to get access to the list of documents, and an identifier. A read/write property <teletype type="highlighted">visible</teletype> controls whether the <link raw="QTabWidget" href="qtabwidget.html" type="class">QTabWidget</link>-based user interface of the application should be visible, and a slot <teletype type="highlighted">quit()</teletype> terminates the application.</para>
                <para>The <italic>RegisterObject</italic> attribute is set to make sure that instances of this class are registered in COM's running object table (ROT) - this allows COM clients to connect to an already instantiated COM object.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="1"/>
                <para>The <teletype type="highlighted">DocumentList</teletype> class stores a list of documents. It provides an API to read the number of documents, to access each document by index and to create a new document. The <teletype type="highlighted">application</teletype> property returns the root object.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="0"/>
                <para>The <teletype type="highlighted">Document</teletype> class finally represents a document in the application. Each document is represented by a page in the application's tab widget, and has a title that is readable and writable through the document's API. The <teletype type="highlighted">application</teletype> property again returns the root object.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="3"/>
                <para>The implementation of the <teletype type="highlighted">Document</teletype> class creates a new page for the tab widget, and uses the title of that page for the title property. The page is deleted when the document is deleted.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="4"/>
                <para>The <teletype type="highlighted">DocumentList</teletype> implementation is straightforward.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="5"/>
                <para>The <teletype type="highlighted">Application</teletype> class initializes the user interface in the constructor, and shows and hides it in the implementation of <teletype type="highlighted">setVisible()</teletype>. The object name (accessible through the <teletype type="highlighted">id</teletype> property) is set to <teletype type="highlighted">&quot;From</teletype> <link raw="QAxFactory" href="qaxfactory.html" type="class">QAxFactory</link>&quot; to indicate that this COM object has been created by COM. Note that there is no destructor that would delete the <link raw="QTabWidget" href="qtabwidget.html" type="class">QTabWidget</link> - this is instead done in the <teletype type="highlighted">quit()</teletype> slot, before calling <link raw="QCoreApplication::quit()" href="qcoreapplication.html#quit" type="function">quit()</link> through a single-shot-timer, which is necessary to ensure that the COM call to the slot is complete.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="6"/>
                <para>The classes are exported from the server using the <link raw="QAxFactory" href="qaxfactory.html" type="class">QAxFactory</link> macros. Only <teletype type="highlighted">Application</teletype> objects can be instantiated from outside - the other APIs can only be used after accessing the respective objects throughout the <teletype type="highlighted">Application</teletype> API.</para>
                <snippet location="activeqt/comapp/main.cpp" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/main.cpp" identifier="7"/>
                <para>The main() entry point function creates a <link raw="QApplication" href="qapplication.html" type="class">QApplication</link>, and just enters the event loop if the application has been started by COM. If the application has been started by the user, then the <teletype type="highlighted">Application</teletype> object is created and the object name is set to &quot;From Application&quot;. Then the COM server is started, and the application object is registered with COM. It is now accessible to COM clients through the client-specific APIs.</para>
                <para>Application exiting is controlled explicitly - if COM started the application, then the client code has to call quit(); if the user started the application, then the application terminates when the last window has been closed.</para>
                <para>Finally, the user interface is made visible, and the event loop is started.</para>
                <para>A simple Visual Basic application could now access this Qt application. In VB, start a new &quot;Standard Exe&quot; project and add a project reference to the comappLib type library. Create a form with a listbox &quot;DocumentList&quot;, a static label &quot;DocumentsCount&quot; and a command button &quot;NewDocument&quot;. Finally, implement the code for the form like this:</para>
                <snippet location="activeqt/comapp/doc/snippets/doc_src_examples_activeqt_comapp.qdoc" path="C:/Qt/5.11.1/Src/qtactiveqt/examples/activeqt/comapp/doc/snippets/doc_src_examples_activeqt_comapp.qdoc" identifier="0"/>
                <para>To build the example you must first build the <link raw="QAxServer" href="qaxserver-module.html" type="module">QAxServer</link> library. Then run <teletype type="highlighted">qmake</teletype> and your make tool in <teletype type="highlighted">examples\activeqt\comapp</teletype>.</para>
            </description>
            <page name="activeqt/comapp/main.cpp" href="activeqt-activeqt-comapp-main-cpp.html" status="active" subtype="file" title="" fulltitle="main.cpp Example File" subtitle="activeqt/comapp/main.cpp">
                <description path="" line="0" column="0"/>
            </page>
            <page name="activeqt/comapp/comapp.pro" href="activeqt-activeqt-comapp-comapp-pro.html" status="active" subtype="file" title="" fulltitle="comapp.pro Example File" subtitle="activeqt/comapp/comapp.pro">
                <description path="" line="0" column="0"/>
            </page>
        </page>
    </document>
</WebXML>
