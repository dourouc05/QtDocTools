<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <class threadsafety="unspecified" name="QAbstractItemView" href="qabstractitemview.html" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="61" bases="QAbstractScrollArea" module="QtWidgets" groups="model-view" brief="The basic functionality for item view classes">
            <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="236" column="4">
                <brief>The <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> class provides the basic functionality for item view classes.</brief>
                <para>
                    <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> class is the base class for every standard view that uses a <link raw="QAbstractItemModel" href="qabstractitemmodel.html" type="class">QAbstractItemModel</link>. <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> is an abstract class and cannot itself be instantiated. It provides a standard interface for interoperating with models through the signals and slots mechanism, enabling subclasses to be kept up-to-date with changes to their models. This class provides standard support for keyboard and mouse navigation, viewport scrolling, item editing, and selections. The keyboard navigation implements this functionality:</para>
                <table>
                    <header>
                        <item>
                            <para>Keys</para>
                        </item>
                        <item>
                            <para>Functionality</para>
                        </item>
                    </header>
                    <row>
                        <item>
                            <para>Arrow keys</para>
                        </item>
                        <item>
                            <para>Changes the current item and selects it.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Ctrl+Arrow keys</para>
                        </item>
                        <item>
                            <para>Changes the current item but does not select it.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Shift+Arrow keys</para>
                        </item>
                        <item>
                            <para>Changes the current item and selects it. The previously selected item(s) is not deselected.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Ctr+Space</para>
                        </item>
                        <item>
                            <para>Toggles selection of the current item.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Tab/Backtab</para>
                        </item>
                        <item>
                            <para>Changes the current item to the next/previous item.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Home/End</para>
                        </item>
                        <item>
                            <para>Selects the first/last item in the model.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Page up/Page down</para>
                        </item>
                        <item>
                            <para>Scrolls the rows shown up/down by the number of visible rows in the view.</para>
                        </item>
                    </row>
                    <row>
                        <item>
                            <para>Ctrl+A</para>
                        </item>
                        <item>
                            <para>Selects all items in the model.</para>
                        </item>
                    </row>
                </table>
                <para>Note that the above table assumes that the <link raw="selectionMode" href="qabstractitemview.html#selectionMode-prop" type="property" getter="QAbstractItemView::selectionMode()">selection mode</link> allows the operations. For instance, you cannot select items if the selection mode is <link raw="QAbstractItemView::NoSelection" href="qabstractitemview.html#SelectionMode-enum" type="enum" enum="QAbstractItemView::SelectionMode">QAbstractItemView::NoSelection</link>.</para>
                <para>The <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> class is one of the <link raw="Model/View Classes" href="model-view-programming.html#model-view-classes" type="page" page="Model/View Programming">Model/View Classes</link> and is part of Qt's <link raw="Model/View Programming" href="model-view-programming.html" type="page" page="Model/View Programming">model/view framework</link>.</para>
                <para>The view classes that inherit <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> only need to implement their own view-specific functionality, such as drawing items, returning the geometry of items, finding items, etc.</para>
                <para>
                    <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> provides common slots such as <link raw="edit()" href="qabstractitemview.html#edit" type="function">edit()</link> and <link raw="setCurrentIndex()" href="qabstractitemview.html#setCurrentIndex" type="function">setCurrentIndex()</link>. Many protected slots are also provided, including <link raw="dataChanged()" href="qabstractitemview.html#dataChanged" type="function">dataChanged()</link>, <link raw="rowsInserted()" href="qabstractitemview.html#rowsInserted" type="function">rowsInserted()</link>, <link raw="rowsAboutToBeRemoved()" href="qabstractitemview.html#rowsAboutToBeRemoved" type="function">rowsAboutToBeRemoved()</link>, <link raw="selectionChanged()" href="qabstractitemview.html#selectionChanged" type="function">selectionChanged()</link>, and <link raw="currentChanged()" href="qabstractitemview.html#currentChanged" type="function">currentChanged()</link>.</para>
                <para>The root item is returned by <link raw="rootIndex()" href="qabstractitemview.html#rootIndex" type="function">rootIndex()</link>, and the current item by <link raw="currentIndex()" href="qabstractitemview.html#currentIndex" type="function">currentIndex()</link>. To make sure that an item is visible use <link raw="scrollTo()" href="qabstractitemview.html#scrollTo" type="function">scrollTo()</link>.</para>
                <para>Some of <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link>'s functions are concerned with scrolling, for example <link raw="setHorizontalScrollMode()" href="qabstractitemview.html#horizontalScrollMode-prop" type="function">setHorizontalScrollMode()</link> and <link raw="setVerticalScrollMode()" href="qabstractitemview.html#verticalScrollMode-prop" type="function">setVerticalScrollMode()</link>. To set the range of the scroll bars, you can, for example, reimplement the view's <link raw="resizeEvent()" href="qabstractitemview.html#resizeEvent" type="function">resizeEvent()</link> function:</para>
                <snippet location="code/src_gui_itemviews_qabstractitemview.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/widgets/doc/snippets/code/src_gui_itemviews_qabstractitemview.cpp" identifier="0"/>
                <para>Note that the range is not updated until the widget is shown.</para>
                <para>Several other functions are concerned with selection control; for example <link raw="setSelectionMode()" href="qabstractitemview.html#selectionMode-prop" type="function">setSelectionMode()</link>, and <link raw="setSelectionBehavior()" href="qabstractitemview.html#selectionBehavior-prop" type="function">setSelectionBehavior()</link>. This class provides a default selection model to work with (<link raw="selectionModel()" href="qabstractitemview.html#selectionModel" type="function">selectionModel()</link>), but this can be replaced by using <link raw="setSelectionModel()" href="qabstractitemview.html#setSelectionModel" type="function">setSelectionModel()</link> with an instance of <link raw="QItemSelectionModel" href="qitemselectionmodel.html" type="class">QItemSelectionModel</link>.</para>
                <para>For complete control over the display and editing of items you can specify a delegate with <link raw="setItemDelegate()" href="qabstractitemview.html#setItemDelegate" type="function">setItemDelegate()</link>.</para>
                <para>
                    <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> provides a lot of protected functions. Some are concerned with editing, for example, <link raw="edit()" href="qabstractitemview.html#edit" type="function">edit()</link>, and <link raw="commitData()" href="qabstractitemview.html#commitData" type="function">commitData()</link>, whilst others are keyboard and mouse event handlers.</para>
                <para>
                    <bold>Note:</bold> If you inherit <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> and intend to update the contents of the viewport, you should use viewport-&gt;<link raw="update()" href="qabstractitemview.html#update" type="function">update()</link> instead of <link raw="QWidget::update()" href="qwidget.html#update" type="function">update()</link> as all painting operations take place on the viewport.</para>
                <see-also>
                    <link raw="View Classes" href="model-view-programming.html#view-classes" type="page" page="Model/View Programming">View Classes</link>
                    <link raw="Model/View Programming" href="model-view-programming.html" type="page" page="Model/View Programming">Model/View Programming</link>
                    <link raw="QAbstractItemModel" href="qabstractitemmodel.html" type="class">QAbstractItemModel</link>
                    <link raw="Chart Example" href="qtwidgets-itemviews-chart-example.html" type="page" page="Chart Example">Chart Example</link>
                </see-also>
            </description>
            <variable threadsafety="unspecified" name="staticMetaObject" fullname="QAbstractItemView::staticMetaObject" href="qabstractitemview.html#staticMetaObject-var" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" type="const QMetaObject" static="true">
                <description path="" line="0" column="0"/>
            </variable>
            <function threadsafety="unspecified" name="metaObject" fullname="QAbstractItemView::metaObject" href="qabstractitemview.html#metaObject" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * metaObject() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_metacast" fullname="QAbstractItemView::qt_metacast" href="qabstractitemview.html#qt_metacast" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * qt_metacast(const char *)">
                <parameter type="const char *" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_metacall" fullname="QAbstractItemView::qt_metacall" href="qabstractitemview.html#qt_metacall" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int qt_metacall(QMetaObject::Call , int , void **)">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="tr" fullname="QAbstractItemView::tr" href="qabstractitemview.html#tr" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString tr(const char *s, const char *c, int n)">
                <parameter type="const char *" name="s" default=""/>
                <parameter type="const char *" name="c" default="Q_OBJECT"/>
                <parameter type="int" name="n" default="Q_OBJECT"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="trUtf8" fullname="QAbstractItemView::trUtf8" href="qabstractitemview.html#trUtf8" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString trUtf8(const char *s, const char *c, int n)">
                <parameter type="const char *" name="s" default=""/>
                <parameter type="const char *" name="c" default="Q_OBJECT"/>
                <parameter type="int" name="n" default="Q_OBJECT"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_static_metacall" fullname="QAbstractItemView::qt_static_metacall" href="qabstractitemview.html#qt_static_metacall" status="active" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call , int , void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <class threadsafety="unspecified" name="QPrivateSignal" fullname="QAbstractItemView::QPrivateSignal" href="qabstractitemview-qprivatesignal.html" status="active" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="63">
                <description path="" line="0" column="0"/>
            </class>
            <property threadsafety="unspecified" name="autoScroll" fullname="QAbstractItemView::autoScroll" href="qabstractitemview.html#autoScroll-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="64" type="bool" brief="Whether autoscrolling in drag move events is enabled">
                <getter name="hasAutoScroll"/>
                <setter name="setAutoScroll"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1365" column="4">
                    <brief>This property holds whether autoscrolling in drag move events is enabled.</brief>
                    <para>If this property is set to true (the default), the <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> automatically scrolls the contents of the view if the user drags within 16 pixels of the viewport edge. If the current item changes, then the view will scroll automatically to ensure that the current item is fully visible.</para>
                    <para>This property only works if the viewport accepts drops. Autoscroll is switched off by setting this property to false.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="autoScrollMargin" fullname="QAbstractItemView::autoScrollMargin" href="qabstractitemview.html#autoScrollMargin-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="65" since="4.4" type="int" brief="The size of the area when auto scrolling is triggered">
                <getter name="autoScrollMargin"/>
                <setter name="setAutoScrollMargin"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1391" column="4">
                    <brief>This property holds the size of the area when auto scrolling is triggered.</brief>
                    <para>This property controls the size of the area at the edge of the viewport that triggers autoscrolling. The default value is 16 pixels.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="editTriggers" fullname="QAbstractItemView::editTriggers" href="qabstractitemview.html#editTriggers-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="66" type="EditTriggers" brief="Which actions will initiate item editing">
                <getter name="editTriggers"/>
                <setter name="setEditTriggers"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1233" column="4">
                    <brief>This property holds which actions will initiate item editing.</brief>
                    <para>This property is a selection of flags defined by <link raw="EditTrigger" href="qabstractitemview.html#EditTrigger-enum" type="enum" enum="QAbstractItemView::EditTrigger">EditTrigger</link>, combined using the OR operator. The view will only initiate the editing of an item if the action performed is set in this property.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="tabKeyNavigation" fullname="QAbstractItemView::tabKeyNavigation" href="qabstractitemview.html#tabKeyNavigation-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="67" type="bool" brief="Whether item navigation with tab and backtab is enabled">
                <getter name="tabKeyNavigation"/>
                <setter name="setTabKeyNavigation"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1411" column="4">
                    <brief>This property holds whether item navigation with tab and backtab is enabled..</brief>
                </description>
            </property>
            <property threadsafety="unspecified" name="showDropIndicator" fullname="QAbstractItemView::showDropIndicator" href="qabstractitemview.html#showDropIndicator-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="69" type="bool" brief="Whether the drop indicator is shown when dragging items and dropping">
                <getter name="showDropIndicator"/>
                <setter name="setDropIndicatorShown"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1438" column="4">
                    <brief>This property holds whether the drop indicator is shown when dragging items and dropping..</brief>
                    <see-also>
                        <link raw="dragEnabled" href="qabstractitemview.html#dragEnabled-prop" type="property" getter="QAbstractItemView::dragEnabled()">dragEnabled</link>
                        <link raw="DragDropMode" href="qabstractitemview.html#DragDropMode-enum" type="enum" enum="QAbstractItemView::DragDropMode">DragDropMode</link>
                        <link raw="dragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" type="property" getter="QAbstractItemView::dragDropOverwriteMode()">dragDropOverwriteMode</link>
                        <link raw="acceptDrops" href="qwidget.html#acceptDrops-prop" type="property" getter="QWidget::acceptDrops()">acceptDrops</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="dragEnabled" fullname="QAbstractItemView::dragEnabled" href="qabstractitemview.html#dragEnabled-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="70" type="bool" brief="Whether the view supports dragging of its own items">
                <getter name="dragEnabled"/>
                <setter name="setDragEnabled"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1457" column="4">
                    <brief>This property holds whether the view supports dragging of its own items.</brief>
                    <see-also>
                        <link raw="showDropIndicator" href="qabstractitemview.html#showDropIndicator-prop" type="property" getter="QAbstractItemView::showDropIndicator()">showDropIndicator</link>
                        <link raw="DragDropMode" href="qabstractitemview.html#DragDropMode-enum" type="enum" enum="QAbstractItemView::DragDropMode">DragDropMode</link>
                        <link raw="dragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" type="property" getter="QAbstractItemView::dragDropOverwriteMode()">dragDropOverwriteMode</link>
                        <link raw="acceptDrops" href="qwidget.html#acceptDrops-prop" type="property" getter="QWidget::acceptDrops()">acceptDrops</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="dragDropOverwriteMode" fullname="QAbstractItemView::dragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="71" since="4.2" type="bool" brief="The view's drag and drop behavior">
                <getter name="dragDropOverwriteMode"/>
                <setter name="setDragDropOverwriteMode"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1331" column="4">
                    <brief>This property holds the view's drag and drop behavior.</brief>
                    <para>If its value is <teletype type="highlighted">true</teletype>, the selected data will overwrite the existing item data when dropped, while moving the data will clear the item. If its value is <teletype type="highlighted">false</teletype>, the selected data will be inserted as a new item when the data is dropped. When the data is moved, the item is removed as well.</para>
                    <para>The default value is <teletype type="highlighted">false</teletype>, as in the <link raw="QListView" href="qlistview.html" type="class">QListView</link> and <link raw="QTreeView" href="qtreeview.html" type="class">QTreeView</link> subclasses. In the <link raw="QTableView" href="qtableview.html" type="class">QTableView</link> subclass, on the other hand, the property has been set to <teletype type="highlighted">true</teletype>.</para>
                    <para>Note: This is not intended to prevent overwriting of items. The model's implementation of flags() should do that by not returning <link raw="Qt::ItemIsDropEnabled" href="qt.html#ItemFlag-enum" type="enum" enum="Qt::ItemFlag">Qt::ItemIsDropEnabled</link>.</para>
                    <see-also>
                        <link raw="dragDropMode" href="qabstractitemview.html#dragDropMode-prop" type="property" getter="QAbstractItemView::dragDropMode()">dragDropMode</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="dragDropMode" fullname="QAbstractItemView::dragDropMode" href="qabstractitemview.html#dragDropMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="72" since="4.2" type="DragDropMode" brief="The drag and drop event the view will act upon">
                <getter name="dragDropMode"/>
                <setter name="setDragDropMode"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1496" column="4">
                    <brief>This property holds the drag and drop event the view will act upon.</brief>
                    <see-also>
                        <link raw="showDropIndicator" href="qabstractitemview.html#showDropIndicator-prop" type="property" getter="QAbstractItemView::showDropIndicator()">showDropIndicator</link>
                        <link raw="dragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" type="property" getter="QAbstractItemView::dragDropOverwriteMode()">dragDropOverwriteMode</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="defaultDropAction" fullname="QAbstractItemView::defaultDropAction" href="qabstractitemview.html#defaultDropAction-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="73" since="4.6" type="Qt::DropAction" brief="The drop action that will be used by default in QAbstractItemView::drag()">
                <getter name="defaultDropAction"/>
                <setter name="setDefaultDropAction"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1534" column="4">
                    <brief>This property holds the drop action that will be used by default in QAbstractItemView::drag().</brief>
                    <para>If the property is not set, the drop action is CopyAction when the supported actions support CopyAction.</para>
                    <see-also>
                        <link raw="showDropIndicator" href="qabstractitemview.html#showDropIndicator-prop" type="property" getter="QAbstractItemView::showDropIndicator()">showDropIndicator</link>
                        <link raw="dragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" type="property" getter="QAbstractItemView::dragDropOverwriteMode()">dragDropOverwriteMode</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="alternatingRowColors" fullname="QAbstractItemView::alternatingRowColors" href="qabstractitemview.html#alternatingRowColors-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="75" type="bool" brief="Whether to draw the background using alternating colors">
                <getter name="alternatingRowColors"/>
                <setter name="setAlternatingRowColors"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1558" column="4">
                    <brief>This property holds whether to draw the background using alternating colors.</brief>
                    <para>If this property is <teletype type="highlighted">true</teletype>, the item background will be drawn using <link raw="QPalette::Base" href="qpalette.html#ColorRole-enum" type="enum" enum="QPalette::ColorRole">QPalette::Base</link> and <link raw="QPalette::AlternateBase" href="qpalette.html#ColorRole-enum" type="enum" enum="QPalette::ColorRole">QPalette::AlternateBase</link>; otherwise the background will be drawn using the <link raw="QPalette::Base" href="qpalette.html#ColorRole-enum" type="enum" enum="QPalette::ColorRole">QPalette::Base</link> color.</para>
                    <para>By default, this property is <teletype type="highlighted">false</teletype>.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="selectionMode" fullname="QAbstractItemView::selectionMode" href="qabstractitemview.html#selectionMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="76" type="SelectionMode" brief="Which selection mode the view operates in">
                <getter name="selectionMode"/>
                <setter name="setSelectionMode"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1024" column="4">
                    <brief>This property holds which selection mode the view operates in.</brief>
                    <para>This property controls whether the user can select one or many items and, in many-item selections, whether the selection must be a continuous range of items.</para>
                    <see-also>
                        <link raw="SelectionMode" href="qabstractitemview.html#SelectionMode-enum" type="enum" enum="QAbstractItemView::SelectionMode">SelectionMode</link>
                        <link raw="SelectionBehavior" href="qabstractitemview.html#SelectionBehavior-enum" type="enum" enum="QAbstractItemView::SelectionBehavior">SelectionBehavior</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="selectionBehavior" fullname="QAbstractItemView::selectionBehavior" href="qabstractitemview.html#selectionBehavior-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="77" type="SelectionBehavior" brief="Which selection behavior the view uses">
                <getter name="selectionBehavior"/>
                <setter name="setSelectionBehavior"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1046" column="4">
                    <brief>This property holds which selection behavior the view uses.</brief>
                    <para>This property holds whether selections are done in terms of single items, rows or columns.</para>
                    <see-also>
                        <link raw="SelectionMode" href="qabstractitemview.html#SelectionMode-enum" type="enum" enum="QAbstractItemView::SelectionMode">SelectionMode</link>
                        <link raw="SelectionBehavior" href="qabstractitemview.html#SelectionBehavior-enum" type="enum" enum="QAbstractItemView::SelectionBehavior">SelectionBehavior</link>
                    </see-also>
                </description>
            </property>
            <property threadsafety="unspecified" name="iconSize" fullname="QAbstractItemView::iconSize" href="qabstractitemview.html#iconSize-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="78" type="QSize" brief="The size of items' icons">
                <getter name="iconSize"/>
                <setter name="setIconSize"/>
                <notifier name="iconSizeChanged"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1582" column="4">
                    <brief>This property holds the size of items' icons.</brief>
                    <para>Setting this property when the view is visible will cause the items to be laid out again.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="textElideMode" fullname="QAbstractItemView::textElideMode" href="qabstractitemview.html#textElideMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="79" type="Qt::TextElideMode" brief="The position of the &quot;...&quot; in elided text">
                <getter name="textElideMode"/>
                <setter name="setTextElideMode"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1605" column="4">
                    <brief>This property holds the position of the &quot;...&quot; in elided text..</brief>
                    <para>The default value for all item views is <link raw="Qt::ElideRight" href="qt.html#TextElideMode-enum" type="enum" enum="Qt::TextElideMode">Qt::ElideRight</link>.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="verticalScrollMode" fullname="QAbstractItemView::verticalScrollMode" href="qabstractitemview.html#verticalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="80" since="4.2" type="ScrollMode" brief="How the view scrolls its contents in the vertical direction">
                <getter name="verticalScrollMode"/>
                <setter name="setVerticalScrollMode"/>
                <resetter name="resetVerticalScrollMode"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1254" column="4">
                    <brief>This property holds how the view scrolls its contents in the vertical direction.</brief>
                    <para>This property controls how the view scroll its contents vertically. Scrolling can be done either per pixel or per item. Its default value comes from the style via the <link raw="QStyle::SH_ItemView_ScrollMode" href="qstyle.html#StyleHint-enum" type="enum" enum="QStyle::StyleHint">QStyle::SH_ItemView_ScrollMode</link> style hint.</para>
                </description>
            </property>
            <property threadsafety="unspecified" name="horizontalScrollMode" fullname="QAbstractItemView::horizontalScrollMode" href="qabstractitemview.html#horizontalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="81" since="4.2" type="ScrollMode" brief="How the view scrolls its contents in the horizontal direction">
                <getter name="horizontalScrollMode"/>
                <setter name="setHorizontalScrollMode"/>
                <resetter name="resetHorizontalScrollMode"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1293" column="4">
                    <brief>This property holds how the view scrolls its contents in the horizontal direction.</brief>
                    <para>This property controls how the view scroll its contents horizontally. Scrolling can be done either per pixel or per item. Its default value comes from the style via the <link raw="QStyle::SH_ItemView_ScrollMode" href="qstyle.html#StyleHint-enum" type="enum" enum="QStyle::StyleHint">QStyle::SH_ItemView_ScrollMode</link> style hint.</para>
                </description>
            </property>
            <enum threadsafety="unspecified" name="SelectionMode" fullname="QAbstractItemView::SelectionMode" href="qabstractitemview.html#SelectionMode-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="84">
                <value name="NoSelection" value="0"/>
                <value name="SingleSelection" value="1"/>
                <value name="MultiSelection" value="2"/>
                <value name="ExtendedSelection" value="3"/>
                <value name="ContiguousSelection" value="4"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="339" column="4">
                    <para>This enum indicates how the view responds to user selections:</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::SingleSelection</term>SingleSelection</definition>
                        <item>
                            <para>When the user selects an item, any already-selected item becomes unselected. It is possible for the user to deselect the selected item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::ContiguousSelection</term>ContiguousSelection</definition>
                        <item>
                            <para>When the user selects an item in the usual way, the selection is cleared and the new item selected. However, if the user presses the Shift key while clicking on an item, all items between the current item and the clicked item are selected or unselected, depending on the state of the clicked item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::ExtendedSelection</term>ExtendedSelection</definition>
                        <item>
                            <para>When the user selects an item in the usual way, the selection is cleared and the new item selected. However, if the user presses the Ctrl key when clicking on an item, the clicked item gets toggled and all other items are left untouched. If the user presses the Shift key while clicking on an item, all items between the current item and the clicked item are selected or unselected, depending on the state of the clicked item. Multiple items can be selected by dragging the mouse over them.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MultiSelection</term>MultiSelection</definition>
                        <item>
                            <para>When the user selects an item in the usual way, the selection status of that item is toggled and the other items are left alone. Multiple items can be toggled by dragging the mouse over them.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::NoSelection</term>NoSelection</definition>
                        <item>
                            <para>Items cannot be selected.</para>
                        </item>
                    </list>
                    <para>The most commonly used modes are  and .</para>
                </description>
            </enum>
            <enum threadsafety="unspecified" name="SelectionBehavior" fullname="QAbstractItemView::SelectionBehavior" href="qabstractitemview.html#SelectionBehavior-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="93">
                <value name="SelectItems" value="0"/>
                <value name="SelectRows" value="1"/>
                <value name="SelectColumns" value="2"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="372" column="4">
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::SelectItems</term>SelectItems</definition>
                        <item>
                            <para>Selecting single items.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::SelectRows</term>SelectRows</definition>
                        <item>
                            <para>Selecting only rows.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::SelectColumns</term>SelectColumns</definition>
                        <item>
                            <para>Selecting only columns.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <enum threadsafety="unspecified" name="ScrollHint" fullname="QAbstractItemView::ScrollHint" href="qabstractitemview.html#ScrollHint-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="100">
                <value name="EnsureVisible" value="0"/>
                <value name="PositionAtTop" value="1"/>
                <value name="PositionAtBottom" value="2"/>
                <value name="PositionAtCenter" value="3"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="380" column="4">
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::EnsureVisible</term>EnsureVisible</definition>
                        <item>
                            <para>Scroll to ensure that the item is visible.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::PositionAtTop</term>PositionAtTop</definition>
                        <item>
                            <para>Scroll to position the item at the top of the viewport.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::PositionAtBottom</term>PositionAtBottom</definition>
                        <item>
                            <para>Scroll to position the item at the bottom of the viewport.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::PositionAtCenter</term>PositionAtCenter</definition>
                        <item>
                            <para>Scroll to position the item at the center of the viewport.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <enum threadsafety="unspecified" name="EditTrigger" fullname="QAbstractItemView::EditTrigger" href="qabstractitemview.html#EditTrigger-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="108" typedef="QAbstractItemView::EditTriggers">
                <value name="NoEditTriggers" value="0"/>
                <value name="CurrentChanged" value="1"/>
                <value name="DoubleClicked" value="2"/>
                <value name="SelectedClicked" value="4"/>
                <value name="EditKeyPressed" value="8"/>
                <value name="AnyKeyPressed" value="16"/>
                <value name="AllEditTriggers" value="31"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="393" column="4">
                    <para>This enum describes actions which will initiate item editing.</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::NoEditTriggers</term>NoEditTriggers</definition>
                        <item>
                            <para>No editing possible.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::CurrentChanged</term>CurrentChanged</definition>
                        <item>
                            <para>Editing start whenever current item changes.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::DoubleClicked</term>DoubleClicked</definition>
                        <item>
                            <para>Editing starts when an item is double clicked.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::SelectedClicked</term>SelectedClicked</definition>
                        <item>
                            <para>Editing starts when clicking on an already selected item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::EditKeyPressed</term>EditKeyPressed</definition>
                        <item>
                            <para>Editing starts when the platform edit key has been pressed over an item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::AnyKeyPressed</term>AnyKeyPressed</definition>
                        <item>
                            <para>Editing starts when any key is pressed over an item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::AllEditTriggers</term>AllEditTriggers</definition>
                        <item>
                            <para>Editing starts for all above actions.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <typedef threadsafety="unspecified" name="EditTriggers" fullname="QAbstractItemView::EditTriggers" href="qabstractitemview.html#EditTrigger-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="118" enum="QAbstractItemView::EditTrigger">
                <description path="" line="0" column="0"/>
            </typedef>
            <enum threadsafety="unspecified" name="ScrollMode" fullname="QAbstractItemView::ScrollMode" href="qabstractitemview.html#ScrollMode-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="121" since="4.2">
                <value name="ScrollPerItem" value="0"/>
                <value name="ScrollPerPixel" value="1"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="442" column="4">
                    <para>Describes how the scrollbar should behave. When setting the scroll mode to  the single step size will adjust automatically unless it was set explicitly using <link raw="QAbstractSlider::setSingleStep()" href="qabstractslider.html#singleStep-prop" type="function">setSingleStep()</link>. The automatic adjustment can be restored by setting the single step size to -1.</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::ScrollPerItem</term>ScrollPerItem</definition>
                        <item>
                            <para>The view will scroll the contents one item at a time.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::ScrollPerPixel</term>ScrollPerPixel</definition>
                        <item>
                            <para>The view will scroll the contents one pixel at a time.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <function threadsafety="unspecified" name="QAbstractItemView" fullname="QAbstractItemView::QAbstractItemView" href="qabstractitemview.html#QAbstractItemView" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="127" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAbstractItemView(QWidget *parent)">
                <parameter type="QWidget *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="617" column="4">
                    <para>Constructs an abstract item view with the given <argument>parent</argument>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="~QAbstractItemView" fullname="QAbstractItemView::~QAbstractItemView" href="qabstractitemview.html#dtor.QAbstractItemView" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="128" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~QAbstractItemView()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="635" column="4">
                    <para>Destroys the view.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="setModel" fullname="QAbstractItemView::setModel" href="qabstractitemview.html#setModel" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="130" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setModel(QAbstractItemModel *model)">
                <parameter type="QAbstractItemModel *" name="model" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="651" column="4">
                    <para>Sets the <argument>model</argument> for the view to present.</para>
                    <para>This function will create and set a new selection model, replacing any model that was previously set with <link raw="setSelectionModel()" href="qabstractitemview.html#setSelectionModel" type="function">setSelectionModel()</link>. However, the old selection model will not be deleted as it may be shared between several views. We recommend that you delete the old selection model if it is no longer required. This is done with the following code:</para>
                    <snippet location="code/src_gui_itemviews_qabstractitemview.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/widgets/doc/snippets/code/src_gui_itemviews_qabstractitemview.cpp" identifier="2"/>
                    <para>If both the old model and the old selection model do not have parents, or if their parents are long-lived objects, it may be preferable to call their <link raw="deleteLater()" href="qobject.html#deleteLater" type="function">deleteLater()</link> functions to explicitly delete them.</para>
                    <para>The view <italic>does not</italic> take ownership of the model unless it is the model's parent object because the model may be shared between many different views.</para>
                    <see-also>
                        <link raw="model()" href="qabstractitemview.html#model" type="function">model()</link>
                        <link raw="selectionModel()" href="qabstractitemview.html#selectionModel" type="function">selectionModel()</link>
                        <link raw="setSelectionModel()" href="qabstractitemview.html#setSelectionModel" type="function">setSelectionModel()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="model" fullname="QAbstractItemView::model" href="qabstractitemview.html#model" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="131" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemModel *" signature="QAbstractItemModel * model() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="753" column="4">
                    <para>Returns the model that this view is presenting.</para>
                    <see-also>
                        <link raw="setModel()" href="qabstractitemview.html#setModel" type="function">setModel()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setSelectionModel" fullname="QAbstractItemView::setSelectionModel" href="qabstractitemview.html#setSelectionModel" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="133" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSelectionModel(QItemSelectionModel *selectionModel)">
                <parameter type="QItemSelectionModel *" name="selectionModel" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="762" column="4">
                    <para>Sets the current selection model to the given <argument>selectionModel</argument>.</para>
                    <para>Note that, if you call <link raw="setModel()" href="qabstractitemview.html#setModel" type="function">setModel()</link> after this function, the given <argument>selectionModel</argument> will be replaced by one created by the view.</para>
                    <para>
                        <bold>Note:</bold> It is up to the application to delete the old selection model if it is no longer needed; i.e., if it is not being used by other views. This will happen automatically when its parent object is deleted. However, if it does not have a parent, or if the parent is a long-lived object, it may be preferable to call its <link raw="deleteLater()" href="qobject.html#deleteLater" type="function">deleteLater()</link> function to explicitly delete it.</para>
                    <see-also>
                        <link raw="selectionModel()" href="qabstractitemview.html#selectionModel" type="function">selectionModel()</link>
                        <link raw="setModel()" href="qabstractitemview.html#setModel" type="function">setModel()</link>
                        <link raw="clearSelection()" href="qabstractitemview.html#clearSelection" type="function">clearSelection()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="selectionModel" fullname="QAbstractItemView::selectionModel" href="qabstractitemview.html#selectionModel" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="134" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QItemSelectionModel *" signature="QItemSelectionModel * selectionModel() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="817" column="4">
                    <para>Returns the current selection model.</para>
                    <see-also>
                        <link raw="setSelectionModel()" href="qabstractitemview.html#setSelectionModel" type="function">setSelectionModel()</link>
                        <link raw="selectedIndexes()" href="qabstractitemview.html#selectedIndexes" type="function">selectedIndexes()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setItemDelegate" fullname="QAbstractItemView::setItemDelegate" href="qabstractitemview.html#setItemDelegate" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="136" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setItemDelegate(QAbstractItemDelegate *delegate)">
                <parameter type="QAbstractItemDelegate *" name="delegate" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="828" column="4">
                    <para>Sets the item delegate for this view and its model to <argument>delegate</argument>. This is useful if you want complete control over the editing and display of items.</para>
                    <para>Any existing delegate will be removed, but not deleted. <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> does not take ownership of <argument>delegate</argument>.</para>
                    <para>
                        <bold>Warning:</bold> You should not share the same instance of a delegate between views. Doing so can cause incorrect or unintuitive editing behavior since each view connected to a given delegate may receive the <link raw="QAbstractItemDelegate::closeEditor()" href="qabstractitemdelegate.html#closeEditor" type="function">closeEditor()</link> signal, and attempt to access, modify or close an editor that has already been closed.</para>
                    <see-also>
                        <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="itemDelegate" fullname="QAbstractItemView::itemDelegate" href="qabstractitemview.html#itemDelegate" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="137" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemDelegate *" signature="QAbstractItemDelegate * itemDelegate() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="871" column="4">
                    <para>Returns the item delegate used by this view and model. This is either one set with <link raw="setItemDelegate()" href="qabstractitemview.html#setItemDelegate" type="function">setItemDelegate()</link>, or the default one.</para>
                    <see-also>
                        <link raw="setItemDelegate()" href="qabstractitemview.html#setItemDelegate" type="function">setItemDelegate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setSelectionMode" fullname="QAbstractItemView::setSelectionMode" href="qabstractitemview.html#selectionMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="139" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="selectionMode" type="void" signature="void setSelectionMode(QAbstractItemView::SelectionMode mode)">
                <parameter type="QAbstractItemView::SelectionMode" name="mode" default=""/>
                <description path="" line="0" column="0">
                    <see-also>selectionMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="selectionMode" fullname="QAbstractItemView::selectionMode" href="qabstractitemview.html#selectionMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="140" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="selectionMode" type="QAbstractItemView::SelectionMode" signature="QAbstractItemView::SelectionMode selectionMode() const">
                <description path="" line="0" column="0">
                    <see-also>setSelectionMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setSelectionBehavior" fullname="QAbstractItemView::setSelectionBehavior" href="qabstractitemview.html#selectionBehavior-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="142" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="selectionBehavior" type="void" signature="void setSelectionBehavior(QAbstractItemView::SelectionBehavior behavior)">
                <parameter type="QAbstractItemView::SelectionBehavior" name="behavior" default=""/>
                <description path="" line="0" column="0">
                    <see-also>selectionBehavior()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="selectionBehavior" fullname="QAbstractItemView::selectionBehavior" href="qabstractitemview.html#selectionBehavior-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="143" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="selectionBehavior" type="QAbstractItemView::SelectionBehavior" signature="QAbstractItemView::SelectionBehavior selectionBehavior() const">
                <description path="" line="0" column="0">
                    <see-also>setSelectionBehavior()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="currentIndex" fullname="QAbstractItemView::currentIndex" href="qabstractitemview.html#currentIndex" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="145" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QModelIndex" signature="QModelIndex currentIndex() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1094" column="4">
                    <para>Returns the model index of the current item.</para>
                    <see-also>
                        <link raw="setCurrentIndex()" href="qabstractitemview.html#setCurrentIndex" type="function">setCurrentIndex()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="rootIndex" fullname="QAbstractItemView::rootIndex" href="qabstractitemview.html#rootIndex" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="146" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QModelIndex" signature="QModelIndex rootIndex() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1157" column="4">
                    <para>Returns the model index of the model's root item. The root item is the parent item to the view's toplevel items. The root can be invalid.</para>
                    <see-also>
                        <link raw="setRootIndex()" href="qabstractitemview.html#setRootIndex" type="function">setRootIndex()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setEditTriggers" fullname="QAbstractItemView::setEditTriggers" href="qabstractitemview.html#editTriggers-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="148" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="editTriggers" type="void" signature="void setEditTriggers(QAbstractItemView::EditTriggers triggers)">
                <parameter type="QAbstractItemView::EditTriggers" name="triggers" default=""/>
                <description path="" line="0" column="0">
                    <see-also>editTriggers()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="editTriggers" fullname="QAbstractItemView::editTriggers" href="qabstractitemview.html#editTriggers-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="149" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="editTriggers" type="QAbstractItemView::EditTriggers" signature="QAbstractItemView::EditTriggers editTriggers() const">
                <description path="" line="0" column="0">
                    <see-also>setEditTriggers()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setVerticalScrollMode" fullname="QAbstractItemView::setVerticalScrollMode" href="qabstractitemview.html#verticalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="151" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="verticalScrollMode" type="void" signature="void setVerticalScrollMode(QAbstractItemView::ScrollMode mode)">
                <parameter type="QAbstractItemView::ScrollMode" name="mode" default=""/>
                <description path="" line="0" column="0">
                    <see-also>verticalScrollMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="verticalScrollMode" fullname="QAbstractItemView::verticalScrollMode" href="qabstractitemview.html#verticalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="152" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="verticalScrollMode" type="QAbstractItemView::ScrollMode" signature="QAbstractItemView::ScrollMode verticalScrollMode() const">
                <description path="" line="0" column="0">
                    <see-also>setVerticalScrollMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="resetVerticalScrollMode" fullname="QAbstractItemView::resetVerticalScrollMode" href="qabstractitemview.html#verticalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="153" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="verticalScrollMode" type="void" signature="void resetVerticalScrollMode()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setHorizontalScrollMode" fullname="QAbstractItemView::setHorizontalScrollMode" href="qabstractitemview.html#horizontalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="155" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="horizontalScrollMode" type="void" signature="void setHorizontalScrollMode(QAbstractItemView::ScrollMode mode)">
                <parameter type="QAbstractItemView::ScrollMode" name="mode" default=""/>
                <description path="" line="0" column="0">
                    <see-also>horizontalScrollMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="horizontalScrollMode" fullname="QAbstractItemView::horizontalScrollMode" href="qabstractitemview.html#horizontalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="156" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="horizontalScrollMode" type="QAbstractItemView::ScrollMode" signature="QAbstractItemView::ScrollMode horizontalScrollMode() const">
                <description path="" line="0" column="0">
                    <see-also>setHorizontalScrollMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="resetHorizontalScrollMode" fullname="QAbstractItemView::resetHorizontalScrollMode" href="qabstractitemview.html#horizontalScrollMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="157" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="horizontalScrollMode" type="void" signature="void resetHorizontalScrollMode()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setAutoScroll" fullname="QAbstractItemView::setAutoScroll" href="qabstractitemview.html#autoScroll-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="159" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoScroll" type="void" signature="void setAutoScroll(bool enable)">
                <parameter type="bool" name="enable" default=""/>
                <description path="" line="0" column="0">
                    <see-also>hasAutoScroll()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="hasAutoScroll" fullname="QAbstractItemView::hasAutoScroll" href="qabstractitemview.html#autoScroll-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="160" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoScroll" type="bool" signature="bool hasAutoScroll() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setAutoScrollMargin" fullname="QAbstractItemView::setAutoScrollMargin" href="qabstractitemview.html#autoScrollMargin-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="162" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoScrollMargin" type="void" signature="void setAutoScrollMargin(int margin)">
                <parameter type="int" name="margin" default=""/>
                <description path="" line="0" column="0">
                    <see-also>autoScrollMargin()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="autoScrollMargin" fullname="QAbstractItemView::autoScrollMargin" href="qabstractitemview.html#autoScrollMargin-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="163" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="autoScrollMargin" type="int" signature="int autoScrollMargin() const">
                <description path="" line="0" column="0">
                    <see-also>setAutoScrollMargin()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setTabKeyNavigation" fullname="QAbstractItemView::setTabKeyNavigation" href="qabstractitemview.html#tabKeyNavigation-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="165" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="tabKeyNavigation" type="void" signature="void setTabKeyNavigation(bool enable)">
                <parameter type="bool" name="enable" default=""/>
                <description path="" line="0" column="0">
                    <see-also>tabKeyNavigation()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="tabKeyNavigation" fullname="QAbstractItemView::tabKeyNavigation" href="qabstractitemview.html#tabKeyNavigation-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="166" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="tabKeyNavigation" type="bool" signature="bool tabKeyNavigation() const">
                <description path="" line="0" column="0">
                    <see-also>setTabKeyNavigation()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setDropIndicatorShown" fullname="QAbstractItemView::setDropIndicatorShown" href="qabstractitemview.html#showDropIndicator-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="169" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="showDropIndicator" type="void" signature="void setDropIndicatorShown(bool enable)">
                <parameter type="bool" name="enable" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="showDropIndicator" fullname="QAbstractItemView::showDropIndicator" href="qabstractitemview.html#showDropIndicator-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="170" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="showDropIndicator" type="bool" signature="bool showDropIndicator() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setDragEnabled" fullname="QAbstractItemView::setDragEnabled" href="qabstractitemview.html#dragEnabled-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="172" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="dragEnabled" type="void" signature="void setDragEnabled(bool enable)">
                <parameter type="bool" name="enable" default=""/>
                <description path="" line="0" column="0">
                    <see-also>dragEnabled()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="dragEnabled" fullname="QAbstractItemView::dragEnabled" href="qabstractitemview.html#dragEnabled-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="173" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="dragEnabled" type="bool" signature="bool dragEnabled() const">
                <description path="" line="0" column="0">
                    <see-also>setDragEnabled()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setDragDropOverwriteMode" fullname="QAbstractItemView::setDragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="175" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="dragDropOverwriteMode" type="void" signature="void setDragDropOverwriteMode(bool overwrite)">
                <parameter type="bool" name="overwrite" default=""/>
                <description path="" line="0" column="0">
                    <see-also>dragDropOverwriteMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="dragDropOverwriteMode" fullname="QAbstractItemView::dragDropOverwriteMode" href="qabstractitemview.html#dragDropOverwriteMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="176" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="dragDropOverwriteMode" type="bool" signature="bool dragDropOverwriteMode() const">
                <description path="" line="0" column="0">
                    <see-also>setDragDropOverwriteMode()</see-also>
                </description>
            </function>
            <enum threadsafety="unspecified" name="DragDropMode" fullname="QAbstractItemView::DragDropMode" href="qabstractitemview.html#DragDropMode-enum" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="178" since="4.2">
                <value name="NoDragDrop" value="0"/>
                <value name="DragOnly" value="1"/>
                <value name="DropOnly" value="2"/>
                <value name="DragDrop" value="3"/>
                <value name="InternalMove" value="4"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1476" column="4">
                    <para>Describes the various drag and drop events the view can act upon. By default the view does not support dragging or dropping (<teletype type="highlighted">NoDragDrop</teletype>).</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::NoDragDrop</term>NoDragDrop</definition>
                        <item>
                            <para>Does not support dragging or dropping.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::DragOnly</term>DragOnly</definition>
                        <item>
                            <para>The view supports dragging of its own items</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::DropOnly</term>DropOnly</definition>
                        <item>
                            <para>The view accepts drops</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::DragDrop</term>DragDrop</definition>
                        <item>
                            <para>The view supports both dragging and dropping</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::InternalMove</term>InternalMove</definition>
                        <item>
                            <para>The view accepts move (<bold>not copy</bold>) operations only from itself.</para>
                        </item>
                    </list>
                    <para>Note that the model used needs to provide support for drag and drop operations.</para>
                    <see-also>
                        <link raw="setDragDropMode()" href="qabstractitemview.html#dragDropMode-prop" type="function">setDragDropMode()</link>
                        <link raw="Using drag and drop with item views" href="model-view-programming.html#using-drag-and-drop-with-item-views" type="page" page="Model/View Programming">Using drag and drop with item views</link>
                    </see-also>
                </description>
            </enum>
            <function threadsafety="unspecified" name="setDragDropMode" fullname="QAbstractItemView::setDragDropMode" href="qabstractitemview.html#dragDropMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="187" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="dragDropMode" type="void" signature="void setDragDropMode(QAbstractItemView::DragDropMode behavior)">
                <parameter type="QAbstractItemView::DragDropMode" name="behavior" default=""/>
                <description path="" line="0" column="0">
                    <see-also>dragDropMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="dragDropMode" fullname="QAbstractItemView::dragDropMode" href="qabstractitemview.html#dragDropMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="188" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="dragDropMode" type="QAbstractItemView::DragDropMode" signature="QAbstractItemView::DragDropMode dragDropMode() const">
                <description path="" line="0" column="0">
                    <see-also>setDragDropMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setDefaultDropAction" fullname="QAbstractItemView::setDefaultDropAction" href="qabstractitemview.html#defaultDropAction-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="190" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="defaultDropAction" type="void" signature="void setDefaultDropAction(Qt::DropAction dropAction)">
                <parameter type="Qt::DropAction" name="dropAction" default=""/>
                <description path="" line="0" column="0">
                    <see-also>defaultDropAction()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="defaultDropAction" fullname="QAbstractItemView::defaultDropAction" href="qabstractitemview.html#defaultDropAction-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="191" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="defaultDropAction" type="Qt::DropAction" signature="Qt::DropAction defaultDropAction() const">
                <description path="" line="0" column="0">
                    <see-also>setDefaultDropAction()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setAlternatingRowColors" fullname="QAbstractItemView::setAlternatingRowColors" href="qabstractitemview.html#alternatingRowColors-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="194" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="alternatingRowColors" type="void" signature="void setAlternatingRowColors(bool enable)">
                <parameter type="bool" name="enable" default=""/>
                <description path="" line="0" column="0">
                    <see-also>alternatingRowColors()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="alternatingRowColors" fullname="QAbstractItemView::alternatingRowColors" href="qabstractitemview.html#alternatingRowColors-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="195" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="alternatingRowColors" type="bool" signature="bool alternatingRowColors() const">
                <description path="" line="0" column="0">
                    <see-also>setAlternatingRowColors()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setIconSize" fullname="QAbstractItemView::setIconSize" href="qabstractitemview.html#iconSize-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="197" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconSize" type="void" signature="void setIconSize(const QSize &amp;size)">
                <parameter type="const QSize &amp;" name="size" default=""/>
                <description path="" line="0" column="0">
                    <see-also>iconSize()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="iconSize" fullname="QAbstractItemView::iconSize" href="qabstractitemview.html#iconSize-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="198" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconSize" type="QSize" signature="QSize iconSize() const">
                <description path="" line="0" column="0">
                    <see-also>setIconSize()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setTextElideMode" fullname="QAbstractItemView::setTextElideMode" href="qabstractitemview.html#textElideMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="200" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="textElideMode" type="void" signature="void setTextElideMode(Qt::TextElideMode mode)">
                <parameter type="Qt::TextElideMode" name="mode" default=""/>
                <description path="" line="0" column="0">
                    <see-also>textElideMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="textElideMode" fullname="QAbstractItemView::textElideMode" href="qabstractitemview.html#textElideMode-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="201" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="textElideMode" type="Qt::TextElideMode" signature="Qt::TextElideMode textElideMode() const">
                <description path="" line="0" column="0">
                    <see-also>setTextElideMode()</see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="keyboardSearch" fullname="QAbstractItemView::keyboardSearch" href="qabstractitemview.html#keyboardSearch" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="203" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void keyboardSearch(const QString &amp;search)">
                <parameter type="const QString &amp;" name="search" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2976" column="4">
                    <para>Moves to and selects the item best matching the string <argument>search</argument>. If no item is found nothing happens.</para>
                    <para>In the default implementation, the search is reset if <argument>search</argument> is empty, or the time interval since the last search has exceeded <link raw="QApplication::keyboardInputInterval()" href="qapplication.html#keyboardInputInterval-prop" type="function">QApplication::keyboardInputInterval()</link>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="visualRect" fullname="QAbstractItemView::visualRect" href="qabstractitemview.html#visualRect" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="205" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QRect" signature="QRect visualRect(const QModelIndex &amp;index) const = 0">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="scrollTo" fullname="QAbstractItemView::scrollTo" href="qabstractitemview.html#scrollTo" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="206" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void scrollTo(const QModelIndex &amp;index, QAbstractItemView::ScrollHint hint) = 0">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <parameter type="QAbstractItemView::ScrollHint" name="hint" default="EnsureVisible"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="indexAt" fullname="QAbstractItemView::indexAt" href="qabstractitemview.html#indexAt" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="207" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QModelIndex" signature="QModelIndex indexAt(const QPoint &amp;point) const = 0">
                <parameter type="const QPoint &amp;" name="point" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="sizeHintForIndex" fullname="QAbstractItemView::sizeHintForIndex" href="qabstractitemview.html#sizeHintForIndex" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="209" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QSize" signature="QSize sizeHintForIndex(const QModelIndex &amp;index) const">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3054" column="4">
                    <para>Returns the size hint for the item with the specified <argument>index</argument> or an invalid size for invalid indexes.</para>
                    <see-also>
                        <link raw="sizeHintForRow()" href="qabstractitemview.html#sizeHintForRow" type="function">sizeHintForRow()</link>
                        <link raw="sizeHintForColumn()" href="qabstractitemview.html#sizeHintForColumn" type="function">sizeHintForColumn()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="sizeHintForRow" fullname="QAbstractItemView::sizeHintForRow" href="qabstractitemview.html#sizeHintForRow" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="210" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int sizeHintForRow(int row) const">
                <parameter type="int" name="row" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3068" column="4">
                    <para>Returns the height size hint for the specified <argument>row</argument> or -1 if there is no model.</para>
                    <para>The returned height is calculated using the size hints of the given <argument>row</argument>'s items, i.e. the returned value is the maximum height among the items. Note that to control the height of a row, you must reimplement the <link raw="QAbstractItemDelegate::sizeHint()" href="qabstractitemdelegate.html#sizeHint" type="function">QAbstractItemDelegate::sizeHint()</link> function.</para>
                    <para>This function is used in views with a vertical header to find the size hint for a header section based on the contents of the given <argument>row</argument>.</para>
                    <see-also>
                        <link raw="sizeHintForColumn()" href="qabstractitemview.html#sizeHintForColumn" type="function">sizeHintForColumn()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="sizeHintForColumn" fullname="QAbstractItemView::sizeHintForColumn" href="qabstractitemview.html#sizeHintForColumn" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="211" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int sizeHintForColumn(int column) const">
                <parameter type="int" name="column" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3106" column="4">
                    <para>Returns the width size hint for the specified <argument>column</argument> or -1 if there is no model.</para>
                    <para>This function is used in views with a horizontal header to find the size hint for a header section based on the contents of the given <argument>column</argument>.</para>
                    <see-also>
                        <link raw="sizeHintForRow()" href="qabstractitemview.html#sizeHintForRow" type="function">sizeHintForRow()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="openPersistentEditor" fullname="QAbstractItemView::openPersistentEditor" href="qabstractitemview.html#openPersistentEditor" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="213" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void openPersistentEditor(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3136" column="4">
                    <para>Opens a persistent editor on the item at the given <argument>index</argument>. If no editor exists, the delegate will create a new editor.</para>
                    <see-also>
                        <link raw="closePersistentEditor()" href="qabstractitemview.html#closePersistentEditor" type="function">closePersistentEditor()</link>
                        <link raw="isPersistentEditorOpen()" href="qabstractitemview.html#isPersistentEditorOpen" type="function">isPersistentEditorOpen()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="closePersistentEditor" fullname="QAbstractItemView::closePersistentEditor" href="qabstractitemview.html#closePersistentEditor" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="214" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void closePersistentEditor(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3156" column="4">
                    <para>Closes the persistent editor for the item at the given <argument>index</argument>.</para>
                    <see-also>
                        <link raw="openPersistentEditor()" href="qabstractitemview.html#openPersistentEditor" type="function">openPersistentEditor()</link>
                        <link raw="isPersistentEditorOpen()" href="qabstractitemview.html#isPersistentEditorOpen" type="function">isPersistentEditorOpen()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="isPersistentEditorOpen" fullname="QAbstractItemView::isPersistentEditorOpen" href="qabstractitemview.html#isPersistentEditorOpen" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="215" since="5.10" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isPersistentEditorOpen(const QModelIndex &amp;index) const">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3173" column="4">
                    <para>Returns whether a persistent editor is open for the item at index <argument>index</argument>.</para>
                    <see-also>
                        <link raw="openPersistentEditor()" href="qabstractitemview.html#openPersistentEditor" type="function">openPersistentEditor()</link>
                        <link raw="closePersistentEditor()" href="qabstractitemview.html#closePersistentEditor" type="function">closePersistentEditor()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setIndexWidget" fullname="QAbstractItemView::setIndexWidget" href="qabstractitemview.html#setIndexWidget" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="217" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setIndexWidget(const QModelIndex &amp;index, QWidget *widget)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <parameter type="QWidget *" name="widget" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3186" column="4">
                    <para>Sets the given <argument>widget</argument> on the item at the given <argument>index</argument>, passing the ownership of the widget to the viewport.</para>
                    <para>If <argument>index</argument> is invalid (e.g., if you pass the root index), this function will do nothing.</para>
                    <para>The given <argument>widget</argument>'s <link raw="QWidget" href="qwidget.html" type="class">autoFillBackground</link> property must be set to true, otherwise the widget's background will be transparent, showing both the model data and the item at the given <argument>index</argument>.</para>
                    <para>If index widget A is replaced with index widget B, index widget A will be deleted. For example, in the code snippet below, the <link raw="QLineEdit" href="qlineedit.html" type="class">QLineEdit</link> object will be deleted.</para>
                    <snippet location="code/src_gui_itemviews_qabstractitemview.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/widgets/doc/snippets/code/src_gui_itemviews_qabstractitemview.cpp" identifier="1"/>
                    <para>This function should only be used to display static content within the visible area corresponding to an item of data. If you want to display custom dynamic content or implement a custom editor widget, subclass <link raw="QItemDelegate" href="qitemdelegate.html" type="class">QItemDelegate</link> instead.</para>
                    <see-also>
                        <link raw="indexWidget()" href="qabstractitemview.html#indexWidget" type="function">indexWidget()</link>
                        <link raw="Delegate Classes" href="model-view-programming.html#delegate-classes" type="page" page="Model/View Programming">Delegate Classes</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="indexWidget" fullname="QAbstractItemView::indexWidget" href="qabstractitemview.html#indexWidget" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="218" since="4.1" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QWidget *" signature="QWidget * indexWidget(const QModelIndex &amp;index) const">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3237" column="4">
                    <para>Returns the widget for the item at the given <argument>index</argument>.</para>
                    <see-also>
                        <link raw="setIndexWidget()" href="qabstractitemview.html#setIndexWidget" type="function">setIndexWidget()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setItemDelegateForRow" fullname="QAbstractItemView::setItemDelegateForRow" href="qabstractitemview.html#setItemDelegateForRow" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="220" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setItemDelegateForRow(int row, QAbstractItemDelegate *delegate)">
                <parameter type="int" name="row" default=""/>
                <parameter type="QAbstractItemDelegate *" name="delegate" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="893" column="4">
                    <para>Sets the given item <argument>delegate</argument> used by this view and model for the given <argument>row</argument>. All items on <argument>row</argument> will be drawn and managed by <argument>delegate</argument> instead of using the default delegate (i.e., <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link>).</para>
                    <para>Any existing row delegate for <argument>row</argument> will be removed, but not deleted. <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> does not take ownership of <argument>delegate</argument>.</para>
                    <para>
                        <bold>Note:</bold> If a delegate has been assigned to both a row and a column, the row delegate (i.e., this delegate) will take precedence and manage the intersecting cell index.</para>
                    <para>
                        <bold>Warning:</bold> You should not share the same instance of a delegate between views. Doing so can cause incorrect or unintuitive editing behavior since each view connected to a given delegate may receive the <link raw="QAbstractItemDelegate::closeEditor()" href="qabstractitemdelegate.html#closeEditor" type="function">closeEditor()</link> signal, and attempt to access, modify or close an editor that has already been closed.</para>
                    <see-also>
                        <link raw="itemDelegateForRow()" href="qabstractitemview.html#itemDelegateForRow" type="function">itemDelegateForRow()</link>
                        <link raw="setItemDelegateForColumn()" href="qabstractitemview.html#setItemDelegateForColumn" type="function">setItemDelegateForColumn()</link>
                        <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="itemDelegateForRow" fullname="QAbstractItemView::itemDelegateForRow" href="qabstractitemview.html#itemDelegateForRow" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="221" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemDelegate *" signature="QAbstractItemDelegate * itemDelegateForRow(int row) const">
                <parameter type="int" name="row" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="939" column="4">
                    <para>Returns the item delegate used by this view and model for the given <argument>row</argument>, or 0 if no delegate has been assigned. You can call <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link> to get a pointer to the current delegate for a given index.</para>
                    <see-also>
                        <link raw="setItemDelegateForRow()" href="qabstractitemview.html#setItemDelegateForRow" type="function">setItemDelegateForRow()</link>
                        <link raw="itemDelegateForColumn()" href="qabstractitemview.html#itemDelegateForColumn" type="function">itemDelegateForColumn()</link>
                        <link raw="setItemDelegate()" href="qabstractitemview.html#setItemDelegate" type="function">setItemDelegate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setItemDelegateForColumn" fullname="QAbstractItemView::setItemDelegateForColumn" href="qabstractitemview.html#setItemDelegateForColumn" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="223" since="4.2" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setItemDelegateForColumn(int column, QAbstractItemDelegate *delegate)">
                <parameter type="int" name="column" default=""/>
                <parameter type="QAbstractItemDelegate *" name="delegate" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="954" column="4">
                    <para>Sets the given item <argument>delegate</argument> used by this view and model for the given <argument>column</argument>. All items on <argument>column</argument> will be drawn and managed by <argument>delegate</argument> instead of using the default delegate (i.e., <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link>).</para>
                    <para>Any existing column delegate for <argument>column</argument> will be removed, but not deleted. <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link> does not take ownership of <argument>delegate</argument>.</para>
                    <para>
                        <bold>Note:</bold> If a delegate has been assigned to both a row and a column, the row delegate will take precedence and manage the intersecting cell index.</para>
                    <para>
                        <bold>Warning:</bold> You should not share the same instance of a delegate between views. Doing so can cause incorrect or unintuitive editing behavior since each view connected to a given delegate may receive the <link raw="QAbstractItemDelegate::closeEditor()" href="qabstractitemdelegate.html#closeEditor" type="function">closeEditor()</link> signal, and attempt to access, modify or close an editor that has already been closed.</para>
                    <see-also>
                        <link raw="itemDelegateForColumn()" href="qabstractitemview.html#itemDelegateForColumn" type="function">itemDelegateForColumn()</link>
                        <link raw="setItemDelegateForRow()" href="qabstractitemview.html#setItemDelegateForRow" type="function">setItemDelegateForRow()</link>
                        <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="itemDelegateForColumn" fullname="QAbstractItemView::itemDelegateForColumn" href="qabstractitemview.html#itemDelegateForColumn" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="224" since="4.2" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemDelegate *" signature="QAbstractItemDelegate * itemDelegateForColumn(int column) const">
                <parameter type="int" name="column" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="999" column="4">
                    <para>Returns the item delegate used by this view and model for the given <argument>column</argument>. You can call <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link> to get a pointer to the current delegate for a given index.</para>
                    <see-also>
                        <link raw="setItemDelegateForColumn()" href="qabstractitemview.html#setItemDelegateForColumn" type="function">setItemDelegateForColumn()</link>
                        <link raw="itemDelegateForRow()" href="qabstractitemview.html#itemDelegateForRow" type="function">itemDelegateForRow()</link>
                        <link raw="itemDelegate()" href="qabstractitemview.html#itemDelegate" type="function">itemDelegate()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="itemDelegate" fullname="QAbstractItemView::itemDelegate" href="qabstractitemview.html#itemDelegate-1" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="226" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemDelegate *" signature="QAbstractItemDelegate * itemDelegate(const QModelIndex &amp;index) const">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1014" column="4">
                    <para>Returns the item delegate used by this view and model for the given <argument>index</argument>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="inputMethodQuery" fullname="QAbstractItemView::inputMethodQuery" href="qabstractitemview.html#inputMethodQuery" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="228" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QVariant" signature="QVariant inputMethodQuery(Qt::InputMethodQuery query) const override">
                <parameter type="Qt::InputMethodQuery" name="query" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="882" column="4"/>
            </function>
            <function threadsafety="unspecified" name="reset" fullname="QAbstractItemView::reset" href="qabstractitemview.html#reset" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="233" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void reset()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1106" column="4">
                    <para>Reset the internal state of the view.</para>
                    <para>
                        <bold>Warning:</bold> This function will reset open editors, scroll bar positions, selections, etc. Existing changes will not be committed. If you would like to save your changes when resetting the view, you can reimplement this function, commit your changes, and then call the superclass' implementation.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="setRootIndex" fullname="QAbstractItemView::setRootIndex" href="qabstractitemview.html#setRootIndex" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="234" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setRootIndex(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1140" column="4">
                    <para>Sets the root item to the item at the given <argument>index</argument>.</para>
                    <see-also>
                        <link raw="rootIndex()" href="qabstractitemview.html#rootIndex" type="function">rootIndex()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="doItemsLayout" fullname="QAbstractItemView::doItemsLayout" href="qabstractitemview.html#doItemsLayout" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="235" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void doItemsLayout()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1219" column="4">
                    <para>This function is intended to lay out the items in the view. The default implementation just calls <link raw="updateGeometries()" href="qabstractitemview.html#updateGeometries" type="function">updateGeometries()</link> and updates the viewport.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="selectAll" fullname="QAbstractItemView::selectAll" href="qabstractitemview.html#selectAll" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="236" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void selectAll()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1168" column="4">
                    <para>Selects all items in the view. This function will use the selection behavior set on the view when selecting.</para>
                    <see-also>
                        <link raw="setSelection()" href="qabstractitemview.html#setSelection" type="function">setSelection()</link>
                        <link raw="selectedIndexes()" href="qabstractitemview.html#selectedIndexes" type="function">selectedIndexes()</link>
                        <link raw="clearSelection()" href="qabstractitemview.html#clearSelection" type="function">clearSelection()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="edit" fullname="QAbstractItemView::edit" href="qabstractitemview.html#edit" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="237" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void edit(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1186" column="4">
                    <para>Starts editing the item corresponding to the given <argument>index</argument> if it is editable.</para>
                    <para>Note that this function does not change the current index. Since the current index defines the next and previous items to edit, users may find that keyboard navigation does not work as expected. To provide consistent navigation behavior, call <link raw="setCurrentIndex()" href="qabstractitemview.html#setCurrentIndex" type="function">setCurrentIndex()</link> before this function with the same model index.</para>
                    <see-also>
                        <link raw="QModelIndex::flags()" href="qmodelindex.html#flags" type="function">QModelIndex::flags()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="clearSelection" fullname="QAbstractItemView::clearSelection" href="qabstractitemview.html#clearSelection" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="238" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clearSelection()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1207" column="4">
                    <para>Deselects all selected items. The current index will not be changed.</para>
                    <see-also>
                        <link raw="setSelection()" href="qabstractitemview.html#setSelection" type="function">setSelection()</link>
                        <link raw="selectAll()" href="qabstractitemview.html#selectAll" type="function">selectAll()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setCurrentIndex" fullname="QAbstractItemView::setCurrentIndex" href="qabstractitemview.html#setCurrentIndex" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="239" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setCurrentIndex(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1068" column="4">
                    <para>Sets the current item to be the item at <argument>index</argument>.</para>
                    <para>Unless the current selection mode is <link raw="QAbstractItemView::NoSelection" href="qabstractitemview.html#SelectionMode-enum" type="enum" enum="QAbstractItemView::SelectionMode">NoSelection</link>, the item is also selected. Note that this function also updates the starting position for any new selections the user performs.</para>
                    <para>To set an item as the current item without selecting it, call</para>
                    <para>
                        <teletype type="highlighted">selectionModel()-&gt;setCurrentIndex(index, QItemSelectionModel::NoUpdate);</teletype></para>
                    <see-also>
                        <link raw="currentIndex()" href="qabstractitemview.html#currentIndex" type="function">currentIndex()</link>
                        <link raw="currentChanged()" href="qabstractitemview.html#currentChanged" type="function">currentChanged()</link>
                        <link raw="selectionMode" href="qabstractitemview.html#selectionMode-prop" type="property" getter="QAbstractItemView::selectionMode()">selectionMode</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="scrollToTop" fullname="QAbstractItemView::scrollToTop" href="qabstractitemview.html#scrollToTop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="240" since="4.1" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void scrollToTop()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3252" column="4">
                    <para>Scrolls the view to the top.</para>
                    <see-also>
                        <link raw="scrollTo()" href="qabstractitemview.html#scrollTo" type="function">scrollTo()</link>
                        <link raw="scrollToBottom()" href="qabstractitemview.html#scrollToBottom" type="function">scrollToBottom()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="scrollToBottom" fullname="QAbstractItemView::scrollToBottom" href="qabstractitemview.html#scrollToBottom" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="241" since="4.1" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void scrollToBottom()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3264" column="4">
                    <para>Scrolls the view to the bottom.</para>
                    <see-also>
                        <link raw="scrollTo()" href="qabstractitemview.html#scrollTo" type="function">scrollTo()</link>
                        <link raw="scrollToTop()" href="qabstractitemview.html#scrollToTop" type="function">scrollToTop()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="update" fullname="QAbstractItemView::update" href="qabstractitemview.html#update" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="242" since="4.3" virtual="non" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void update(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3281" column="4">
                    <para>Updates the area occupied by the given <argument>index</argument>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="dataChanged" fullname="QAbstractItemView::dataChanged" href="qabstractitemview.html#dataChanged" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="245" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void dataChanged(const QModelIndex &amp;topLeft, const QModelIndex &amp;bottomRight, const QVector&lt;int&gt; &amp;roles)">
                <parameter type="const QModelIndex &amp;" name="topLeft" default=""/>
                <parameter type="const QModelIndex &amp;" name="bottomRight" default=""/>
                <parameter type="const QVector&lt;int&gt; &amp;" name="roles" default="QVector&lt;int&gt;()"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3300" column="4">
                    <para>This slot is called when items with the given <argument>roles</argument> are changed in the model. The changed items are those from <argument>topLeft</argument> to <argument>bottomRight</argument> inclusive. If just one item is changed <argument>topLeft</argument> == <argument>bottomRight</argument>.</para>
                    <para>The <argument>roles</argument> which have been changed can either be an empty container (meaning everything has changed), or a non-empty container with the subset of roles which have changed.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="rowsInserted" fullname="QAbstractItemView::rowsInserted" href="qabstractitemview.html#rowsInserted" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="246" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void rowsInserted(const QModelIndex &amp;parent, int start, int end)">
                <parameter type="const QModelIndex &amp;" name="parent" default=""/>
                <parameter type="int" name="start" default=""/>
                <parameter type="int" name="end" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3345" column="4">
                    <para>This slot is called when rows are inserted. The new rows are those under the given <argument>parent</argument> from <argument>start</argument> to <argument>end</argument> inclusive. The base class implementation calls fetchMore() on the model to check for more data.</para>
                    <see-also>
                        <link raw="rowsAboutToBeRemoved()" href="qabstractitemview.html#rowsAboutToBeRemoved" type="function">rowsAboutToBeRemoved()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="rowsAboutToBeRemoved" fullname="QAbstractItemView::rowsAboutToBeRemoved" href="qabstractitemview.html#rowsAboutToBeRemoved" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="247" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void rowsAboutToBeRemoved(const QModelIndex &amp;parent, int start, int end)">
                <parameter type="const QModelIndex &amp;" name="parent" default=""/>
                <parameter type="int" name="start" default=""/>
                <parameter type="int" name="end" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3361" column="4">
                    <para>This slot is called when rows are about to be removed. The deleted rows are those under the given <argument>parent</argument> from <argument>start</argument> to <argument>end</argument> inclusive.</para>
                    <see-also>
                        <link raw="rowsInserted()" href="qabstractitemview.html#rowsInserted" type="function">rowsInserted()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="selectionChanged" fullname="QAbstractItemView::selectionChanged" href="qabstractitemview.html#selectionChanged" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="248" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void selectionChanged(const QItemSelection &amp;selected, const QItemSelection &amp;deselected)">
                <parameter type="const QItemSelection &amp;" name="selected" default=""/>
                <parameter type="const QItemSelection &amp;" name="deselected" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3613" column="4">
                    <para>This slot is called when the selection is changed. The previous selection (which may be empty), is specified by <argument>deselected</argument>, and the new selection by <argument>selected</argument>.</para>
                    <see-also>
                        <link raw="setSelection()" href="qabstractitemview.html#setSelection" type="function">setSelection()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="currentChanged" fullname="QAbstractItemView::currentChanged" href="qabstractitemview.html#currentChanged" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="249" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void currentChanged(const QModelIndex &amp;current, const QModelIndex &amp;previous)">
                <parameter type="const QModelIndex &amp;" name="current" default=""/>
                <parameter type="const QModelIndex &amp;" name="previous" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3629" column="4">
                    <para>This slot is called when a new item becomes the current item. The previous current item is specified by the <argument>previous</argument> index, and the new item by the <argument>current</argument> index.</para>
                    <para>If you want to know about changes to items see the <link raw="dataChanged()" href="qabstractitemview.html#dataChanged" type="function">dataChanged()</link> signal.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="updateEditorData" fullname="QAbstractItemView::updateEditorData" href="qabstractitemview.html#updateEditorData" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="250" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateEditorData()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2688" column="4">
                    <para>Updates the data shown in the open editor widgets in the view.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="updateEditorGeometries" fullname="QAbstractItemView::updateEditorGeometries" href="qabstractitemview.html#updateEditorGeometries" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="251" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateEditorGeometries()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2698" column="4">
                    <para>Updates the geometry of the open editor widgets in the view.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="updateGeometries" fullname="QAbstractItemView::updateGeometries" href="qabstractitemview.html#updateGeometries" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="252" since="4.4" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateGeometries()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2747" column="4">
                    <para>Updates the geometry of the child widgets of the view.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="verticalScrollbarAction" fullname="QAbstractItemView::verticalScrollbarAction" href="qabstractitemview.html#verticalScrollbarAction" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="253" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void verticalScrollbarAction(int action)">
                <parameter type="int" name="action" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2786" column="4"/>
            </function>
            <function threadsafety="unspecified" name="horizontalScrollbarAction" fullname="QAbstractItemView::horizontalScrollbarAction" href="qabstractitemview.html#horizontalScrollbarAction" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="254" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void horizontalScrollbarAction(int action)">
                <parameter type="int" name="action" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2794" column="4"/>
            </function>
            <function threadsafety="unspecified" name="verticalScrollbarValueChanged" fullname="QAbstractItemView::verticalScrollbarValueChanged" href="qabstractitemview.html#verticalScrollbarValueChanged" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="255" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void verticalScrollbarValueChanged(int value)">
                <parameter type="int" name="value" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2760" column="4"/>
            </function>
            <function threadsafety="unspecified" name="horizontalScrollbarValueChanged" fullname="QAbstractItemView::horizontalScrollbarValueChanged" href="qabstractitemview.html#horizontalScrollbarValueChanged" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="256" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void horizontalScrollbarValueChanged(int value)">
                <parameter type="int" name="value" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2773" column="4"/>
            </function>
            <function threadsafety="unspecified" name="closeEditor" fullname="QAbstractItemView::closeEditor" href="qabstractitemview.html#closeEditor" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="257" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void closeEditor(QWidget *editor, QAbstractItemDelegate::EndEditHint hint)">
                <parameter type="QWidget *" name="editor" default=""/>
                <parameter type="QAbstractItemDelegate::EndEditHint" name="hint" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2802" column="4">
                    <para>Closes the given <argument>editor</argument>, and releases it. The <argument>hint</argument> is used to specify how the view should respond to the end of the editing operation. For example, the hint may indicate that the next item in the view should be opened for editing.</para>
                    <see-also>
                        <link raw="edit()" href="qabstractitemview.html#edit" type="function">edit()</link>
                        <link raw="commitData()" href="qabstractitemview.html#commitData" type="function">commitData()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="commitData" fullname="QAbstractItemView::commitData" href="qabstractitemview.html#commitData" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="258" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commitData(QWidget *editor)">
                <parameter type="QWidget *" name="editor" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2882" column="4">
                    <para>Commit the data in the <argument>editor</argument> to the model.</para>
                    <see-also>
                        <link raw="closeEditor()" href="qabstractitemview.html#closeEditor" type="function">closeEditor()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="editorDestroyed" fullname="QAbstractItemView::editorDestroyed" href="qabstractitemview.html#editorDestroyed" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="259" virtual="virtual" meta="slot" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void editorDestroyed(QObject *editor)">
                <parameter type="QObject *" name="editor" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2903" column="4">
                    <para>This function is called when the given <argument>editor</argument> has been destroyed.</para>
                    <see-also>
                        <link raw="closeEditor()" href="qabstractitemview.html#closeEditor" type="function">closeEditor()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="pressed" fullname="QAbstractItemView::pressed" href="qabstractitemview.html#pressed" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="262" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void pressed(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="clicked" fullname="QAbstractItemView::clicked" href="qabstractitemview.html#clicked" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="263" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void clicked(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="doubleClicked" fullname="QAbstractItemView::doubleClicked" href="qabstractitemview.html#doubleClicked" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="264" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void doubleClicked(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="activated" fullname="QAbstractItemView::activated" href="qabstractitemview.html#activated" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="266" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void activated(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="entered" fullname="QAbstractItemView::entered" href="qabstractitemview.html#entered" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="267" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void entered(const QModelIndex &amp;index)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="viewportEntered" fullname="QAbstractItemView::viewportEntered" href="qabstractitemview.html#viewportEntered" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="268" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void viewportEntered()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="iconSizeChanged" fullname="QAbstractItemView::iconSizeChanged" href="qabstractitemview.html#iconSize-prop" status="active" access="public" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="270" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" associated-property="iconSize" type="void" signature="void iconSizeChanged(const QSize &amp;size)">
                <parameter type="const QSize &amp;" name="size" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="QAbstractItemView" fullname="QAbstractItemView::QAbstractItemView" href="qabstractitemview.html#QAbstractItemView-1" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="273" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAbstractItemView(QAbstractItemViewPrivate &amp;dd, QWidget *parent)">
                <parameter type="QAbstractItemViewPrivate &amp;" name="dd" default=""/>
                <parameter type="QWidget *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="626" column="4"/>
            </function>
            <function threadsafety="unspecified" name="setHorizontalStepsPerItem" fullname="QAbstractItemView::setHorizontalStepsPerItem" href="qabstractitemview-obsolete.html#setHorizontalStepsPerItem" status="obsolete" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="275" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setHorizontalStepsPerItem(int steps)">
                <parameter type="int" name="steps" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2918" column="4">
                    <para>Sets the horizontal scroll bar's steps per item to <argument>steps</argument>.</para>
                    <para>This is the number of steps used by the horizontal scroll bar to represent the width of an item.</para>
                    <para>Note that if the view has a horizontal header, the item steps will be ignored and the header section size will be used instead.</para>
                    <see-also>
                        <link raw="horizontalStepsPerItem()" href="qabstractitemview-obsolete.html#horizontalStepsPerItem" type="function">horizontalStepsPerItem()</link>
                        <link raw="setVerticalStepsPerItem()" href="qabstractitemview-obsolete.html#setVerticalStepsPerItem" type="function">setVerticalStepsPerItem()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="horizontalStepsPerItem" fullname="QAbstractItemView::horizontalStepsPerItem" href="qabstractitemview-obsolete.html#horizontalStepsPerItem" status="obsolete" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="276" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int horizontalStepsPerItem() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2936" column="4">
                    <para>Returns the horizontal scroll bar's steps per item.</para>
                    <see-also>
                        <link raw="setHorizontalStepsPerItem()" href="qabstractitemview-obsolete.html#setHorizontalStepsPerItem" type="function">setHorizontalStepsPerItem()</link>
                        <link raw="verticalStepsPerItem()" href="qabstractitemview-obsolete.html#verticalStepsPerItem" type="function">verticalStepsPerItem()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setVerticalStepsPerItem" fullname="QAbstractItemView::setVerticalStepsPerItem" href="qabstractitemview-obsolete.html#setVerticalStepsPerItem" status="obsolete" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="277" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setVerticalStepsPerItem(int steps)">
                <parameter type="int" name="steps" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2947" column="4">
                    <para>Sets the vertical scroll bar's steps per item to <argument>steps</argument>.</para>
                    <para>This is the number of steps used by the vertical scroll bar to represent the height of an item.</para>
                    <para>Note that if the view has a vertical header, the item steps will be ignored and the header section size will be used instead.</para>
                    <see-also>
                        <link raw="verticalStepsPerItem()" href="qabstractitemview-obsolete.html#verticalStepsPerItem" type="function">verticalStepsPerItem()</link>
                        <link raw="setHorizontalStepsPerItem()" href="qabstractitemview-obsolete.html#setHorizontalStepsPerItem" type="function">setHorizontalStepsPerItem()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="verticalStepsPerItem" fullname="QAbstractItemView::verticalStepsPerItem" href="qabstractitemview-obsolete.html#verticalStepsPerItem" status="obsolete" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="278" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int verticalStepsPerItem() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2965" column="4">
                    <para>Returns the vertical scroll bar's steps per item.</para>
                    <see-also>
                        <link raw="setVerticalStepsPerItem()" href="qabstractitemview-obsolete.html#setVerticalStepsPerItem" type="function">setVerticalStepsPerItem()</link>
                        <link raw="horizontalStepsPerItem()" href="qabstractitemview-obsolete.html#horizontalStepsPerItem" type="function">horizontalStepsPerItem()</link>
                    </see-also>
                </description>
            </function>
            <enum threadsafety="unspecified" name="CursorAction" fullname="QAbstractItemView::CursorAction" href="qabstractitemview.html#CursorAction-enum" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="280">
                <value name="MoveUp" value="0"/>
                <value name="MoveDown" value="1"/>
                <value name="MoveLeft" value="2"/>
                <value name="MoveRight" value="3"/>
                <value name="MoveHome" value="4"/>
                <value name="MoveEnd" value="5"/>
                <value name="MovePageUp" value="6"/>
                <value name="MovePageDown" value="7"/>
                <value name="MoveNext" value="8"/>
                <value name="MovePrevious" value="9"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="409" column="4">
                    <para>This enum describes the different ways to navigate between items,</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::MoveUp</term>MoveUp</definition>
                        <item>
                            <para>Move to the item above the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MoveDown</term>MoveDown</definition>
                        <item>
                            <para>Move to the item below the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MoveLeft</term>MoveLeft</definition>
                        <item>
                            <para>Move to the item left of the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MoveRight</term>MoveRight</definition>
                        <item>
                            <para>Move to the item right of the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MoveHome</term>MoveHome</definition>
                        <item>
                            <para>Move to the top-left corner item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MoveEnd</term>MoveEnd</definition>
                        <item>
                            <para>Move to the bottom-right corner item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MovePageUp</term>MovePageUp</definition>
                        <item>
                            <para>Move one page up above the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MovePageDown</term>MovePageDown</definition>
                        <item>
                            <para>Move one page down below the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MoveNext</term>MoveNext</definition>
                        <item>
                            <para>Move to the item after the current item.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::MovePrevious</term>MovePrevious</definition>
                        <item>
                            <para>Move to the item before the current item.</para>
                        </item>
                    </list>
                    <see-also>
                        <link raw="moveCursor()" href="qabstractitemview.html#moveCursor" type="function">moveCursor()</link>
                    </see-also>
                </description>
            </enum>
            <function threadsafety="unspecified" name="moveCursor" fullname="QAbstractItemView::moveCursor" href="qabstractitemview.html#moveCursor" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="283" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QModelIndex" signature="QModelIndex moveCursor(QAbstractItemView::CursorAction cursorAction, Qt::KeyboardModifiers modifiers) = 0">
                <parameter type="QAbstractItemView::CursorAction" name="cursorAction" default=""/>
                <parameter type="Qt::KeyboardModifiers" name="modifiers" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="horizontalOffset" fullname="QAbstractItemView::horizontalOffset" href="qabstractitemview.html#horizontalOffset" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="286" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int horizontalOffset() const = 0">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="verticalOffset" fullname="QAbstractItemView::verticalOffset" href="qabstractitemview.html#verticalOffset" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="287" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int verticalOffset() const = 0">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="isIndexHidden" fullname="QAbstractItemView::isIndexHidden" href="qabstractitemview.html#isIndexHidden" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="289" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool isIndexHidden(const QModelIndex &amp;index) const = 0">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="setSelection" fullname="QAbstractItemView::setSelection" href="qabstractitemview.html#setSelection" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="291" virtual="pure" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setSelection(const QRect &amp;rect, QItemSelectionModel::SelectionFlags command) = 0">
                <parameter type="const QRect &amp;" name="rect" default=""/>
                <parameter type="QItemSelectionModel::SelectionFlags" name="command" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="visualRegionForSelection" fullname="QAbstractItemView::visualRegionForSelection" href="qabstractitemview.html#visualRegionForSelection" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="292" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QRegion" signature="QRegion visualRegionForSelection(const QItemSelection &amp;selection) const = 0">
                <parameter type="const QItemSelection &amp;" name="selection" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="selectedIndexes" fullname="QAbstractItemView::selectedIndexes" href="qabstractitemview.html#selectedIndexes" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="293" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QModelIndexList" signature="QModelIndexList selectedIndexes() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2603" column="4">
                    <para>This convenience function returns a list of all selected and non-hidden item indexes in the view. The list contains no duplicates, and is not sorted.</para>
                    <see-also>
                        <link raw="QItemSelectionModel::selectedIndexes()" href="qitemselectionmodel.html#selectedIndexes" type="function">QItemSelectionModel::selectedIndexes()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="edit" fullname="QAbstractItemView::edit" href="qabstractitemview.html#edit-1" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="295" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool edit(const QModelIndex &amp;index, QAbstractItemView::EditTrigger trigger, QEvent *event)">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <parameter type="QAbstractItemView::EditTrigger" name="trigger" default=""/>
                <parameter type="QEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2625" column="4">
                    <para>Starts editing the item at <argument>index</argument>, creating an editor if necessary, and returns <teletype type="highlighted">true</teletype> if the view's <link raw="State" href="qabstractitemview.html#State-enum" type="enum" enum="QAbstractItemView::State">State</link> is now <link raw="EditingState" href="qabstractitemview.html#State-enum" type="enum" enum="QAbstractItemView::State">EditingState</link>; otherwise returns <teletype type="highlighted">false</teletype>.</para>
                    <para>The action that caused the editing process is described by <argument>trigger</argument>, and the associated event is specified by <argument>event</argument>.</para>
                    <para>Editing can be forced by specifying the <argument>trigger</argument> to be <link raw="QAbstractItemView::AllEditTriggers" href="qabstractitemview.html#EditTrigger-enum" type="enum" enum="QAbstractItemView::EditTrigger">QAbstractItemView::AllEditTriggers</link>.</para>
                    <see-also>
                        <link raw="closeEditor()" href="qabstractitemview.html#closeEditor" type="function">closeEditor()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="selectionCommand" fullname="QAbstractItemView::selectionCommand" href="qabstractitemview.html#selectionCommand" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="297" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QItemSelectionModel::SelectionFlags" signature="QItemSelectionModel::SelectionFlags selectionCommand(const QModelIndex &amp;index, const QEvent *event) const">
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <parameter type="const QEvent *" name="event" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3924" column="4">
                    <para>Returns the SelectionFlags to be used when updating a selection with to include the <argument>index</argument> specified. The <argument>event</argument> is a user input event, such as a mouse or keyboard event.</para>
                    <para>Reimplement this function to define your own selection behavior.</para>
                    <see-also>
                        <link raw="setSelection()" href="qabstractitemview.html#setSelection" type="function">setSelection()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="startDrag" fullname="QAbstractItemView::startDrag" href="qabstractitemview.html#startDrag" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="301" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void startDrag(Qt::DropActions supportedActions)">
                <parameter type="Qt::DropActions" name="supportedActions" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3673" column="4">
                    <para>Starts a drag by calling drag-&gt;exec() using the given <argument>supportedActions</argument>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="viewOptions" fullname="QAbstractItemView::viewOptions" href="qabstractitemview.html#viewOptions" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="304" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QStyleOptionViewItem" signature="QStyleOptionViewItem viewOptions() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3705" column="4">
                    <para>Returns a <link raw="QStyleOptionViewItem" href="qstyleoptionviewitem.html" type="class">QStyleOptionViewItem</link> structure populated with the view's palette, font, state, alignments etc.</para>
                </description>
            </function>
            <enum threadsafety="unspecified" name="State" fullname="QAbstractItemView::State" href="qabstractitemview.html#State-enum" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="306">
                <value name="NoState" value="0"/>
                <value name="DraggingState" value="1"/>
                <value name="DragSelectingState" value="2"/>
                <value name="EditingState" value="3"/>
                <value name="ExpandingState" value="4"/>
                <value name="CollapsingState" value="5"/>
                <value name="AnimatingState" value="6"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="427" column="4">
                    <para>Describes the different states the view can be in. This is usually only interesting when reimplementing your own view.</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::NoState</term>NoState</definition>
                        <item>
                            <para>The is the default state.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::DraggingState</term>DraggingState</definition>
                        <item>
                            <para>The user is dragging items.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::DragSelectingState</term>DragSelectingState</definition>
                        <item>
                            <para>The user is selecting items.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::EditingState</term>EditingState</definition>
                        <item>
                            <para>The user is editing an item in a widget editor.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::ExpandingState</term>ExpandingState</definition>
                        <item>
                            <para>The user is opening a branch of items.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::CollapsingState</term>CollapsingState</definition>
                        <item>
                            <para>The user is closing a branch of items.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::AnimatingState</term>AnimatingState</definition>
                        <item>
                            <para>The item view is performing an animation.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <function threadsafety="unspecified" name="state" fullname="QAbstractItemView::state" href="qabstractitemview.html#state" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="316" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemView::State" signature="QAbstractItemView::State state() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3751" column="4">
                    <para>Returns the item view's state.</para>
                    <see-also>
                        <link raw="setState()" href="qabstractitemview.html#setState" type="function">setState()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setState" fullname="QAbstractItemView::setState" href="qabstractitemview.html#setState" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="317" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setState(QAbstractItemView::State state)">
                <parameter type="QAbstractItemView::State" name="state" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3762" column="4">
                    <para>Sets the item view's state to the given <argument>state</argument>.</para>
                    <see-also>
                        <link raw="state()" href="qabstractitemview.html#state" type="function">state()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="scheduleDelayedItemsLayout" fullname="QAbstractItemView::scheduleDelayedItemsLayout" href="qabstractitemview.html#scheduleDelayedItemsLayout" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="319" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void scheduleDelayedItemsLayout()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3773" column="4">
                    <para>Schedules a layout of the items in the view to be executed when the event processing starts.</para>
                    <para>Even if  is called multiple times before events are processed, the view will only do the layout once.</para>
                    <see-also>
                        <link raw="executeDelayedItemsLayout()" href="qabstractitemview.html#executeDelayedItemsLayout" type="function">executeDelayedItemsLayout()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="executeDelayedItemsLayout" fullname="QAbstractItemView::executeDelayedItemsLayout" href="qabstractitemview.html#executeDelayedItemsLayout" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="320" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void executeDelayedItemsLayout()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3788" column="4">
                    <para>Executes the scheduled layouts without waiting for the event processing to begin.</para>
                    <see-also>
                        <link raw="scheduleDelayedItemsLayout()" href="qabstractitemview.html#scheduleDelayedItemsLayout" type="function">scheduleDelayedItemsLayout()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setDirtyRegion" fullname="QAbstractItemView::setDirtyRegion" href="qabstractitemview.html#setDirtyRegion" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="322" since="4.1" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setDirtyRegion(const QRegion &amp;region)">
                <parameter type="const QRegion &amp;" name="region" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3800" column="4">
                    <para>Marks the given <argument>region</argument> as dirty and schedules it to be updated. You only need to call this function if you are implementing your own view subclass.</para>
                    <see-also>
                        <link raw="scrollDirtyRegion()" href="qabstractitemview.html#scrollDirtyRegion" type="function">scrollDirtyRegion()</link>
                        <link raw="dirtyRegionOffset()" href="qabstractitemview.html#dirtyRegionOffset" type="function">dirtyRegionOffset()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="scrollDirtyRegion" fullname="QAbstractItemView::scrollDirtyRegion" href="qabstractitemview.html#scrollDirtyRegion" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="323" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void scrollDirtyRegion(int dx, int dy)">
                <parameter type="int" name="dx" default=""/>
                <parameter type="int" name="dy" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3816" column="4">
                    <para>Prepares the view for scrolling by (<argument>dx</argument>,<argument>dy</argument>) pixels by moving the dirty regions in the opposite direction. You only need to call this function if you are implementing a scrolling viewport in your view subclass.</para>
                    <para>If you implement <link raw="scrollContentsBy()" href="qabstractscrollarea.html#scrollContentsBy" type="function">scrollContentsBy()</link> in a subclass of <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link>, call this function before you call <link raw="QWidget::scroll()" href="qwidget.html#scroll" type="function">QWidget::scroll()</link> on the viewport. Alternatively, just call <link raw="update()" href="qabstractitemview.html#update" type="function">update()</link>.</para>
                    <see-also>
                        <link raw="scrollContentsBy()" href="qabstractscrollarea.html#scrollContentsBy" type="function">scrollContentsBy()</link>
                        <link raw="dirtyRegionOffset()" href="qabstractitemview.html#dirtyRegionOffset" type="function">dirtyRegionOffset()</link>
                        <link raw="setDirtyRegion()" href="qabstractitemview.html#setDirtyRegion" type="function">setDirtyRegion()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="dirtyRegionOffset" fullname="QAbstractItemView::dirtyRegionOffset" href="qabstractitemview.html#dirtyRegionOffset" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="324" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QPoint" signature="QPoint dirtyRegionOffset() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3832" column="4">
                    <para>Returns the offset of the dirty regions in the view.</para>
                    <para>If you use <link raw="scrollDirtyRegion()" href="qabstractitemview.html#scrollDirtyRegion" type="function">scrollDirtyRegion()</link> and implement a <link raw="paintEvent()" href="qabstractscrollarea.html#paintEvent" type="function">paintEvent()</link> in a subclass of <link raw="QAbstractItemView" href="qabstractitemview.html" type="class">QAbstractItemView</link>, you should translate the area given by the paint event with the offset returned from this function.</para>
                    <see-also>
                        <link raw="scrollDirtyRegion()" href="qabstractitemview.html#scrollDirtyRegion" type="function">scrollDirtyRegion()</link>
                        <link raw="setDirtyRegion()" href="qabstractitemview.html#setDirtyRegion" type="function">setDirtyRegion()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="startAutoScroll" fullname="QAbstractItemView::startAutoScroll" href="qabstractitemview.html#startAutoScroll" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="326" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void startAutoScroll()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3847" column="4"/>
            </function>
            <function threadsafety="unspecified" name="stopAutoScroll" fullname="QAbstractItemView::stopAutoScroll" href="qabstractitemview.html#stopAutoScroll" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="327" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void stopAutoScroll()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3855" column="4"/>
            </function>
            <function threadsafety="unspecified" name="doAutoScroll" fullname="QAbstractItemView::doAutoScroll" href="qabstractitemview.html#doAutoScroll" status="internal" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="328" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void doAutoScroll()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="3863" column="4"/>
            </function>
            <function threadsafety="unspecified" name="focusNextPrevChild" fullname="QAbstractItemView::focusNextPrevChild" href="qabstractitemview.html#focusNextPrevChild" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="330" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool focusNextPrevChild(bool next) override">
                <parameter type="bool" name="next" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1623" column="4"/>
            </function>
            <function threadsafety="unspecified" name="event" fullname="QAbstractItemView::event" href="qabstractitemview.html#event" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="331" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool event(QEvent *event) override">
                <parameter type="QEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1638" column="4"/>
            </function>
            <function threadsafety="unspecified" name="viewportEvent" fullname="QAbstractItemView::viewportEvent" href="qabstractitemview.html#viewportEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="332" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool viewportEvent(QEvent *event) override">
                <parameter type="QEvent *" name="event" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="mousePressEvent" fullname="QAbstractItemView::mousePressEvent" href="qabstractitemview.html#mousePressEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="333" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mousePressEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1753" column="4">
                    <para>This function is called with the given <argument>event</argument> when a mouse button is pressed while the cursor is inside the widget. If a valid item is pressed on it is made into the current item. This function emits the <link raw="pressed()" href="qabstractitemview.html#pressed" type="function">pressed()</link> signal.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="mouseMoveEvent" fullname="QAbstractItemView::mouseMoveEvent" href="qabstractitemview.html#mouseMoveEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="334" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mouseMoveEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1819" column="4">
                    <para>This function is called with the given <argument>event</argument> when a mouse move event is sent to the widget. If a selection is in progress and new items are moved over the selection is extended; if a drag is in progress it is continued.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="mouseReleaseEvent" fullname="QAbstractItemView::mouseReleaseEvent" href="qabstractitemview.html#mouseReleaseEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="335" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mouseReleaseEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1890" column="4">
                    <para>This function is called with the given <argument>event</argument> when a mouse button is released, after a mouse press event on the widget. If a user presses the mouse inside your widget and then drags the mouse to another location before releasing the mouse button, your widget receives the release event. The function will emit the <link raw="clicked()" href="qabstractitemview.html#clicked" type="function">clicked()</link> signal if an item was being pressed.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="mouseDoubleClickEvent" fullname="QAbstractItemView::mouseDoubleClickEvent" href="qabstractitemview.html#mouseDoubleClickEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="336" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void mouseDoubleClickEvent(QMouseEvent *event) override">
                <parameter type="QMouseEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1940" column="4">
                    <para>This function is called with the given <argument>event</argument> when a mouse button is double clicked inside the widget. If the double-click is on a valid item it emits the <link raw="doubleClicked()" href="qabstractitemview.html#doubleClicked" type="function">doubleClicked()</link> signal and calls <link raw="edit()" href="qabstractitemview.html#edit" type="function">edit()</link> on the item.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="dragEnterEvent" fullname="QAbstractItemView::dragEnterEvent" href="qabstractitemview.html#dragEnterEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="338" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void dragEnterEvent(QDragEnterEvent *event) override">
                <parameter type="QDragEnterEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1969" column="4">
                    <para>This function is called with the given <argument>event</argument> when a drag and drop operation enters the widget. If the drag is over a valid dropping place (e.g. over an item that accepts drops), the event is accepted; otherwise it is ignored.</para>
                    <see-also>
                        <link raw="dropEvent()" href="qabstractitemview.html#dropEvent" type="function">dropEvent()</link>
                        <link raw="startDrag()" href="qabstractitemview.html#startDrag" type="function">startDrag()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="dragMoveEvent" fullname="QAbstractItemView::dragMoveEvent" href="qabstractitemview.html#dragMoveEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="339" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void dragMoveEvent(QDragMoveEvent *event) override">
                <parameter type="QDragMoveEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1990" column="4">
                    <para>This function is called continuously with the given <argument>event</argument> during a drag and drop operation over the widget. It can cause the view to scroll if, for example, the user drags a selection to view's right or bottom edge. In this case, the event will be accepted; otherwise it will be ignored.</para>
                    <see-also>
                        <link raw="dropEvent()" href="qabstractitemview.html#dropEvent" type="function">dropEvent()</link>
                        <link raw="startDrag()" href="qabstractitemview.html#startDrag" type="function">startDrag()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="dragLeaveEvent" fullname="QAbstractItemView::dragLeaveEvent" href="qabstractitemview.html#dragLeaveEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="340" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void dragLeaveEvent(QDragLeaveEvent *event) override">
                <parameter type="QDragLeaveEvent *" name="event" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="dropEvent" fullname="QAbstractItemView::dropEvent" href="qabstractitemview.html#dropEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="341" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void dropEvent(QDropEvent *event) override">
                <parameter type="QDropEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2102" column="4">
                    <para>This function is called with the given <argument>event</argument> when a drop event occurs over the widget. If the model accepts the even position the drop event is accepted; otherwise it is ignored.</para>
                    <see-also>
                        <link raw="startDrag()" href="qabstractitemview.html#startDrag" type="function">startDrag()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="focusInEvent" fullname="QAbstractItemView::focusInEvent" href="qabstractitemview.html#focusInEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="343" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void focusInEvent(QFocusEvent *event) override">
                <parameter type="QFocusEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2223" column="4">
                    <para>This function is called with the given <argument>event</argument> when the widget obtains the focus. By default, the event is ignored.</para>
                    <see-also>
                        <link raw="setFocus()" href="qwidget.html#setFocus" type="function">setFocus()</link>
                        <link raw="focusOutEvent()" href="qabstractitemview.html#focusOutEvent" type="function">focusOutEvent()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="focusOutEvent" fullname="QAbstractItemView::focusOutEvent" href="qabstractitemview.html#focusOutEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="344" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void focusOutEvent(QFocusEvent *event) override">
                <parameter type="QFocusEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2258" column="4">
                    <para>This function is called with the given <argument>event</argument> when the widget loses the focus. By default, the event is ignored.</para>
                    <see-also>
                        <link raw="clearFocus()" href="qwidget.html#clearFocus" type="function">clearFocus()</link>
                        <link raw="focusInEvent()" href="qabstractitemview.html#focusInEvent" type="function">focusInEvent()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="keyPressEvent" fullname="QAbstractItemView::keyPressEvent" href="qabstractitemview.html#keyPressEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="345" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void keyPressEvent(QKeyEvent *event) override">
                <parameter type="QKeyEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2271" column="4">
                    <para>This function is called with the given <argument>event</argument> when a key event is sent to the widget. The default implementation handles basic cursor movement, e.g. Up, Down, Left, Right, Home, PageUp, and PageDown; the <link raw="activated()" href="qabstractitemview.html#activated" type="function">activated()</link> signal is emitted if the current index is valid and the activation key is pressed (e.g. Enter or Return, depending on the platform). This function is where editing is initiated by key press, e.g. if F2 is pressed.</para>
                    <see-also>
                        <link raw="edit()" href="qabstractitemview.html#edit" type="function">edit()</link>
                        <link raw="moveCursor()" href="qabstractitemview.html#moveCursor" type="function">moveCursor()</link>
                        <link raw="keyboardSearch()" href="qabstractitemview.html#keyboardSearch" type="function">keyboardSearch()</link>
                        <link raw="tabKeyNavigation" href="qabstractitemview.html#tabKeyNavigation-prop" type="property" getter="QAbstractItemView::tabKeyNavigation()">tabKeyNavigation</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="resizeEvent" fullname="QAbstractItemView::resizeEvent" href="qabstractitemview.html#resizeEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="346" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void resizeEvent(QResizeEvent *event) override">
                <parameter type="QResizeEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2506" column="4">
                    <para>This function is called with the given <argument>event</argument> when a resize event is sent to the widget.</para>
                    <see-also>
                        <link raw="QWidget::resizeEvent()" href="qwidget.html#resizeEvent" type="function">QWidget::resizeEvent()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="timerEvent" fullname="QAbstractItemView::timerEvent" href="qabstractitemview.html#timerEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="347" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void timerEvent(QTimerEvent *event) override">
                <parameter type="QTimerEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2518" column="4">
                    <para>This function is called with the given <argument>event</argument> when a timer event is sent to the widget.</para>
                    <see-also>
                        <link raw="QObject::timerEvent()" href="qobject.html#timerEvent" type="function">QObject::timerEvent()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="inputMethodEvent" fullname="QAbstractItemView::inputMethodEvent" href="qabstractitemview.html#inputMethodEvent" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="348" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="void" signature="void inputMethodEvent(QInputMethodEvent *event) override">
                <parameter type="QInputMethodEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2556" column="4"/>
            </function>
            <function threadsafety="unspecified" name="eventFilter" fullname="QAbstractItemView::eventFilter" href="qabstractitemview.html#eventFilter" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="349" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="true" type="bool" signature="bool eventFilter(QObject *object, QEvent *event) override">
                <parameter type="QObject *" name="object" default=""/>
                <parameter type="QEvent *" name="event" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="4506" column="4"/>
            </function>
            <enum threadsafety="unspecified" name="DropIndicatorPosition" fullname="QAbstractItemView::DropIndicatorPosition" href="qabstractitemview.html#DropIndicatorPosition-enum" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="352">
                <value name="OnItem" value="0"/>
                <value name="AboveItem" value="1"/>
                <value name="BelowItem" value="2"/>
                <value name="OnViewport" value="3"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2573" column="4">
                    <para>This enum indicates the position of the drop indicator in relation to the index at the current mouse position:</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemView::OnItem</term>OnItem</definition>
                        <item>
                            <para>The item will be dropped on the index.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::AboveItem</term>AboveItem</definition>
                        <item>
                            <para>The item will be dropped above the index.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::BelowItem</term>BelowItem</definition>
                        <item>
                            <para>The item will be dropped below the index.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemView::OnViewport</term>OnViewport</definition>
                        <item>
                            <para>The item will be dropped onto a region of the viewport with no items. The way each view handles items dropped onto the viewport depends on the behavior of the underlying model in use.</para>
                        </item>
                    </list>
                </description>
            </enum>
            <function threadsafety="unspecified" name="dropIndicatorPosition" fullname="QAbstractItemView::dropIndicatorPosition" href="qabstractitemview.html#dropIndicatorPosition" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="353" since="4.1" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemView::DropIndicatorPosition" signature="QAbstractItemView::DropIndicatorPosition dropIndicatorPosition() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="2591" column="4">
                    <para>Returns the position of the drop indicator in relation to the closest item.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="viewportSizeHint" fullname="QAbstractItemView::viewportSizeHint" href="qabstractitemview.html#viewportSizeHint" status="active" access="protected" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="356" since="5.2" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="true" type="QSize" signature="QSize viewportSizeHint() const override">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemview.cpp" line="1428" column="4"/>
            </function>
            <function threadsafety="unspecified" name="d_func" fullname="QAbstractItemView::d_func" href="qabstractitemview.html#d_func" status="active" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="359" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemViewPrivate *" signature="QAbstractItemViewPrivate * d_func()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="d_func" fullname="QAbstractItemView::d_func" href="qabstractitemview.html#d_func-1" status="active" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="359" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QAbstractItemViewPrivate *" signature="const QAbstractItemViewPrivate * d_func() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="QAbstractItemView" fullname="QAbstractItemView::QAbstractItemView" href="qabstractitemview.html#QAbstractItemView-2" status="active" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="360" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAbstractItemView(const QAbstractItemView &amp;)">
                <parameter type="const QAbstractItemView &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="QAbstractItemView::operator=" href="qabstractitemview.html#operator-eq" status="active" access="private" location="qabstractitemview.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemview.h" lineno="360" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemView &amp;" signature="QAbstractItemView &amp; operator=(const QAbstractItemView &amp;)">
                <parameter type="const QAbstractItemView &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
        </class>
    </document>
</WebXML>
