<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <class threadsafety="unspecified" name="QAbstractItemDelegate" href="qabstractitemdelegate.html" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="58" bases="QObject" module="QtWidgets" groups="model-view" brief="Used to display and edit data items from a model">
            <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="74" column="4">
                <brief>The <link raw="QAbstractItemDelegate" href="qabstractitemdelegate.html" type="class">QAbstractItemDelegate</link> class is used to display and edit data items from a model.</brief>
                <para>A <link raw="QAbstractItemDelegate" href="qabstractitemdelegate.html" type="class">QAbstractItemDelegate</link> provides the interface and common functionality for delegates in the model/view architecture. Delegates display individual items in views, and handle the editing of model data.</para>
                <para>The <link raw="QAbstractItemDelegate" href="qabstractitemdelegate.html" type="class">QAbstractItemDelegate</link> class is one of the <link raw="Model/View Classes" href="model-view-programming.html#model-view-classes" type="page" page="Model/View Programming">Model/View Classes</link> and is part of Qt's <link raw="Model/View Programming" href="model-view-programming.html" type="page" page="Model/View Programming">model/view framework</link>.</para>
                <para>To render an item in a custom way, you must implement <link raw="paint()" href="qabstractitemdelegate.html#paint" type="function">paint()</link> and <link raw="sizeHint()" href="qabstractitemdelegate.html#sizeHint" type="function">sizeHint()</link>. The <link raw="QItemDelegate" href="qitemdelegate.html" type="class">QItemDelegate</link> class provides default implementations for these functions; if you do not need custom rendering, subclass that class instead.</para>
                <para>We give an example of drawing a progress bar in items; in our case for a package management program.</para>
                <image href="images/widgetdelegate.png"/>
                <para>We create the <teletype type="highlighted">WidgetDelegate</teletype> class, which inherits from <link raw="QStyledItemDelegate" href="qstyleditemdelegate.html" type="class">QStyledItemDelegate</link>. We do the drawing in the <link raw="paint()" href="qabstractitemdelegate.html#paint" type="function">paint()</link> function:</para>
                <snippet location="widgetdelegate.cpp" path="C:/Qt/5.11.1/Src/qtbase/src/widgets/doc/snippets/widgetdelegate.cpp" identifier="0"/>
                <para>Notice that we use a <link raw="QStyleOptionProgressBar" href="qstyleoptionprogressbar.html" type="class">QStyleOptionProgressBar</link> and initialize its members. We can then use the current <link raw="QStyle" href="qstyle.html" type="class">QStyle</link> to draw it.</para>
                <para>To provide custom editing, there are two approaches that can be used. The first approach is to create an editor widget and display it directly on top of the item. To do this you must reimplement <link raw="createEditor()" href="qabstractitemdelegate.html#createEditor" type="function">createEditor()</link> to provide an editor widget, <link raw="setEditorData()" href="qabstractitemdelegate.html#setEditorData" type="function">setEditorData()</link> to populate the editor with the data from the model, and <link raw="setModelData()" href="qabstractitemdelegate.html#setModelData" type="function">setModelData()</link> so that the delegate can update the model with data from the editor.</para>
                <para>The second approach is to handle user events directly by reimplementing <link raw="editorEvent()" href="qabstractitemdelegate.html#editorEvent" type="function">editorEvent()</link>.</para>
                <see-also>
                    <link raw="model-view-programming" href="model-view-programming.html" type="page" page="Model/View Programming">Model/View Programming</link>
                    <link raw="QItemDelegate" href="qitemdelegate.html" type="class">QItemDelegate</link>
                    <link raw="Pixelator Example" href="qtwidgets-itemviews-pixelator-example.html" type="page" page="Pixelator Example">Pixelator Example</link>
                    <link raw="QStyledItemDelegate" href="qstyleditemdelegate.html" type="class">QStyledItemDelegate</link>
                    <link raw="QStyle" href="qstyle.html" type="class">QStyle</link>
                </see-also>
            </description>
            <variable threadsafety="unspecified" name="staticMetaObject" fullname="QAbstractItemDelegate::staticMetaObject" href="qabstractitemdelegate.html#staticMetaObject-var" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" type="const QMetaObject" static="true">
                <description path="" line="0" column="0"/>
            </variable>
            <function threadsafety="unspecified" name="metaObject" fullname="QAbstractItemDelegate::metaObject" href="qabstractitemdelegate.html#metaObject" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QMetaObject *" signature="const QMetaObject * metaObject() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_metacast" fullname="QAbstractItemDelegate::qt_metacast" href="qabstractitemdelegate.html#qt_metacast" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void *" signature="void * qt_metacast(const char *)">
                <parameter type="const char *" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_metacall" fullname="QAbstractItemDelegate::qt_metacall" href="qabstractitemdelegate.html#qt_metacall" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="int" signature="int qt_metacall(QMetaObject::Call , int , void **)">
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="tr" fullname="QAbstractItemDelegate::tr" href="qabstractitemdelegate.html#tr" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString tr(const char *s, const char *c, int n)">
                <parameter type="const char *" name="s" default=""/>
                <parameter type="const char *" name="c" default="Q_OBJECT"/>
                <parameter type="int" name="n" default="Q_OBJECT"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="trUtf8" fullname="QAbstractItemDelegate::trUtf8" href="qabstractitemdelegate.html#trUtf8" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString trUtf8(const char *s, const char *c, int n)">
                <parameter type="const char *" name="s" default=""/>
                <parameter type="const char *" name="c" default="Q_OBJECT"/>
                <parameter type="int" name="n" default="Q_OBJECT"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="qt_static_metacall" fullname="QAbstractItemDelegate::qt_static_metacall" href="qabstractitemdelegate.html#qt_static_metacall" status="active" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void qt_static_metacall(QObject *, QMetaObject::Call , int , void **)">
                <parameter type="QObject *" name="" default=""/>
                <parameter type="QMetaObject::Call" name="" default=""/>
                <parameter type="int" name="" default=""/>
                <parameter type="void **" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <class threadsafety="unspecified" name="QPrivateSignal" fullname="QAbstractItemDelegate::QPrivateSignal" href="qabstractitemdelegate-qprivatesignal.html" status="active" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="60">
                <description path="" line="0" column="0"/>
            </class>
            <enum threadsafety="unspecified" name="EndEditHint" fullname="QAbstractItemDelegate::EndEditHint" href="qabstractitemdelegate.html#EndEditHint-enum" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="64">
                <value name="NoHint" value="0"/>
                <value name="EditNextItem" value="1"/>
                <value name="EditPreviousItem" value="2"/>
                <value name="SubmitModelCache" value="3"/>
                <value name="RevertModelCache" value="4"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="122" column="4">
                    <para>This enum describes the different hints that the delegate can give to the model and view components to make editing data in a model a comfortable experience for the user.</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemDelegate::NoHint</term>NoHint</definition>
                        <item>
                            <para>There is no recommended action to be performed.</para>
                        </item>
                    </list>
                    <para>These hints let the delegate influence the behavior of the view:</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemDelegate::EditNextItem</term>EditNextItem</definition>
                        <item>
                            <para>The view should use the delegate to open an editor on the next item in the view.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemDelegate::EditPreviousItem</term>EditPreviousItem</definition>
                        <item>
                            <para>The view should use the delegate to open an editor on the previous item in the view.</para>
                        </item>
                    </list>
                    <para>Note that custom views may interpret the concepts of next and previous differently.</para>
                    <para>The following hints are most useful when models are used that cache data, such as those that manipulate data locally in order to increase performance or conserve network bandwidth.</para>
                    <list type="enum">
                        <definition>
                            <term>QAbstractItemDelegate::SubmitModelCache</term>SubmitModelCache</definition>
                        <item>
                            <para>If the model caches data, it should write out cached data to the underlying data store.</para>
                        </item>
                        <definition>
                            <term>QAbstractItemDelegate::RevertModelCache</term>RevertModelCache</definition>
                        <item>
                            <para>If the model caches data, it should discard cached data and replace it with data from the underlying data store.</para>
                        </item>
                    </list>
                    <para>Although models and views should respond to these hints in appropriate ways, custom components may ignore any or all of them if they are not relevant.</para>
                </description>
            </enum>
            <function threadsafety="unspecified" name="QAbstractItemDelegate" fullname="QAbstractItemDelegate::QAbstractItemDelegate" href="qabstractitemdelegate.html#QAbstractItemDelegate" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="72" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAbstractItemDelegate(QObject *parent)">
                <parameter type="QObject *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="189" column="4">
                    <para>Creates a new abstract item delegate with the given <argument>parent</argument>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="~QAbstractItemDelegate" fullname="QAbstractItemDelegate::~QAbstractItemDelegate" href="qabstractitemdelegate.html#dtor.QAbstractItemDelegate" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="73" virtual="virtual" meta="destructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="~QAbstractItemDelegate()">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="209" column="4">
                    <para>Destroys the abstract item delegate.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="paint" fullname="QAbstractItemDelegate::paint" href="qabstractitemdelegate.html#paint" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="76" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void paint(QPainter *painter, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const = 0">
                <parameter type="QPainter *" name="painter" default=""/>
                <parameter type="const QStyleOptionViewItem &amp;" name="option" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="sizeHint" fullname="QAbstractItemDelegate::sizeHint" href="qabstractitemdelegate.html#sizeHint" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="80" virtual="pure" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QSize" signature="QSize sizeHint(const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const = 0">
                <parameter type="const QStyleOptionViewItem &amp;" name="option" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="createEditor" fullname="QAbstractItemDelegate::createEditor" href="qabstractitemdelegate.html#createEditor" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="84" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QWidget *" signature="QWidget * createEditor(QWidget *parent, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const">
                <parameter type="QWidget *" name="parent" default=""/>
                <parameter type="const QStyleOptionViewItem &amp;" name="option" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="237" column="4">
                    <para>Returns the editor to be used for editing the data item with the given <argument>index</argument>. Note that the index contains information about the model being used. The editor's parent widget is specified by <argument>parent</argument>, and the item options by <argument>option</argument>.</para>
                    <para>The base implementation returns 0. If you want custom editing you will need to reimplement this function.</para>
                    <para>The returned editor widget should have <link raw="Qt::StrongFocus" href="qt.html#FocusPolicy-enum" type="enum" enum="Qt::FocusPolicy">Qt::StrongFocus</link>; otherwise, <link raw="QMouseEvent" href="qmouseevent.html" type="class">QMouseEvent</link>s received by the widget will propagate to the view. The view's background will shine through unless the editor paints its own background (e.g., with <link raw="QWidget::setAutoFillBackground()" href="qwidget.html#autoFillBackground-prop" type="function">setAutoFillBackground()</link>).</para>
                    <see-also>
                        <link raw="destroyEditor()" href="qabstractitemdelegate.html#destroyEditor" type="function">destroyEditor()</link>
                        <link raw="setModelData()" href="qabstractitemdelegate.html#setModelData" type="function">setModelData()</link>
                        <link raw="setEditorData()" href="qabstractitemdelegate.html#setEditorData" type="function">setEditorData()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="destroyEditor" fullname="QAbstractItemDelegate::destroyEditor" href="qabstractitemdelegate.html#destroyEditor" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="88" since="5.0" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void destroyEditor(QWidget *editor, const QModelIndex &amp;index) const">
                <parameter type="QWidget *" name="editor" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="262" column="4">
                    <para>Called when the <argument>editor</argument> is no longer needed for editing the data item with the given <argument>index</argument> and should be destroyed. The default behavior is a call to <link raw="deleteLater" href="qobject.html#deleteLater" type="function">deleteLater</link> on the editor. It is possible e.g. to avoid this delete by reimplementing this function.</para>
                    <see-also>
                        <link raw="createEditor()" href="qabstractitemdelegate.html#createEditor" type="function">createEditor()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setEditorData" fullname="QAbstractItemDelegate::setEditorData" href="qabstractitemdelegate.html#setEditorData" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="90" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setEditorData(QWidget *editor, const QModelIndex &amp;index) const">
                <parameter type="QWidget *" name="editor" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="277" column="4">
                    <para>Sets the contents of the given <argument>editor</argument> to the data for the item at the given <argument>index</argument>. Note that the index contains information about the model being used.</para>
                    <para>The base implementation does nothing. If you want custom editing you will need to reimplement this function.</para>
                    <see-also>
                        <link raw="setModelData()" href="qabstractitemdelegate.html#setModelData" type="function">setModelData()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="setModelData" fullname="QAbstractItemDelegate::setModelData" href="qabstractitemdelegate.html#setModelData" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="92" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void setModelData(QWidget *editor, QAbstractItemModel *model, const QModelIndex &amp;index) const">
                <parameter type="QWidget *" name="editor" default=""/>
                <parameter type="QAbstractItemModel *" name="model" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="293" column="4">
                    <para>Sets the data for the item at the given <argument>index</argument> in the <argument>model</argument> to the contents of the given <argument>editor</argument>.</para>
                    <para>The base implementation does nothing. If you want custom editing you will need to reimplement this function.</para>
                    <see-also>
                        <link raw="setEditorData()" href="qabstractitemdelegate.html#setEditorData" type="function">setEditorData()</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="updateEditorGeometry" fullname="QAbstractItemDelegate::updateEditorGeometry" href="qabstractitemdelegate.html#updateEditorGeometry" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="96" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void updateEditorGeometry(QWidget *editor, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index) const">
                <parameter type="QWidget *" name="editor" default=""/>
                <parameter type="const QStyleOptionViewItem &amp;" name="option" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="309" column="4">
                    <para>Updates the geometry of the <argument>editor</argument> for the item with the given <argument>index</argument>, according to the rectangle specified in the <argument>option</argument>. If the item has an internal layout, the editor will be laid out accordingly. Note that the index contains information about the model being used.</para>
                    <para>The base implementation does nothing. If you want custom editing you must reimplement this function.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="editorEvent" fullname="QAbstractItemDelegate::editorEvent" href="qabstractitemdelegate.html#editorEvent" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="101" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool editorEvent(QEvent *event, QAbstractItemModel *model, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index)">
                <parameter type="QEvent *" name="event" default=""/>
                <parameter type="QAbstractItemModel *" name="model" default=""/>
                <parameter type="const QStyleOptionViewItem &amp;" name="option" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="326" column="4">
                    <para>When editing of an item starts, this function is called with the <argument>event</argument> that triggered the editing, the <argument>model</argument>, the <argument>index</argument> of the item, and the <argument>option</argument> used for rendering the item.</para>
                    <para>Mouse events are sent to  even if they don't start editing of the item. This can, for instance, be useful if you wish to open a context menu when the right mouse button is pressed on an item.</para>
                    <para>The base implementation returns <teletype type="highlighted">false</teletype> (indicating that it has not handled the event).</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="elidedText" fullname="QAbstractItemDelegate::elidedText" href="qabstractitemdelegate-obsolete.html#elidedText" status="obsolete" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="106" virtual="non" meta="plain" const="false" static="true" overload="false" delete="false" default="false" final="false" override="false" type="QString" signature="QString elidedText(const QFontMetrics &amp;fontMetrics, int width, Qt::TextElideMode mode, const QString &amp;text)">
                <parameter type="const QFontMetrics &amp;" name="fontMetrics" default=""/>
                <parameter type="int" name="width" default=""/>
                <parameter type="Qt::TextElideMode" name="mode" default=""/>
                <parameter type="const QString &amp;" name="text" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="348" column="4">
                    <para>Use <link raw="QFontMetrics::elidedText()" href="qfontmetrics.html#elidedText" type="function">QFontMetrics::elidedText()</link> instead.</para>
                    <para>For example, if you have code like</para>
                    <oldcode>QFontMetrics fm = ...
QString str = QAbstractItemDelegate::elidedText(fm, width, mode, text);</oldcode>
                    <para>you can rewrite it as</para>
                    <newcode>QFontMetrics fm = ...
QString str = fm.elidedText(text, mode, width);</newcode>
                </description>
            </function>
            <function threadsafety="unspecified" name="helpEvent" fullname="QAbstractItemDelegate::helpEvent" href="qabstractitemdelegate.html#helpEvent" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="109" since="4.3" virtual="virtual" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="bool" signature="bool helpEvent(QHelpEvent *event, QAbstractItemView *view, const QStyleOptionViewItem &amp;option, const QModelIndex &amp;index)">
                <parameter type="QHelpEvent *" name="event" default=""/>
                <parameter type="QAbstractItemView *" name="view" default=""/>
                <parameter type="const QStyleOptionViewItem &amp;" name="option" default=""/>
                <parameter type="const QModelIndex &amp;" name="index" default=""/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="368" column="4">
                    <para>Whenever a help event occurs, this function is called with the <argument>event</argument> <argument>view</argument> <argument>option</argument> and the <argument>index</argument> that corresponds to the item where the event occurs.</para>
                    <para>Returns <teletype type="highlighted">true</teletype> if the delegate can handle the event; otherwise returns <teletype type="highlighted">false</teletype>. A return value of true indicates that the data obtained using the index had the required role.</para>
                    <para>For <link raw="QEvent::ToolTip" href="qevent.html#Type-enum" type="enum" enum="QEvent::Type">QEvent::ToolTip</link> and <link raw="QEvent::WhatsThis" href="qevent.html#Type-enum" type="enum" enum="QEvent::Type">QEvent::WhatsThis</link> events that were handled successfully, the relevant popup may be shown depending on the user's system configuration.</para>
                    <see-also>
                        <link raw="QHelpEvent" href="qhelpevent.html" type="class">QHelpEvent</link>
                    </see-also>
                </description>
            </function>
            <function threadsafety="unspecified" name="paintingRoles" fullname="QAbstractItemDelegate::paintingRoles" href="qabstractitemdelegate.html#paintingRoles" status="internal" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="114" virtual="virtual" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QVector&lt;int&gt;" signature="QVector&lt;int&gt; paintingRoles() const">
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="426" column="4">
                    <para>This virtual method is reserved and will be used in Qt 5.1.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="commitData" fullname="QAbstractItemDelegate::commitData" href="qabstractitemdelegate.html#commitData" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="117" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void commitData(QWidget *editor)">
                <parameter type="QWidget *" name="editor" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="closeEditor" fullname="QAbstractItemDelegate::closeEditor" href="qabstractitemdelegate.html#closeEditor" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="118" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void closeEditor(QWidget *editor, QAbstractItemDelegate::EndEditHint hint)">
                <parameter type="QWidget *" name="editor" default=""/>
                <parameter type="QAbstractItemDelegate::EndEditHint" name="hint" default="NoHint"/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="sizeHintChanged" fullname="QAbstractItemDelegate::sizeHintChanged" href="qabstractitemdelegate.html#sizeHintChanged" status="active" access="public" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="119" virtual="non" meta="signal" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="void" signature="void sizeHintChanged(const QModelIndex &amp;)">
                <parameter type="const QModelIndex &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="QAbstractItemDelegate" fullname="QAbstractItemDelegate::QAbstractItemDelegate" href="qabstractitemdelegate.html#QAbstractItemDelegate-1" status="internal" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="122" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAbstractItemDelegate(QObjectPrivate &amp;dd, QObject *parent)">
                <parameter type="QObjectPrivate &amp;" name="dd" default=""/>
                <parameter type="QObject *" name="parent" default="nullptr"/>
                <description path="C:/Qt/5.11.1/Src/qtbase/src/widgets/itemviews/qabstractitemdelegate.cpp" line="198" column="4">
                    <para>Creates a new abstract item delegate with the given <argument>parent</argument>.</para>
                </description>
            </function>
            <function threadsafety="unspecified" name="d_func" fullname="QAbstractItemDelegate::d_func" href="qabstractitemdelegate.html#d_func" status="active" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="124" virtual="non" meta="plain" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemDelegatePrivate *" signature="QAbstractItemDelegatePrivate * d_func()">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="d_func" fullname="QAbstractItemDelegate::d_func" href="qabstractitemdelegate.html#d_func-1" status="active" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="124" virtual="non" meta="plain" const="true" static="false" overload="false" delete="false" default="false" final="false" override="false" type="const QAbstractItemDelegatePrivate *" signature="const QAbstractItemDelegatePrivate * d_func() const">
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="QAbstractItemDelegate" fullname="QAbstractItemDelegate::QAbstractItemDelegate" href="qabstractitemdelegate.html#QAbstractItemDelegate-2" status="active" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="125" virtual="non" meta="constructor" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="" signature="QAbstractItemDelegate(const QAbstractItemDelegate &amp;)">
                <parameter type="const QAbstractItemDelegate &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
            <function threadsafety="unspecified" name="operator=" fullname="QAbstractItemDelegate::operator=" href="qabstractitemdelegate.html#operator-eq" status="active" access="private" location="qabstractitemdelegate.h" filepath="C:/Qt/5.11.1/msvc2017_64/include\QtWidgets/qabstractitemdelegate.h" lineno="125" virtual="non" meta="copy-assign" const="false" static="false" overload="false" delete="false" default="false" final="false" override="false" type="QAbstractItemDelegate &amp;" signature="QAbstractItemDelegate &amp; operator=(const QAbstractItemDelegate &amp;)">
                <parameter type="const QAbstractItemDelegate &amp;" name="" default=""/>
                <description path="" line="0" column="0"/>
            </function>
        </class>
    </document>
</WebXML>
