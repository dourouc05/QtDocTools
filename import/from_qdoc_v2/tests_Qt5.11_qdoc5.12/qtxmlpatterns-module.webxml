<?xml version="1.0" encoding="UTF-8"?>
<WebXML>
    <document>
        <module name="QtXmlPatterns" href="qtxmlpatterns-module.html" status="active" location="qtxmlpatterns-module.qdoc" filepath="C:/Qt/5.11.1/Src/qtxmlpatterns/src/xmlpatterns/doc/src/qtxmlpatterns-module.qdoc" lineno="27" seen="true" title="Qt XML Patterns C++ Classes" module="QtXmlPatterns" groups="modules" members="QAbstractMessageHandler,QAbstractUriResolver,QAbstractXmlNodeModel,QXmlItem,QXmlNodeModelIndex,QAbstractXmlReceiver,QSimpleXmlNodeModel,QSourceLocation,QXmlFormatter,QXmlName,QXmlNamePool,QXmlQuery,QXmlResultItems,QXmlSchema,QXmlSchemaValidator,QXmlSerializer" brief="Qt XML Patterns module provides support for XPath, XQuery, XSLT and XML Schema validation">
            <description path="C:/Qt/5.11.1/Src/qtxmlpatterns/src/xmlpatterns/doc/src/qtxmlpatterns-module.qdoc" line="27" column="4">
                <generatedlist contents="classesbymodule">
                    <section>
                        <heading level="1">Classes</heading>
                        <table width="100%">
                            <row>
                                <heading>
                                    <link href="qabstractmessagehandler.html" type="class">QAbstractMessageHandler</link>
                                </heading>
                                <item>The QAbstractMessageHandler class provides a callback interface for handling messages.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qabstracturiresolver.html" type="class">QAbstractUriResolver</link>
                                </heading>
                                <item>The QAbstractUriResolver class is a callback interface for resolving Uniform Resource Identifiers. A Uniform Resource Identifier (URI) is a string that uniquely identifies a resource. URIs are versatile global identifiers. It is often useful to transform a URI that identifies something logical into a URI that locates something physical (a URL), or to simply map a URI to a different URI. QAbstractUriResolver::resolve() provides this functionality.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qabstractxmlnodemodel.html" type="class">QAbstractXmlNodeModel</link>
                                </heading>
                                <item>The QAbstractXmlNodeModel class is an abstract base class for modeling non-XML data to look like XML for QXmlQuery.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qabstractxmlreceiver.html" type="class">QAbstractXmlReceiver</link>
                                </heading>
                                <item>The QAbstractXmlReceiver class provides a callback interface for transforming the output of a QXmlQuery.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qsimplexmlnodemodel.html" type="class">QSimpleXmlNodeModel</link>
                                </heading>
                                <item>The QSimpleXmlNodeModel class is an implementation of QAbstractXmlNodeModel sufficient for many common cases.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qsourcelocation.html" type="class">QSourceLocation</link>
                                </heading>
                                <item>The QSourceLocation class identifies a location in a resource by URI, line, and column.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlformatter.html" type="class">QXmlFormatter</link>
                                </heading>
                                <item>The QXmlFormatter class is an implementation of QXmlSerializer for transforming XQuery output into formatted XML.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlitem.html" type="class">QXmlItem</link>
                                </heading>
                                <item>The QXmlItem class contains either an XML node or an atomic value.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlname.html" type="class">QXmlName</link>
                                </heading>
                                <item>The QXmlName class represents the name of an XML node, in an efficient, namespace-aware way. QXmlName represents the name of an XML node in a way that is both efficient and safe for comparing names. Normally, an XML node represents an XML element or attribute, but QXmlName can also represent the names of other kinds of nodes, e.g., QAbstractXmlReceiver::processingInstruction() and QAbstractXmlReceiver::namespaceBinding().</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlnamepool.html" type="class">QXmlNamePool</link>
                                </heading>
                                <item>The QXmlNamePool class is a table of shared strings referenced by instances of QXmlName.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlnodemodelindex.html" type="class">QXmlNodeModelIndex</link>
                                </heading>
                                <item>The QXmlNodeModelIndex class identifies a node in an XML node model subclassed from QAbstractXmlNodeModel.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlquery.html" type="class">QXmlQuery</link>
                                </heading>
                                <item>The QXmlQuery class performs XQueries on XML data, or on non-XML data modeled to look like XML.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlresultitems.html" type="class">QXmlResultItems</link>
                                </heading>
                                <item>The QXmlResultItems class iterates through the results of evaluating an XQuery in QXmlQuery.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlschema.html" type="class">QXmlSchema</link>
                                </heading>
                                <item>The QXmlSchema class provides loading and validation of a W3C XML Schema.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlschemavalidator.html" type="class">QXmlSchemaValidator</link>
                                </heading>
                                <item>The QXmlSchemaValidator class validates XML instance documents against a W3C XML Schema.</item>
                            </row>
                            <row>
                                <heading>
                                    <link href="qxmlserializer.html" type="class">QXmlSerializer</link>
                                </heading>
                                <item>The QXmlSerializer class is an implementation of QAbstractXmlReceiver for transforming XQuery output into unformatted XML.</item>
                            </row>
                        </table>
                    </section>
                </generatedlist>
                <brief>The Qt XML Patterns module provides support for XPath, <link raw="XQuery" href="xmlprocessing.html" type="page" page="XQuery">XQuery</link>, XSLT and XML Schema validation.</brief>
                <para>The <link raw="Qt XML Patterns" href="qtxmlpatterns-index.html" type="page" page="Qt XML Patterns">Qt XML Patterns</link> module provides support for XPath, <link raw="XQuery" href="xmlprocessing.html" type="page" page="XQuery">XQuery</link>, XSLT and XML Schema validation.</para>
                <para>To include the definitions of the module's classes, use the following directive:</para>
                <snippet location="doc_src_qtxmlpatterns.cpp" path="C:/Qt/5.11.1/Src/qtxmlpatterns/src/xmlpatterns/doc/snippets/doc_src_qtxmlpatterns.cpp" identifier="0"/>
                <para>To link against the module, add this line to your <link raw="qmake" href="qmake-manual.html" type="page" page="qmake Manual">qmake</link> <teletype type="highlighted">.pro</teletype> file:</para>
                <snippet location="doc_src_qtxmlpatterns.pro" path="C:/Qt/5.11.1/Src/qtxmlpatterns/src/xmlpatterns/doc/snippets/doc_src_qtxmlpatterns.pro" identifier="1"/>
            </description>
        </module>
    </document>
</WebXML>
