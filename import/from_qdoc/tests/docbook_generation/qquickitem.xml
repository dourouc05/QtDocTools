<html:html xmlns:html="http://www.w3.org/1999/xhtml" lang="en">
    <html:head>
        <html:meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <!-- qquickitem.cpp -->
        <html:title>QQuickItem Class | Qt Quick 5.4</html:title>
        <html:link href="style/offline.css" rel="stylesheet" type="text/css" />
    </html:head>
    <html:body>
        <html:div class="header" id="qtdocheader">
            <html:div class="main">
                <html:div class="main-rounded">
                    <html:div class="navigationbar">
                        <html:ul>
                            <html:li><html:a href="qtdoc/index.html">Qt 5.4</html:a></html:li>
                            <html:li><html:a href="qtquick-index.html">Qt Quick</html:a></html:li>
                            <html:li><html:a href="qtquick-module.html">C++
                                Classes</html:a></html:li>
                            <html:li>QQuickItem</html:li>
                            <html:li id="buildversion">Qt 5.4.2 Reference Documentation</html:li>
                        </html:ul>
                    </html:div>
                </html:div>
                <html:div class="content">
                    <html:div class="line">
                        <html:div class="content mainContent">
                            <html:div class="sidebar">
                                <html:div class="toc">
                                    <html:h3><html:a name="toc">Contents</html:a></html:h3>
                                    <html:ul>
                                        <html:li class="level1"><html:a href="#public-types">Public
                                                Types</html:a></html:li>
                                        <html:li class="level1"><html:a href="#properties"
                                                >Properties</html:a></html:li>
                                        <html:li class="level1"><html:a href="#public-functions"
                                                >Public Functions</html:a></html:li>
                                        <html:li class="level1"><html:a href="#public-slots">Public
                                                Slots</html:a></html:li>
                                        <html:li class="level1"><html:a href="#signals"
                                                >Signals</html:a></html:li>
                                        <html:li class="level1"><html:a href="#protected-functions"
                                                >Protected Functions</html:a></html:li>
                                        <html:li class="level1"><html:a
                                                href="#reimplemented-protected-functions"
                                                >Reimplemented Protected
                                            Functions</html:a></html:li>
                                        <html:li class="level1"><html:a href="#details">Detailed
                                                Description</html:a></html:li>
                                        <html:li class="level2"><html:a
                                                href="#custom-scene-graph-items">Custom Scene Graph
                                                Items</html:a></html:li>
                                        <html:li class="level2"><html:a
                                                href="#custom-qpainter-items">Custom QPainter
                                                Items</html:a></html:li>
                                        <html:li class="level2"><html:a href="#behavior-animations"
                                                >Behavior Animations</html:a></html:li>
                                    </html:ul>
                                </html:div>
                                <html:div class="sidebar-content" id="sidebar-content"
                                ></html:div></html:div>
                            <html:h1 class="title">QQuickItem Class</html:h1>
                            <!-- $$$QQuickItem-brief -->
                            <html:p>The <html:a href="qquickitem.html">QQuickItem</html:a> class
                                provides the most basic of all visual items in <html:a
                                    href="qtquick-index.html">Qt Quick</html:a>. <html:a
                                    href="#details">More...</html:a></html:p>
                            <!-- @@@QQuickItem -->
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Header:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:span class="preprocessor">#include
                                                  &lt;QQuickItem&gt;</html:span>
                                            </html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                qmake:</html:td>
                                            <html:td class="memItemRight bottomAlign"> QT +=
                                                quick</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Instantiated By:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:a href="qml-qtquick-item.html"
                                                >Item</html:a></html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Inherits:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:a href="qtcore/qobject.html">QObject</html:a>
                                                and <html:a href="qtqml/qqmlparserstatus.html"
                                                  >QQmlParserStatus</html:a></html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Inherited By:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:p><html:a href="qquickframebufferobject.html"
                                                  >QQuickFramebufferObject</html:a> and <html:a
                                                  href="qquickpainteditem.html"
                                                  >QQuickPaintedItem</html:a></html:p>
                                            </html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div><html:ul>
                                <html:li><html:a href="qquickitem-members.html">List of all members,
                                        including inherited members</html:a></html:li>
                            </html:ul>
                            <html:a name="public-types"></html:a>
                            <html:h2 id="public-types">Public Types</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> class </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem-itemchangedata.html"
                                                  >ItemChangeData</html:a></html:b></html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> class </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem-updatepaintnodedata.html"
                                                  >UpdatePaintNodeData</html:a></html:b></html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> enum </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#Flag-enum"
                                                  >Flag</html:a></html:b> {
                                                ItemClipsChildrenToShape, ItemAcceptsInputMethod,
                                                ItemIsFocusScope, ItemHasContents, ItemAcceptsDrops
                                                }</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> flags </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#Flag-enum"
                                                  >Flags</html:a></html:b></html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> enum </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#ItemChange-enum"
                                                  >ItemChange</html:a></html:b> {
                                                ItemChildAddedChange, ItemChildRemovedChange,
                                                ItemSceneChange, ItemVisibleHasChanged, ...,
                                                ItemRotationHasChanged }</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> enum </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#TransformOrigin-enum"
                                                  >TransformOrigin</html:a></html:b> { TopLeft, Top,
                                                TopRight, Left, ..., BottomRight }</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:a name="properties"></html:a>
                            <html:h2 id="properties">Properties</html:h2>
                            <html:div class="table"><html:table class="propsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="topAlign"><html:ul>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#activeFocus-prop"
                                                  >activeFocus</html:a></html:b> : const
                                                  bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#activeFocusOnTab-prop"
                                                  >activeFocusOnTab</html:a></html:b> :
                                                  bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#antialiasing-prop"
                                                  >antialiasing</html:a></html:b> : bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#baselineOffset-prop"
                                                  >baselineOffset</html:a></html:b> :
                                                  qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#childrenRect-prop"
                                                  >childrenRect</html:a></html:b> : const
                                                  QRectF</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#clip-prop"
                                                  >clip</html:a></html:b> : bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#enabled-prop"
                                                  >enabled</html:a></html:b> : bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#focus-prop"
                                                  >focus</html:a></html:b> : bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#height-prop"
                                                  >height</html:a></html:b> : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#implicitHeight-prop"
                                                  >implicitHeight</html:a></html:b> :
                                                  qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#implicitWidth-prop"
                                                  >implicitWidth</html:a></html:b> : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#opacity-prop"
                                                  >opacity</html:a></html:b> : qreal</html:li>
                                                </html:ul></html:td>
                                            <html:td class="topAlign"><html:ul>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#parent-prop"
                                                  >parent</html:a></html:b> : QQuickItem *</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#rotation-prop"
                                                  >rotation</html:a></html:b> : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#scale-prop"
                                                  >scale</html:a></html:b> : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#smooth-prop"
                                                  >smooth</html:a></html:b> : bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#state-prop"
                                                  >state</html:a></html:b> : QString</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#transformOrigin-prop"
                                                  >transformOrigin</html:a></html:b> :
                                                  TransformOrigin</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#visible-prop"
                                                  >visible</html:a></html:b> : bool</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#width-prop"
                                                  >width</html:a></html:b> : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#x-prop">x</html:a></html:b>
                                                  : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#y-prop">y</html:a></html:b>
                                                  : qreal</html:li>
                                                  <html:li class="fn"><html:b><html:a
                                                  href="qquickitem.html#z-prop">z</html:a></html:b>
                                                  : qreal</html:li>
                                                </html:ul>
                                            </html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">1 property inherited from <html:a
                                        href="qtcore/qobject.html#properties"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="public-functions"></html:a>
                            <html:h2 id="public-functions">Public Functions</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#QQuickItem"
                                                  >QQuickItem</html:a></html:b>(QQuickItem *<html:i>
                                                  parent</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#dtor.QQuickItem"
                                                  >~QQuickItem</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#acceptHoverEvents"
                                                  >acceptHoverEvents</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Qt::MouseButtons </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#acceptedMouseButtons"
                                                  >acceptedMouseButtons</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#activeFocusOnTab-prop"
                                                  >activeFocusOnTab</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#antialiasing-prop"
                                                  >antialiasing</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#baselineOffset-prop"
                                                  >baselineOffset</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QQuickItem * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#childAt"
                                                  >childAt</html:a></html:b>(qreal<html:i>
                                                  x</html:i>, qreal<html:i> y</html:i>)
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QList&lt;QQuickItem *&gt; </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#childItems"
                                                  >childItems</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> QRectF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#childrenRect-prop"
                                                  >childrenRect</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#clip-prop"
                                                  >clip</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#contains"
                                                  >contains</html:a></html:b>(const QPointF
                                                  &amp;<html:i> point</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QCursor </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#cursor"
                                                  >cursor</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#filtersChildMouseEvents"
                                                  >filtersChildMouseEvents</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> Flags </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#flags"
                                                  >flags</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#forceActiveFocus"
                                                  >forceActiveFocus</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#forceActiveFocus-2"
                                                  >forceActiveFocus</html:a></html:b>(Qt::FocusReason<html:i>
                                                  reason</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#grabMouse"
                                                  >grabMouse</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QSharedPointer&lt;QQuickItemGrabResult&gt; </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#grabToImage"
                                                  >grabToImage</html:a></html:b>(const QSize
                                                  &amp;<html:i> targetSize</html:i> =
                                                QSize())</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#grabTouchPoints"
                                                  >grabTouchPoints</html:a></html:b>(const
                                                QVector&lt;int&gt; &amp;<html:i>
                                                ids</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#activeFocus-prop"
                                                  >hasActiveFocus</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#focus-prop"
                                                  >hasFocus</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#height-prop"
                                                  >height</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#implicitHeight-prop"
                                                  >implicitHeight</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#implicitWidth-prop"
                                                  >implicitWidth</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual QVariant </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#inputMethodQuery"
                                                  >inputMethodQuery</html:a></html:b>(Qt::InputMethodQuery<html:i>
                                                  query</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#enabled-prop"
                                                  >isEnabled</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#isFocusScope"
                                                  >isFocusScope</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#isTextureProvider"
                                                  >isTextureProvider</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#visible-prop"
                                                  >isVisible</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#keepMouseGrab"
                                                  >keepMouseGrab</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#keepTouchGrab"
                                                  >keepTouchGrab</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QPointF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mapFromItem"
                                                  >mapFromItem</html:a></html:b>(const QQuickItem
                                                  *<html:i> item</html:i>, const QPointF
                                                  &amp;<html:i> point</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QPointF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mapFromScene"
                                                  >mapFromScene</html:a></html:b>(const QPointF
                                                  &amp;<html:i> point</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> QRectF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mapRectFromItem"
                                                  >mapRectFromItem</html:a></html:b>(const
                                                QQuickItem *<html:i> item</html:i>, const QRectF
                                                  &amp;<html:i> rect</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> QRectF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mapRectFromScene"
                                                  >mapRectFromScene</html:a></html:b>(const QRectF
                                                  &amp;<html:i> rect</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> QRectF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mapRectToItem"
                                                  >mapRectToItem</html:a></html:b>(const QQuickItem
                                                  *<html:i> item</html:i>, const QRectF
                                                  &amp;<html:i> rect</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> QRectF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mapRectToScene"
                                                  >mapRectToScene</html:a></html:b>(const QRectF
                                                  &amp;<html:i> rect</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QPointF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#mapToItem"
                                                  >mapToItem</html:a></html:b>(const QQuickItem
                                                  *<html:i> item</html:i>, const QPointF
                                                  &amp;<html:i> point</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QPointF </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#mapToScene"
                                                  >mapToScene</html:a></html:b>(const QPointF
                                                  &amp;<html:i> point</html:i>) const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QQuickItem * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#nextItemInFocusChain"
                                                  >nextItemInFocusChain</html:a></html:b>(bool<html:i>
                                                  forward</html:i> = true)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#opacity-prop"
                                                  >opacity</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QQuickItem * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#parent-prop"
                                                  >parentItem</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#polish"
                                                  >polish</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#antialiasing-prop"
                                                  >resetAntialiasing</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#height-prop"
                                                  >resetHeight</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#width-prop"
                                                  >resetWidth</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#rotation-prop"
                                                  >rotation</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#scale-prop"
                                                  >scale</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QQuickItem * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#scopedFocusItem"
                                                  >scopedFocusItem</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#setAcceptHoverEvents"
                                                  >setAcceptHoverEvents</html:a></html:b>(bool<html:i>
                                                  enabled</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#setAcceptedMouseButtons"
                                                  >setAcceptedMouseButtons</html:a></html:b>(Qt::MouseButtons<html:i>
                                                  buttons</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#activeFocusOnTab-prop"
                                                  >setActiveFocusOnTab</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#antialiasing-prop"
                                                  >setAntialiasing</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#baselineOffset-prop"
                                                  >setBaselineOffset</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#clip-prop"
                                                  >setClip</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#setCursor"
                                                  >setCursor</html:a></html:b>(const QCursor
                                                  &amp;<html:i> cursor</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#enabled-prop"
                                                  >setEnabled</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#setFiltersChildMouseEvents"
                                                  >setFiltersChildMouseEvents</html:a></html:b>(bool<html:i>
                                                  filter</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#setFlag"
                                                  >setFlag</html:a></html:b>(Flag<html:i>
                                                  flag</html:i>, bool<html:i> enabled</html:i> =
                                                true)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#setFlags"
                                                  >setFlags</html:a></html:b>(Flags<html:i>
                                                  flags</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#focus-prop"
                                                  >setFocus</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#focus-prop"
                                                  >setFocus</html:a></html:b>(bool<html:i>
                                                  focus</html:i>, Qt::FocusReason<html:i>
                                                  reason</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#height-prop"
                                                  >setHeight</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#implicitHeight-prop"
                                                  >setImplicitHeight</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#implicitWidth-prop"
                                                  >setImplicitWidth</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#setKeepMouseGrab"
                                                  >setKeepMouseGrab</html:a></html:b>(bool<html:i>
                                                  keep</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#setKeepTouchGrab"
                                                  >setKeepTouchGrab</html:a></html:b>(bool<html:i>
                                                  keep</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#opacity-prop"
                                                  >setOpacity</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#parent-prop"
                                                  >setParentItem</html:a></html:b>(QQuickItem
                                                  *<html:i> parent</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#rotation-prop"
                                                  >setRotation</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#scale-prop"
                                                  >setScale</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#smooth-prop"
                                                  >setSmooth</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#state-prop"
                                                  >setState</html:a></html:b>(const QString
                                                &amp;)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#transformOrigin-prop"
                                                  >setTransformOrigin</html:a></html:b>(TransformOrigin)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#visible-prop"
                                                  >setVisible</html:a></html:b>(bool)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#width-prop"
                                                  >setWidth</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#x-prop"
                                                  >setX</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#y-prop"
                                                  >setY</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#z-prop"
                                                  >setZ</html:a></html:b>(qreal)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#smooth-prop"
                                                  >smooth</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#stackAfter"
                                                  >stackAfter</html:a></html:b>(const QQuickItem
                                                  *<html:i> sibling</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#stackBefore"
                                                  >stackBefore</html:a></html:b>(const QQuickItem
                                                  *<html:i> sibling</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QString </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#state-prop"
                                                  >state</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual QSGTextureProvider * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#textureProvider"
                                                  >textureProvider</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                TransformOrigin </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#transformOrigin-prop"
                                                  >transformOrigin</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#ungrabMouse"
                                                  >ungrabMouse</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#ungrabTouchPoints"
                                                  >ungrabTouchPoints</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#unsetCursor"
                                                  >unsetCursor</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#width-prop"
                                                  >width</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QQuickWindow * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#window"
                                                  >window</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#x-prop"
                                                  >x</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#y-prop"
                                                  >y</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#z-prop"
                                                  >z</html:a></html:b>() const</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">31 public functions inherited from <html:a
                                        href="qtcore/qobject.html#public-functions"
                                    >QObject</html:a></html:li>
                                <html:li class="fn">2 public functions inherited from <html:a
                                        href="qtqml/qqmlparserstatus.html#public-functions"
                                        >QQmlParserStatus</html:a></html:li>
                            </html:ul>
                            <html:a name="public-slots"></html:a>
                            <html:h2 id="public-slots">Public Slots</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#update"
                                                  >update</html:a></html:b>()</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">1 public slot inherited from <html:a
                                        href="qtcore/qobject.html#public-slots"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="signals"></html:a>
                            <html:h2 id="signals">Signals</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#windowChanged"
                                                  >windowChanged</html:a></html:b>(QQuickWindow
                                                  *<html:i> window</html:i>)</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">2 signals inherited from <html:a
                                        href="qtcore/qobject.html#signals"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="protected-functions"></html:a>
                            <html:h2 id="protected-functions">Protected Functions</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#childMouseEventFilter"
                                                  >childMouseEventFilter</html:a></html:b>(QQuickItem
                                                  *<html:i> item</html:i>, QEvent *<html:i>
                                                  event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#dragEnterEvent"
                                                  >dragEnterEvent</html:a></html:b>(QDragEnterEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#dragLeaveEvent"
                                                  >dragLeaveEvent</html:a></html:b>(QDragLeaveEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#dragMoveEvent"
                                                  >dragMoveEvent</html:a></html:b>(QDragMoveEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#dropEvent"
                                                  >dropEvent</html:a></html:b>(QDropEvent *<html:i>
                                                  event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#focusInEvent"
                                                  >focusInEvent</html:a></html:b>(QFocusEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#focusOutEvent"
                                                  >focusOutEvent</html:a></html:b>(QFocusEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#geometryChanged"
                                                  >geometryChanged</html:a></html:b>(const QRectF
                                                  &amp;<html:i> newGeometry</html:i>, const QRectF
                                                  &amp;<html:i> oldGeometry</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#heightValid"
                                                  >heightValid</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#hoverEnterEvent"
                                                  >hoverEnterEvent</html:a></html:b>(QHoverEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#hoverLeaveEvent"
                                                  >hoverLeaveEvent</html:a></html:b>(QHoverEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#hoverMoveEvent"
                                                  >hoverMoveEvent</html:a></html:b>(QHoverEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#inputMethodEvent"
                                                  >inputMethodEvent</html:a></html:b>(QInputMethodEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#isComponentComplete"
                                                  >isComponentComplete</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#itemChange"
                                                  >itemChange</html:a></html:b>(ItemChange<html:i>
                                                  change</html:i>, const ItemChangeData
                                                  &amp;<html:i> value</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#keyPressEvent"
                                                  >keyPressEvent</html:a></html:b>(QKeyEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#keyReleaseEvent"
                                                  >keyReleaseEvent</html:a></html:b>(QKeyEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mouseDoubleClickEvent"
                                                  >mouseDoubleClickEvent</html:a></html:b>(QMouseEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mouseMoveEvent"
                                                  >mouseMoveEvent</html:a></html:b>(QMouseEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mousePressEvent"
                                                  >mousePressEvent</html:a></html:b>(QMouseEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mouseReleaseEvent"
                                                  >mouseReleaseEvent</html:a></html:b>(QMouseEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#mouseUngrabEvent"
                                                  >mouseUngrabEvent</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#releaseResources"
                                                  >releaseResources</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#touchEvent"
                                                  >touchEvent</html:a></html:b>(QTouchEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#touchUngrabEvent"
                                                  >touchUngrabEvent</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#updateInputMethod"
                                                  >updateInputMethod</html:a></html:b>(Qt::InputMethodQueries<html:i>
                                                  queries</html:i> = Qt::ImQueryInput)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual QSGNode * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#updatePaintNode"
                                                  >updatePaintNode</html:a></html:b>(QSGNode
                                                  *<html:i> oldNode</html:i>, UpdatePaintNodeData
                                                  *<html:i> updatePaintNodeData</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#updatePolish"
                                                  >updatePolish</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#wheelEvent"
                                                  >wheelEvent</html:a></html:b>(QWheelEvent
                                                  *<html:i> event</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#widthValid"
                                                  >widthValid</html:a></html:b>() const</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:a name="reimplemented-protected-functions"></html:a>
                            <html:h2 id="reimplemented-protected-functions">Reimplemented Protected
                                Functions</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#classBegin"
                                                  >classBegin</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qquickitem.html#componentComplete"
                                                  >componentComplete</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qquickitem.html#event"
                                                  >event</html:a></html:b>(QEvent *<html:i>
                                                  ev</html:i>)</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">9 protected functions inherited from <html:a
                                        href="qtcore/qobject.html#protected-functions"
                                        >QObject</html:a></html:li>
                            </html:ul>
                            <html:h3>Additional Inherited Members</html:h3>
                            <html:ul>
                                <html:li class="fn">1 public variable inherited from <html:a
                                        href="qtcore/qobject.html#public-variables"
                                    >QObject</html:a></html:li>
                                <html:li class="fn">10 static public members inherited from <html:a
                                        href="qtcore/qobject.html#static-public-members"
                                        >QObject</html:a></html:li>
                                <html:li class="fn">2 protected variables inherited from <html:a
                                        href="qtcore/qobject.html#protected-variables"
                                        >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="details"></html:a>
                            <!-- $$$QQuickItem-description -->
                            <html:div class="descr">
                                <html:h2 id="details">Detailed Description</html:h2>
                                <html:p>The <html:a href="qquickitem.html">QQuickItem</html:a> class
                                    provides the most basic of all visual items in <html:a
                                        href="qtquick-index.html">Qt Quick</html:a>.</html:p>
                                <html:p>All visual items in Qt Quick inherit from <html:a
                                        href="qquickitem.html">QQuickItem</html:a>. Although a
                                        <html:a href="qquickitem.html">QQuickItem</html:a> instance
                                    has no visual appearance, it defines all the attributes that are
                                    common across visual items, such as x and y position, width and
                                    height, <html:a href="qtquick-positioning-anchors.html"
                                        >anchoring</html:a> and key handling support.</html:p>
                                <html:p>You can subclass <html:a href="qquickitem.html"
                                        >QQuickItem</html:a> to provide your own custom visual item
                                    that inherits these features.</html:p>
                                <html:a name="custom-scene-graph-items"></html:a>
                                <html:h3>Custom Scene Graph Items</html:h3>
                                <html:p>All visual QML items are rendered using the scene graph, a
                                    low-level, high-performance rendering stack, closely tied to
                                    OpenGL. It is possible for subclasses of <html:a
                                        href="qquickitem.html">QQuickItem</html:a> to add their own
                                    custom content into the scene graph by setting the <html:a
                                        href="qquickitem.html#Flag-enum"
                                        >QQuickItem::ItemHasContents</html:a> flag and
                                    reimplementing the <html:a
                                        href="qquickitem.html#updatePaintNode"
                                        >QQuickItem::updatePaintNode</html:a>() function.</html:p>
                                <html:p><html:b>Warning:</html:b> It is crucial that OpenGL
                                    operations and interaction with the scene graph happens
                                    exclusively on the rendering thread, primarily during the
                                        <html:a href="qquickitem.html#updatePaintNode"
                                        >updatePaintNode</html:a>() call. The best rule of thumb is
                                    to only use classes with the "QSG" prefix inside the <html:a
                                        href="qquickitem.html#updatePaintNode"
                                        >QQuickItem::updatePaintNode</html:a>() function.</html:p>
                                <html:p><html:b>Note: </html:b>All classes with QSG prefix should be
                                    used solely on the scene graph's rendering thread. See <html:a
                                        href="qtquick-visualcanvas-scenegraph.html#scene-graph-and-rendering"
                                        >Scene Graph and Rendering</html:a> for more
                                    information.</html:p><html:a name="graphics-resource-handling"></html:a>
                                <html:h4>Graphics Resource Handling</html:h4>
                                <html:p>The preferred way to handle cleanup of graphics resources
                                    used in the scene graph, is to rely on the automatic cleanup of
                                    nodes. A <html:a href="qsgnode.html">QSGNode</html:a> returned
                                    from <html:a href="qquickitem.html#updatePaintNode"
                                        >QQuickItem::updatePaintNode</html:a>() is automatically
                                    deleted on the right thread at the right time. Trees of <html:a
                                        href="qsgnode.html">QSGNode</html:a> instances are managed
                                    through the use of <html:a href="qsgnode.html#Flag-enum"
                                        >QSGNode::OwnedByParent</html:a>, which is set by default.
                                    So, for the majority of custom scene graph items, no extra work
                                    will be required.</html:p>
                                <html:p>Implementations that store graphics resources outside the
                                    node tree, such as an item implementing <html:a
                                        href="qquickitem.html#textureProvider"
                                        >QQuickItem::textureProvider</html:a>(), will need to take
                                    care in cleaning it up correctly depending on how the item is
                                    used in QML. The situations to handle are:</html:p>
                                <html:ul>
                                    <html:li>The scene graph is invalidated; This can happen, for
                                        instance, if the window is hidden using <html:a
                                            href="qtgui/qwindow.html#hide"
                                            >QQuickWindow::hide</html:a>(). If the item class
                                        implements a <html:code>slot</html:code> named
                                            <html:code>invalidateSceneGraph()</html:code>, this slot
                                        will be called on the rendering thread while the GUI thread
                                        is blocked. This is equivalent to connecting to <html:a
                                            href="qquickwindow.html#sceneGraphInvalidated"
                                            >QQuickWindow::sceneGraphInvalidated</html:a>(). The
                                        OpenGL context of this item's window will be bound when this
                                        slot is called. The only exception is if the native OpenGL
                                        has been destroyed outside Qt's control, for instance
                                        through <html:code>EGL_CONTEXT_LOST</html:code>.</html:li>
                                    <html:li>The item is removed from the scene; If an item is taken
                                        out of the scene, for instance because it's parent was set
                                        to <html:code>null</html:code> or an item in another window,
                                        the <html:a href="qquickitem.html#releaseResources"
                                            >QQuickItem::releaseResources</html:a>() will be called
                                        on the GUI thread. <html:a
                                            href="qquickwindow.html#scheduleRenderJob"
                                            >QQuickWindow::scheduleRenderJob</html:a>() should be
                                        used to schedule cleanup of rendering resources.</html:li>
                                    <html:li>The item is deleted; When the destructor if an item
                                        runs, it should delete any graphics resources it has. If
                                        neither of the two conditions above were already met, the
                                        item will be part of a window and it is possible to use
                                            <html:a href="qquickwindow.html#scheduleRenderJob"
                                            >QQuickWindow::scheduleRenderJob</html:a>() to have them
                                        cleaned up. If an implementation ignores the call to <html:a
                                            href="qquickitem.html#releaseResources"
                                            >QQuickItem::releaseResources</html:a>(), the item will
                                        in many cases no longer have access to a <html:a
                                            href="qquickwindow.html">QQuickWindow</html:a> and thus
                                        no means of scheduling cleanup.</html:li>
                                </html:ul>
                                <html:p>When scheduling cleanup of graphics resources using <html:a
                                        href="qquickwindow.html#scheduleRenderJob"
                                        >QQuickWindow::scheduleRenderJob</html:a>(), one should use
                                    either <html:a href="qquickwindow.html#RenderStage-enum"
                                        >QQuickWindow::BeforeSynchronizingStage</html:a> or <html:a
                                        href="qquickwindow.html#RenderStage-enum"
                                        >QQuickWindow::AfterSynchronizingStage</html:a>. The <html:a
                                        href="qtquick-visualcanvas-scenegraph.html#scene-graph-and-rendering"
                                        >synchronization stage</html:a> is where the scene graph is
                                    changed as a result of changes to the QML tree. If cleanup is
                                    scheduled at any other time, it may result in other parts of the
                                    scene graph referencing the newly deleted objects as these parts
                                    have not been updated.</html:p>
                                <html:p><html:b>Note: </html:b>Use of <html:a
                                        href="qtcore/qobject.html#deleteLater"
                                        >QObject::deleteLater</html:a>() to clean up graphics
                                    resources is not recommended as this will run at an arbitrary
                                    time and it is unknown if there will be an OpenGL context bound
                                    when the deletion takes place.</html:p><html:a
                                    name="custom-qpainter-items"></html:a>
                                <html:h3>Custom QPainter Items</html:h3>
                                <html:p>The <html:a href="qquickitem.html">QQuickItem</html:a>
                                    provides a subclass, <html:a href="qquickpainteditem.html"
                                        >QQuickPaintedItem</html:a>, which allows the users to
                                    render content using <html:a href="qtgui/qpainter.html"
                                        >QPainter</html:a>.</html:p>
                                <html:p><html:b>Warning:</html:b> Using <html:a
                                        href="qquickpainteditem.html">QQuickPaintedItem</html:a>
                                    uses an indirect 2D surface to render its content, either using
                                    software rasterization or using an OpenGL framebuffer object
                                    (FBO), so the rendering is a two-step operation. First rasterize
                                    the surface, then draw the surface. Using scene graph API
                                    directly is always significantly faster.</html:p>
                                <html:a name="behavior-animations"></html:a>
                                <html:h3>Behavior Animations</html:h3>
                                <html:p>If your Item uses the <html:a
                                        href="qml-qtquick-behavior.html">Behavior</html:a> type to
                                    define animations for property changes, you should always use
                                    either <html:a href="qtcore/qobject.html#setProperty"
                                        >QObject::setProperty</html:a>(), QQmlProperty(), or <html:a
                                        href="qtcore/qmetaproperty.html#write"
                                        >QMetaProperty::write</html:a>() when you need to modify
                                    those properties from C++. This ensures that the QML engine
                                    knows about the property change. Otherwise, the engine won't be
                                    able to carry out your requested animation. Note that these
                                    functions incur a slight performance penalty. For more details,
                                    see <html:a
                                        href="qtqml/qtqml-cppintegration-interactqmlfromcpp.html#accessing-members-of-a-qml-object-type-from-c"
                                        >Accessing Members of a QML Object Type from
                                    C++</html:a>.</html:p>
                            </html:div>
                            <html:p><html:b>See also </html:b><html:a href="qquickwindow.html"
                                    >QQuickWindow</html:a> and <html:a href="qquickpainteditem.html"
                                    >QQuickPaintedItem</html:a>.</html:p>
                            <!-- @@@QQuickItem -->
                            <html:div class="types">
                                <html:h2>Member Type Documentation</html:h2>
                                <!-- $$$Flag$$$ItemClipsChildrenToShape$$$ItemAcceptsInputMethod$$$ItemIsFocusScope$$$ItemHasContents$$$ItemAcceptsDrops -->
                                <html:h3 class="flags" id="Flag-enum"><html:a name="Flag-enum"
                                    ></html:a>enum QQuickItem::<html:span class="name"
                                        >Flag</html:span><html:br />flags QQuickItem::<html:span
                                        class="name">Flags</html:span></html:h3>
                                <html:p>This enum type is used to specify various item
                                    properties.</html:p>
                                <html:div class="table"><html:table class="valuelist">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:th class="tblConst">Constant</html:th>
                                                <html:th class="tblval">Value</html:th>
                                                <html:th class="tbldscr">Description</html:th>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemClipsChildrenToShape</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0x01</html:code></html:td>
                                                <html:td class="topAlign">Indicates this item should
                                                  visually clip its children so that they are
                                                  rendered only within the boundaries of this
                                                  item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemAcceptsInputMethod</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0x02</html:code></html:td>
                                                <html:td class="topAlign">Indicates the item
                                                  supports text input methods.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemIsFocusScope</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0x04</html:code></html:td>
                                                <html:td class="topAlign">Indicates the item is a
                                                  focus scope. See <html:a
                                                  href="qtquick-input-focus.html">Keyboard Focus in
                                                  Qt Quick</html:a> for more information.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemHasContents</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0x08</html:code></html:td>
                                                <html:td class="topAlign">Indicates the item has
                                                  visual content and should be rendered by the scene
                                                  graph.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemAcceptsDrops</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0x10</html:code></html:td>
                                                <html:td class="topAlign">Indicates the item accepts
                                                  drag and drop events.</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p>The Flags type is a typedef for <html:a
                                        href="qtcore/qflags.html">QFlags</html:a>&lt;Flag&gt;. It
                                    stores an OR combination of Flag values.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setFlag">setFlag</html:a>(), <html:a
                                        href="qquickitem.html#setFlags">setFlags</html:a>(), and
                                        <html:a href="qquickitem.html#flags"
                                    >flags</html:a>().</html:p>
                                <!-- @@@Flag -->
                                <!-- $$$ItemChange$$$ItemChildAddedChange$$$ItemChildRemovedChange$$$ItemSceneChange$$$ItemVisibleHasChanged$$$ItemParentHasChanged$$$ItemOpacityHasChanged$$$ItemActiveFocusHasChanged$$$ItemRotationHasChanged$$$ItemAntialiasingHasChanged -->
                                <html:h3 class="fn" id="ItemChange-enum"><html:a
                                        name="ItemChange-enum"></html:a>enum QQuickItem::<html:span
                                        class="name">ItemChange</html:span></html:h3>
                                <html:p>Used in conjunction with <html:a
                                        href="qquickitem.html#itemChange"
                                        >QQuickItem::itemChange</html:a>() to notify the item about
                                    certain types of changes.</html:p>
                                <html:div class="table"><html:table class="valuelist">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:th class="tblConst">Constant</html:th>
                                                <html:th class="tblval">Value</html:th>
                                                <html:th class="tbldscr">Description</html:th>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemChildAddedChange</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0</html:code></html:td>
                                                <html:td class="topAlign">A child was added. <html:a
                                                  href="qquickitem-itemchangedata.html#item-var"
                                                  >ItemChangeData::item</html:a> contains the added
                                                  child.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemChildRemovedChange</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>1</html:code></html:td>
                                                <html:td class="topAlign">A child was removed.
                                                  <html:a
                                                  href="qquickitem-itemchangedata.html#item-var"
                                                  >ItemChangeData::item</html:a> contains the
                                                  removed child.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemSceneChange</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>2</html:code></html:td>
                                                <html:td class="topAlign">The item was added to or
                                                  removed from a scene. The <html:a
                                                  href="qquickwindow.html">QQuickWindow</html:a>
                                                  rendering the scene is specified in using <html:a
                                                  href="qquickitem-itemchangedata.html#window-var"
                                                  >ItemChangeData::window</html:a>. The window
                                                  parameter is null when the item is removed from a
                                                  scene.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemVisibleHasChanged</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>3</html:code></html:td>
                                                <html:td class="topAlign">The item's visibility has
                                                  changed. <html:a
                                                  href="qquickitem-itemchangedata.html#boolValue-var"
                                                  >ItemChangeData::boolValue</html:a> contains the
                                                  new visibility.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemParentHasChanged</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>4</html:code></html:td>
                                                <html:td class="topAlign">The item's parent has
                                                  changed. <html:a
                                                  href="qquickitem-itemchangedata.html#item-var"
                                                  >ItemChangeData::item</html:a> contains the new
                                                  parent.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemOpacityHasChanged</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>5</html:code></html:td>
                                                <html:td class="topAlign">The item's opacity has
                                                  changed. <html:a
                                                  href="qquickitem-itemchangedata.html#realValue-var"
                                                  >ItemChangeData::realValue</html:a> contains the
                                                  new opacity.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemActiveFocusHasChanged</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>6</html:code></html:td>
                                                <html:td class="topAlign">The item's focus has
                                                  changed. <html:a
                                                  href="qquickitem-itemchangedata.html#boolValue-var"
                                                  >ItemChangeData::boolValue</html:a> contains
                                                  whether the item has focus or not.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::ItemRotationHasChanged</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>7</html:code></html:td>
                                                <html:td class="topAlign">The item's rotation has
                                                  changed. <html:a
                                                  href="qquickitem-itemchangedata.html#realValue-var"
                                                  >ItemChangeData::realValue</html:a> contains the
                                                  new rotation.</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@ItemChange -->
                                <!-- $$$TransformOrigin$$$TopLeft$$$Top$$$TopRight$$$Left$$$Center$$$Right$$$BottomLeft$$$Bottom$$$BottomRight -->
                                <html:h3 class="fn" id="TransformOrigin-enum"><html:a
                                        name="TransformOrigin-enum"></html:a>enum
                                        QQuickItem::<html:span class="name"
                                        >TransformOrigin</html:span></html:h3>
                                <html:p>Controls the point about which simple transforms like scale
                                    apply.</html:p>
                                <html:div class="table"><html:table class="valuelist">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:th class="tblConst">Constant</html:th>
                                                <html:th class="tblval">Value</html:th>
                                                <html:th class="tbldscr">Description</html:th>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::TopLeft</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0</html:code></html:td>
                                                <html:td class="topAlign">The top-left corner of the
                                                  item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::Top</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>1</html:code></html:td>
                                                <html:td class="topAlign">The center point of the
                                                  top of the item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::TopRight</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>2</html:code></html:td>
                                                <html:td class="topAlign">The top-right corner of
                                                  the item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::Left</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>3</html:code></html:td>
                                                <html:td class="topAlign">The left most point of the
                                                  vertical middle.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::Center</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>4</html:code></html:td>
                                                <html:td class="topAlign">The center of the
                                                  item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::Right</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>5</html:code></html:td>
                                                <html:td class="topAlign">The right most point of
                                                  the vertical middle.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::BottomLeft</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>6</html:code></html:td>
                                                <html:td class="topAlign">The bottom-left corner of
                                                  the item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::Bottom</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>7</html:code></html:td>
                                                <html:td class="topAlign">The center point of the
                                                  bottom of the item.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQuickItem::BottomRight</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>8</html:code></html:td>
                                                <html:td class="topAlign">The bottom-right corner of
                                                  the item.</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#transformOrigin-prop"
                                        >transformOrigin</html:a>() and <html:a
                                        href="qquickitem.html#transformOrigin-prop"
                                        >setTransformOrigin</html:a>().</html:p>
                                <!-- @@@TransformOrigin -->
                            </html:div>
                            <html:div class="prop">
                                <html:h2>Property Documentation</html:h2>
                                <!-- $$$activeFocus-prop$$$hasActiveFocus -->
                                <html:h3 class="fn" id="activeFocus-prop"><html:a
                                        name="activeFocus-prop"></html:a><html:span class="name"
                                        >activeFocus</html:span> : const <html:span class="type"
                                        >bool</html:span></html:h3>
                                <html:p>This read-only property indicates whether the item has
                                    active focus.</html:p>
                                <html:p>If activeFocus is true, either this item is the one that
                                    currently receives keyboard input, or it is a <html:a
                                        href="qml-qtquick-focusscope.html">FocusScope</html:a>
                                    ancestor of the item that currently receives keyboard
                                    input.</html:p>
                                <html:p>Usually, activeFocus is gained by setting <html:a
                                        href="qquickitem.html#focus-prop">focus</html:a> on an item
                                    and its enclosing <html:a href="qml-qtquick-focusscope.html"
                                        >FocusScope</html:a> objects. In the following example, the
                                        <html:code>input</html:code> and
                                        <html:code>focusScope</html:code> objects will have active
                                    focus, while the root rectangle object will not.</html:p>
                                <html:pre class="qml">import QtQuick 2.0 <html:span class="type"
                                            ><html:a href="qml-qtquick-rectangle.html"
                                            >Rectangle</html:a></html:span> { <html:span
                                        class="name">width</html:span>: <html:span class="number"
                                        >100</html:span>; <html:span class="name"
                                    >height</html:span>: <html:span class="number">100</html:span>
                                    <html:span class="type"><html:a
                                            href="qml-qtquick-focusscope.html"
                                        >FocusScope</html:a></html:span> { <html:span class="name"
                                        >focus</html:span>: <html:span class="number"
                                        >true</html:span>
                                    <html:span class="type"><html:a
                                            href="qml-qtquick-textinput.html"
                                        >TextInput</html:a></html:span> { <html:span class="name"
                                        >id</html:span>: <html:span class="name">input</html:span>
                                    <html:span class="name">focus</html:span>: <html:span
                                        class="number">true</html:span> } } }</html:pre>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>hasActiveFocus</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#focus-prop">focus</html:a> and <html:a
                                        href="qtquick-input-focus.html">Keyboard Focus in Qt
                                        Quick</html:a>.</html:p>
                                <!-- @@@activeFocus -->
                                <!-- $$$activeFocusOnTab-prop$$$activeFocusOnTab$$$setActiveFocusOnTabbool -->
                                <html:h3 class="fn" id="activeFocusOnTab-prop"><html:a
                                        name="activeFocusOnTab-prop"></html:a><html:span
                                        class="name">activeFocusOnTab</html:span> : <html:span
                                        class="type">bool</html:span></html:h3>
                                <html:p>This property holds whether the item wants to be in tab
                                    focus chain. By default this is set to false.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>activeFocusOnTab</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setActiveFocusOnTab</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@activeFocusOnTab -->
                                <!-- $$$antialiasing-prop$$$antialiasing$$$setAntialiasingbool$$$resetAntialiasing -->
                                <html:h3 class="fn" id="antialiasing-prop"><html:a
                                        name="antialiasing-prop"></html:a><html:span class="name"
                                        >antialiasing</html:span> : <html:span class="type"
                                        >bool</html:span></html:h3>
                                <html:p>This property specifies whether the item is antialiased or
                                    not.</html:p>
                                <html:p>Used by visual elements to decide if the item should use
                                    antialiasing or not. In some cases items with antialiasing
                                    require more memory and are potentially slower to render (see
                                        <html:a
                                        href="qtquick-visualcanvas-scenegraph-renderer.html#antialiasing"
                                        >Antialiasing</html:a> for more details).</html:p>
                                <html:p>The default is false, but may be overridden by derived
                                    elements.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>antialiasing</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setAntialiasing</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>resetAntialiasing</html:b></html:span>()</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@antialiasing -->
                                <!-- $$$baselineOffset-prop$$$baselineOffset$$$setBaselineOffsetqreal -->
                                <html:h3 class="fn" id="baselineOffset-prop"><html:a
                                        name="baselineOffset-prop"></html:a><html:span class="name"
                                        >baselineOffset</html:span> : <html:span class="type"
                                            ><html:a href="qtcore/qtglobal.html#qreal-typedef"
                                            >qreal</html:a></html:span></html:h3>
                                <html:p>Specifies the position of the item's baseline in local
                                    coordinates.</html:p>
                                <html:p>The baseline of a <html:a href="qml-qtquick-text.html"
                                        >Text</html:a> item is the imaginary line on which the text
                                    sits. Controls containing text usually set their baseline to the
                                    baseline of their text.</html:p>
                                <html:p>For non-text items, a default baseline offset of 0 is
                                    used.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>baselineOffset</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setBaselineOffset</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@baselineOffset -->
                                <!-- $$$childrenRect-prop$$$childrenRect -->
                                <html:h3 class="fn" id="childrenRect-prop"><html:a
                                        name="childrenRect-prop"></html:a><html:span class="name"
                                        >childrenRect</html:span> : const <html:span class="type"
                                            ><html:a href="qtcore/qrectf.html"
                                        >QRectF</html:a></html:span></html:h3>
                                <html:p>This property holds the collective position and size of the
                                    item's children.</html:p>
                                <html:p>This property is useful if you need to access the collective
                                    geometry of an item's children in order to correctly size the
                                    item.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  QRectF </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>childrenRect</html:b></html:span>()</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@childrenRect -->
                                <!-- $$$clip-prop$$$clip$$$setClipbool -->
                                <html:h3 class="fn" id="clip-prop"><html:a name="clip-prop"
                                        ></html:a><html:span class="name">clip</html:span> :
                                        <html:span class="type">bool</html:span></html:h3>
                                <html:p>This property holds whether clipping is enabled. The default
                                    clip value is <html:code>false</html:code>.</html:p>
                                <html:p>If clipping is enabled, an item will clip its own painting,
                                    as well as the painting of its children, to its bounding
                                    rectangle. If you set clipping during an item's paint operation,
                                    remember to re-set it to prevent clipping the rest of your
                                    scene.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>clip</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setClip</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@clip -->
                                <!-- $$$enabled-prop$$$isEnabled$$$setEnabledbool -->
                                <html:h3 class="fn" id="enabled-prop"><html:a name="enabled-prop"
                                        ></html:a><html:span class="name">enabled</html:span> :
                                        <html:span class="type">bool</html:span></html:h3>
                                <html:p>This property holds whether the item receives mouse and
                                    keyboard events. By default this is true.</html:p>
                                <html:p>Setting this property directly affects the
                                        <html:code>enabled</html:code> value of child items. When
                                    set to <html:code>false</html:code>, the
                                        <html:code>enabled</html:code> values of all child items
                                    also become <html:code>false</html:code>. When set to
                                        <html:code>true</html:code>, the
                                        <html:code>enabled</html:code> values of child items are
                                    returned to <html:code>true</html:code>, unless they have
                                    explicitly been set to <html:code>false</html:code>.</html:p>
                                <html:p>Setting this property to <html:code>false</html:code>
                                    automatically causes <html:a
                                        href="qquickitem.html#activeFocus-prop">activeFocus</html:a>
                                    to be set to <html:code>false</html:code>, and this item will
                                    longer receive keyboard events.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>isEnabled</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setEnabled</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#visible-prop"
                                    >visible</html:a>.</html:p>
                                <!-- @@@enabled -->
                                <!-- $$$focus-prop$$$hasFocus$$$setFocusbool$$$setFocusboolQt::FocusReason -->
                                <html:h3 class="fn" id="focus-prop"><html:a name="focus-prop"
                                        ></html:a><html:span class="name">focus</html:span> :
                                        <html:span class="type">bool</html:span></html:h3>
                                <html:p>This property holds whether the item has focus within the
                                    enclosing <html:a href="qml-qtquick-focusscope.html"
                                        >FocusScope</html:a>. If true, this item will gain active
                                    focus when the enclosing <html:a
                                        href="qml-qtquick-focusscope.html">FocusScope</html:a> gains
                                    active focus.</html:p>
                                <html:p>In the following example, <html:code>input</html:code> will
                                    be given active focus when <html:code>scope</html:code> gains
                                    active focus:</html:p>
                                <html:pre class="qml">import QtQuick 2.0 <html:span class="type"
                                            ><html:a href="qml-qtquick-rectangle.html"
                                            >Rectangle</html:a></html:span> { <html:span
                                        class="name">width</html:span>: <html:span class="number"
                                        >100</html:span>; <html:span class="name"
                                    >height</html:span>: <html:span class="number">100</html:span>
                                    <html:span class="type"><html:a
                                            href="qml-qtquick-focusscope.html"
                                        >FocusScope</html:a></html:span> { <html:span class="name"
                                        >id</html:span>: <html:span class="name">scope</html:span>
                                    <html:span class="type"><html:a
                                            href="qml-qtquick-textinput.html"
                                        >TextInput</html:a></html:span> { <html:span class="name"
                                        >id</html:span>: <html:span class="name">input</html:span>
                                    <html:span class="name">focus</html:span>: <html:span
                                        class="number">true</html:span> } } }</html:pre>
                                <html:p>For the purposes of this property, the scene as a whole is
                                    assumed to act like a focus scope. On a practical level, that
                                    means the following QML will give active focus to
                                        <html:code>input</html:code> on startup.</html:p>
                                <html:pre class="qml"><html:span class="type"><html:a
                                            href="qml-qtquick-rectangle.html"
                                        >Rectangle</html:a></html:span> { <html:span class="name"
                                        >width</html:span>: <html:span class="number"
                                        >100</html:span>; <html:span class="name"
                                    >height</html:span>: <html:span class="number">100</html:span>
                                    <html:span class="type"><html:a
                                            href="qml-qtquick-textinput.html"
                                        >TextInput</html:a></html:span> { <html:span class="name"
                                        >id</html:span>: <html:span class="name">input</html:span>
                                    <html:span class="name">focus</html:span>: <html:span
                                        class="number">true</html:span> } }</html:pre>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>hasFocus</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setFocus</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setFocus</html:b></html:span>(bool<html:i>
                                                  focus</html:i>, Qt::FocusReason<html:i>
                                                  reason</html:i>)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#activeFocus-prop">activeFocus</html:a>
                                    and <html:a href="qtquick-input-focus.html">Keyboard Focus in Qt
                                        Quick</html:a>.</html:p>
                                <!-- @@@focus -->
                                <!-- $$$height-prop$$$height$$$setHeightqreal$$$resetHeight -->
                                <html:h3 class="fn" id="height-prop"><html:a name="height-prop"
                                        ></html:a><html:span class="name">height</html:span> :
                                        <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>This property holds the height of this item.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>height</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setHeight</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>resetHeight</html:b></html:span>()</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@height -->
                                <!-- $$$implicitHeight-prop$$$implicitHeight$$$setImplicitHeightqreal -->
                                <html:h3 class="fn" id="implicitHeight-prop"><html:a
                                        name="implicitHeight-prop"></html:a><html:span class="name"
                                        >implicitHeight</html:span> : <html:span class="type"
                                            ><html:a href="qtcore/qtglobal.html#qreal-typedef"
                                            >qreal</html:a></html:span></html:h3>
                                <html:p>Defines the natural width or height of the Item if no
                                        <html:a href="qquickitem.html#width-prop">width</html:a> or
                                        <html:a href="qquickitem.html#height-prop">height</html:a>
                                    is specified.</html:p>
                                <html:p>The default implicit size for most items is 0x0, however
                                    some items have an inherent implicit size which cannot be
                                    overridden, e.g. Image, Text.</html:p>
                                <html:p>Setting the implicit size is useful for defining components
                                    that have a preferred size based on their content, for
                                    example:</html:p>
                                <html:pre class="qml"><html:span class="comment">//
                                        Label.qml</html:span> import QtQuick 2.0 <html:span
                                        class="type"><html:a href="qml-qtquick-item.html"
                                            >Item</html:a></html:span> { property <html:span
                                        class="type">alias</html:span>
                                    <html:span class="name">icon</html:span>: <html:span
                                        class="name">image</html:span>.<html:span class="name"
                                        >source</html:span> property <html:span class="type"
                                        >alias</html:span>
                                    <html:span class="name">label</html:span>: <html:span
                                        class="name">text</html:span>.<html:span class="name"
                                        >text</html:span>
                                    <html:span class="name">implicitWidth</html:span>: <html:span
                                        class="name">text</html:span>.<html:span class="name"
                                        >implicitWidth</html:span>
                                    <html:span class="operator">+</html:span>
                                    <html:span class="name">image</html:span>.<html:span
                                        class="name">implicitWidth</html:span>
                                    <html:span class="name">implicitHeight</html:span>: <html:span
                                        class="name">Math</html:span>.<html:span class="name"
                                        >max</html:span>(<html:span class="name"
                                        >text</html:span>.<html:span class="name"
                                        >implicitHeight</html:span>, <html:span class="name"
                                        >image</html:span>.<html:span class="name"
                                        >implicitHeight</html:span>) <html:span class="type"><html:a
                                            href="qml-qtquick-image.html">Image</html:a></html:span>
                                    { <html:span class="name">id</html:span>: <html:span
                                        class="name">image</html:span> } <html:span class="type"
                                            ><html:a href="qml-qtquick-text.html"
                                        >Text</html:a></html:span> { <html:span class="name"
                                        >id</html:span>: <html:span class="name">text</html:span>
                                    <html:span class="name">wrapMode</html:span>: <html:span
                                        class="name">Text</html:span>.<html:span class="name"
                                        >Wrap</html:span>
                                    <html:span class="name">anchors</html:span>.left: <html:span
                                        class="name">image</html:span>.<html:span class="name"
                                        >right</html:span>; <html:span class="name"
                                        >anchors</html:span>.right: <html:span class="name"
                                        >parent</html:span>.<html:span class="name"
                                        >right</html:span>
                                    <html:span class="name">anchors</html:span>.verticalCenter:
                                        <html:span class="name">parent</html:span>.<html:span
                                        class="name">verticalCenter</html:span> } }</html:pre>
                                <html:p><html:b>Note</html:b>: using <html:a
                                        href="qquickitem.html#implicitWidth-prop"
                                        >implicitWidth</html:a> of Text or <html:a
                                        href="qml-qtquick-textedit.html">TextEdit</html:a> and
                                    setting the width explicitly incurs a performance penalty as the
                                    text must be laid out twice.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>implicitHeight</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setImplicitHeight</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@implicitHeight -->
                                <!-- $$$implicitWidth-prop$$$implicitWidth$$$setImplicitWidthqreal -->
                                <html:h3 class="fn" id="implicitWidth-prop"><html:a
                                        name="implicitWidth-prop"></html:a><html:span class="name"
                                        >implicitWidth</html:span> : <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>Defines the natural width or height of the Item if no
                                        <html:a href="qquickitem.html#width-prop">width</html:a> or
                                        <html:a href="qquickitem.html#height-prop">height</html:a>
                                    is specified.</html:p>
                                <html:p>The default implicit size for most items is 0x0, however
                                    some items have an inherent implicit size which cannot be
                                    overridden, e.g. Image, Text.</html:p>
                                <html:p>Setting the implicit size is useful for defining components
                                    that have a preferred size based on their content, for
                                    example:</html:p>
                                <html:pre class="qml"><html:span class="comment">//
                                        Label.qml</html:span> import QtQuick 2.0 <html:span
                                        class="type"><html:a href="qml-qtquick-item.html"
                                            >Item</html:a></html:span> { property <html:span
                                        class="type">alias</html:span>
                                    <html:span class="name">icon</html:span>: <html:span
                                        class="name">image</html:span>.<html:span class="name"
                                        >source</html:span> property <html:span class="type"
                                        >alias</html:span>
                                    <html:span class="name">label</html:span>: <html:span
                                        class="name">text</html:span>.<html:span class="name"
                                        >text</html:span>
                                    <html:span class="name">implicitWidth</html:span>: <html:span
                                        class="name">text</html:span>.<html:span class="name"
                                        >implicitWidth</html:span>
                                    <html:span class="operator">+</html:span>
                                    <html:span class="name">image</html:span>.<html:span
                                        class="name">implicitWidth</html:span>
                                    <html:span class="name">implicitHeight</html:span>: <html:span
                                        class="name">Math</html:span>.<html:span class="name"
                                        >max</html:span>(<html:span class="name"
                                        >text</html:span>.<html:span class="name"
                                        >implicitHeight</html:span>, <html:span class="name"
                                        >image</html:span>.<html:span class="name"
                                        >implicitHeight</html:span>) <html:span class="type"><html:a
                                            href="qml-qtquick-image.html">Image</html:a></html:span>
                                    { <html:span class="name">id</html:span>: <html:span
                                        class="name">image</html:span> } <html:span class="type"
                                            ><html:a href="qml-qtquick-text.html"
                                        >Text</html:a></html:span> { <html:span class="name"
                                        >id</html:span>: <html:span class="name">text</html:span>
                                    <html:span class="name">wrapMode</html:span>: <html:span
                                        class="name">Text</html:span>.<html:span class="name"
                                        >Wrap</html:span>
                                    <html:span class="name">anchors</html:span>.left: <html:span
                                        class="name">image</html:span>.<html:span class="name"
                                        >right</html:span>; <html:span class="name"
                                        >anchors</html:span>.right: <html:span class="name"
                                        >parent</html:span>.<html:span class="name"
                                        >right</html:span>
                                    <html:span class="name">anchors</html:span>.verticalCenter:
                                        <html:span class="name">parent</html:span>.<html:span
                                        class="name">verticalCenter</html:span> } }</html:pre>
                                <html:p><html:b>Note</html:b>: using implicitWidth of Text or
                                        <html:a href="qml-qtquick-textedit.html">TextEdit</html:a>
                                    and setting the width explicitly incurs a performance penalty as
                                    the text must be laid out twice.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>implicitWidth</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setImplicitWidth</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@implicitWidth -->
                                <!-- $$$opacity-prop$$$opacity$$$setOpacityqreal -->
                                <html:h3 class="fn" id="opacity-prop"><html:a name="opacity-prop"
                                        ></html:a><html:span class="name">opacity</html:span> :
                                        <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>This property holds the opacity of the item. Opacity is
                                    specified as a number between 0.0 (fully transparent) and 1.0
                                    (fully opaque). The default value is 1.0.</html:p>
                                <html:p>When this property is set, the specified opacity is also
                                    applied individually to child items. This may have an unintended
                                    effect in some circumstances. For example in the second set of
                                    rectangles below, the red rectangle has specified an opacity of
                                    0.5, which affects the opacity of its blue child rectangle even
                                    though the child has not specified an opacity.</html:p>
                                <html:p>Values outside the range of 0 to 1 will be clamped.</html:p>
                                <html:div class="table"><html:table class="generic">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-item_opacity1.png"
                                                   /></html:p></html:td>
                                                <html:td><html:pre class="qml"><html:span
                                                  class="type"><html:a href="qml-qtquick-item.html"
                                                  >Item</html:a></html:span> { <html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"red"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span>
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">100</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">100</html:span> } } }</html:pre>
                                                </html:td>
                                            </html:tr>
                                            <html:tr class="even" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-item_opacity2.png"
                                                   /></html:p></html:td>
                                                <html:td><html:pre class="qml"><html:span
                                                  class="type"><html:a href="qml-qtquick-item.html"
                                                  >Item</html:a></html:span> { <html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">opacity</html:span>: <html:span
                                                  class="number">0.5</html:span>
                                                  <html:span class="name">color</html:span>:
                                                  <html:span class="string">"red"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span>
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">100</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">100</html:span> } } }</html:pre>
                                                </html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p>Changing an item's opacity does not affect whether the item
                                    receives user input events. (In contrast, setting <html:a
                                        href="qquickitem.html#visible-prop">visible</html:a>
                                    property to <html:code>false</html:code> stops mouse events, and
                                    setting the <html:a href="qquickitem.html#enabled-prop"
                                        >enabled</html:a> property to <html:code>false</html:code>
                                    stops mouse and keyboard events, and also removes active focus
                                    from the item.)</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>opacity</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setOpacity</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#visible-prop"
                                    >visible</html:a>.</html:p>
                                <!-- @@@opacity -->
                                <!-- $$$parent-prop$$$parentItem$$$setParentItemQQuickItem* -->
                                <html:h3 class="fn" id="parent-prop"><html:a name="parent-prop"
                                        ></html:a><html:span class="name">parent</html:span> :
                                        <html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> *</html:h3>
                                <html:p>This property holds the visual parent of the item.</html:p>
                                <html:p><html:b>Note: </html:b>The concept of the <html:i>visual
                                        parent</html:i> differs from that of the <html:i><html:a
                                            href="qtcore/qobject.html">QObject</html:a>
                                        parent</html:i>. An item's visual parent may not necessarily
                                    be the same as its object parent. See <html:a
                                        href="qtquick-visualcanvas-visualparent.html">Concepts -
                                        Visual Parent in Qt Quick</html:a> for more
                                    details.</html:p><html:p><html:b>Access
                                    functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  QQuickItem * </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>parentItem</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setParentItem</html:b></html:span>(QQuickItem
                                                  *<html:i> parent</html:i>)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@parent -->
                                <!-- $$$rotation-prop$$$rotation$$$setRotationqreal -->
                                <html:h3 class="fn" id="rotation-prop"><html:a name="rotation-prop"
                                        ></html:a><html:span class="name">rotation</html:span> :
                                        <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>This property holds the rotation of the item in degrees
                                    clockwise around its <html:a
                                        href="qquickitem.html#transformOrigin-prop"
                                        >transformOrigin</html:a>.</html:p>
                                <html:p>The default value is 0 degrees (that is, no
                                    rotation).</html:p>
                                <html:div class="table"><html:table class="generic">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-rotation.png"
                                                   /></html:p></html:td>
                                                <html:td><html:pre class="qml"><html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span>
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"red"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">25</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">25</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">50</html:span>
                                                  <html:span class="name">rotation</html:span>:
                                                  <html:span class="number">30</html:span> }
                                                  }</html:pre>
                                                </html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>rotation</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setRotation</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qml-qtquick-transform.html">Transform</html:a> and
                                        <html:a href="qml-qtquick-rotation.html"
                                    >Rotation</html:a>.</html:p>
                                <!-- @@@rotation -->
                                <!-- $$$scale-prop$$$scale$$$setScaleqreal -->
                                <html:h3 class="fn" id="scale-prop"><html:a name="scale-prop"
                                        ></html:a><html:span class="name">scale</html:span> :
                                        <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>This property holds the scale factor for this item.</html:p>
                                <html:p>A scale of less than 1.0 causes the item to be rendered at a
                                    smaller size, and a scale greater than 1.0 renders the item at a
                                    larger size. A negative scale causes the item to be mirrored
                                    when rendered.</html:p>
                                <html:p>The default value is 1.0.</html:p>
                                <html:p>Scaling is applied from the <html:a
                                        href="qquickitem.html#transformOrigin-prop"
                                        >transformOrigin</html:a>.</html:p>
                                <html:div class="table"><html:table class="generic">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-scale.png"
                                                   /></html:p></html:td>
                                                <html:td><html:pre class="qml">import QtQuick 2.0
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span>
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"green"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">25</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">25</html:span> }
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"red"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">25</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">25</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">50</html:span>
                                                  <html:span class="name">scale</html:span>:
                                                  <html:span class="number">1.4</html:span> }
                                                  }</html:pre>
                                                </html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>scale</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setScale</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qml-qtquick-transform.html">Transform</html:a> and
                                        <html:a href="qml-qtquick-scale.html"
                                    >Scale</html:a>.</html:p>
                                <!-- @@@scale -->
                                <!-- $$$smooth-prop$$$smooth$$$setSmoothbool -->
                                <html:h3 class="fn" id="smooth-prop"><html:a name="smooth-prop"
                                        ></html:a><html:span class="name">smooth</html:span> :
                                        <html:span class="type">bool</html:span></html:h3>
                                <html:p>This property specifies whether the item is smoothed or
                                    not.</html:p>
                                <html:p>Primarily used in image based items to decide if the item
                                    should use smooth sampling or not. Smooth sampling is performed
                                    using linear interpolation, while non-smooth is performed using
                                    nearest neighbor.</html:p>
                                <html:p>In Qt Quick 2.0, this property has minimal impact on
                                    performance.</html:p>
                                <html:p>By default is true.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>smooth</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setSmooth</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@smooth -->
                                <!-- $$$state-prop$$$state$$$setStateconstQString& -->
                                <html:h3 class="fn" id="state-prop"><html:a name="state-prop"
                                        ></html:a><html:span class="name">state</html:span> :
                                        <html:span class="type"><html:a href="qtcore/qstring.html"
                                            >QString</html:a></html:span></html:h3>
                                <html:p>This property holds the name of the current state of the
                                    item.</html:p>
                                <html:p>If the item is in its default state, that is, no explicit
                                    state has been set, then this property holds an empty string.
                                    Likewise, you can return an item to its default state by setting
                                    this property to an empty string.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  QString </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>state</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setState</html:b></html:span>(const
                                                  QString &amp;)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-statesanimations-states.html">Qt Quick
                                        States</html:a>.</html:p>
                                <!-- @@@state -->
                                <!-- $$$transformOrigin-prop$$$transformOrigin$$$setTransformOriginTransformOrigin -->
                                <html:h3 class="fn" id="transformOrigin-prop"><html:a
                                        name="transformOrigin-prop"></html:a><html:span class="name"
                                        >transformOrigin</html:span> : <html:span class="type"
                                            ><html:a href="qquickitem.html#TransformOrigin-enum"
                                            >TransformOrigin</html:a></html:span></html:h3>
                                <html:p>This property holds the origin point around which scale and
                                    rotation transform.</html:p>
                                <html:p>Nine transform origins are available, as shown in the image
                                    below. The default transform origin is
                                        <html:code>Item.Center</html:code>.</html:p>
                                <html:p class="centerAlign"><html:img alt=""
                                        src="images/declarative-transformorigin.png"
                                         /></html:p><html:p><html:b>Access
                                    functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  TransformOrigin </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>transformOrigin</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setTransformOrigin</html:b></html:span>(TransformOrigin)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@transformOrigin -->
                                <!-- $$$visible-prop$$$isVisible$$$setVisiblebool -->
                                <html:h3 class="fn" id="visible-prop"><html:a name="visible-prop"
                                        ></html:a><html:span class="name">visible</html:span> :
                                        <html:span class="type">bool</html:span></html:h3>
                                <html:p>This property holds whether the item is visible. By default
                                    this is true.</html:p>
                                <html:p>Setting this property directly affects the
                                        <html:code>visible</html:code> value of child items. When
                                    set to <html:code>false</html:code>, the
                                        <html:code>visible</html:code> values of all child items
                                    also become <html:code>false</html:code>. When set to
                                        <html:code>true</html:code>, the
                                        <html:code>visible</html:code> values of child items are
                                    returned to <html:code>true</html:code>, unless they have
                                    explicitly been set to <html:code>false</html:code>.</html:p>
                                <html:p>(Because of this flow-on behavior, using the
                                        <html:code>visible</html:code> property may not have the
                                    intended effect if a property binding should only respond to
                                    explicit property changes. In such cases it may be better to use
                                    the <html:a href="qtquick-effects-topic.html#opacity"
                                        >opacity</html:a> property instead.)</html:p>
                                <html:p>If this property is set to <html:code>false</html:code>, the
                                    item will no longer receive mouse events, but will continue to
                                    receive key events and will retain the keyboard <html:a
                                        href="qquickitem.html#focus-prop">focus</html:a> if it has
                                    been set. (In contrast, setting the <html:a
                                        href="qquickitem.html#enabled-prop">enabled</html:a>
                                    property to <html:code>false</html:code> stops both mouse and
                                    keyboard events, and also removes focus from the item.)</html:p>
                                <html:p><html:b>Note: </html:b>This property's value is only
                                    affected by changes to this property or the parent's
                                        <html:code>visible</html:code> property. It does not change,
                                    for example, if this item moves off-screen, or if the <html:a
                                        href="qtquick-effects-topic.html#opacity">opacity</html:a>
                                    changes to 0.</html:p><html:p><html:b>Access
                                    functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  bool </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>isVisible</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setVisible</html:b></html:span>(bool)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-effects-topic.html#opacity">opacity</html:a>
                                    and <html:a href="qquickitem.html#enabled-prop"
                                    >enabled</html:a>.</html:p>
                                <!-- @@@visible -->
                                <!-- $$$width-prop$$$width$$$setWidthqreal$$$resetWidth -->
                                <html:h3 class="fn" id="width-prop"><html:a name="width-prop"
                                        ></html:a><html:span class="name">width</html:span> :
                                        <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>This property holds the width of this item.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>width</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setWidth</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>resetWidth</html:b></html:span>()</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@width -->
                                <!-- $$$x-prop$$$x$$$setXqreal -->
                                <html:h3 class="fn" id="x-prop"><html:a name="x-prop"
                                        ></html:a><html:span class="name">x</html:span> : <html:span
                                        class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>Defines the item's x position relative to its
                                    parent.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>x</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setX</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@x -->
                                <!-- $$$y-prop$$$y$$$setYqreal -->
                                <html:h3 class="fn" id="y-prop"><html:a name="y-prop"
                                        ></html:a><html:span class="name">y</html:span> : <html:span
                                        class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>Defines the item's y position relative to its
                                    parent.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>y</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setY</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@y -->
                                <!-- $$$z-prop$$$z$$$setZqreal -->
                                <html:h3 class="fn" id="z-prop"><html:a name="z-prop"
                                        ></html:a><html:span class="name">z</html:span> : <html:span
                                        class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>Sets the stacking order of sibling items. By default the
                                    stacking order is 0.</html:p>
                                <html:p>Items with a higher stacking value are drawn on top of
                                    siblings with a lower stacking order. Items with the same
                                    stacking value are drawn bottom up in the order they appear.
                                    Items with a negative stacking value are drawn under their
                                    parent's content.</html:p>
                                <html:p>The following example shows the various effects of stacking
                                    order.</html:p>
                                <html:div class="table"><html:table class="generic">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-item_stacking1.png"
                                                   /></html:p></html:td>
                                                <html:td>Same <html:code>z</html:code> - later
                                                  children above earlier children:<html:pre
                                                  class="qml"><html:span class="type"><html:a
                                                  href="qml-qtquick-item.html"
                                                  >Item</html:a></html:span> { <html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"red"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span> }
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">100</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">100</html:span> } }</html:pre>
                                                </html:td>
                                            </html:tr>
                                            <html:tr class="even" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-item_stacking2.png"
                                                   /></html:p></html:td>
                                                <html:td>Higher <html:code>z</html:code> on
                                                  top:<html:pre class="qml"><html:span class="type"
                                                  ><html:a href="qml-qtquick-item.html"
                                                  >Item</html:a></html:span> { <html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">z</html:span>: <html:span
                                                  class="number">1</html:span>
                                                  <html:span class="name">color</html:span>:
                                                  <html:span class="string">"red"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span> }
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">100</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">100</html:span> } }</html:pre>
                                                </html:td>
                                            </html:tr>
                                            <html:tr class="odd" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-item_stacking3.png"
                                                   /></html:p></html:td>
                                                <html:td>Same <html:code>z</html:code> - children
                                                  above parents:<html:pre class="qml"><html:span
                                                  class="type"><html:a href="qml-qtquick-item.html"
                                                  >Item</html:a></html:span> { <html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"red"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span>
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"blue"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">100</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">100</html:span> } } }</html:pre>
                                                </html:td>
                                            </html:tr>
                                            <html:tr class="even" valign="top">
                                                <html:td><html:p class="centerAlign"><html:img
                                                  alt="" src="images/declarative-item_stacking4.png"
                                                   /></html:p></html:td>
                                                <html:td>Lower <html:code>z</html:code>
                                                  below:<html:pre class="qml"><html:span
                                                  class="type"><html:a href="qml-qtquick-item.html"
                                                  >Item</html:a></html:span> { <html:span
                                                  class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">color</html:span>: <html:span
                                                  class="string">"red"</html:span>
                                                  <html:span class="name">width</html:span>:
                                                  <html:span class="number">100</html:span>;
                                                  <html:span class="name">height</html:span>:
                                                  <html:span class="number">100</html:span>
                                                  <html:span class="type"><html:a
                                                  href="qml-qtquick-rectangle.html"
                                                  >Rectangle</html:a></html:span> { <html:span
                                                  class="name">z</html:span>: -<html:span
                                                  class="number">1</html:span>
                                                  <html:span class="name">color</html:span>:
                                                  <html:span class="string">"blue"</html:span>
                                                  <html:span class="name">x</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">y</html:span>: <html:span
                                                  class="number">50</html:span>; <html:span
                                                  class="name">width</html:span>: <html:span
                                                  class="number">100</html:span>; <html:span
                                                  class="name">height</html:span>: <html:span
                                                  class="number">100</html:span> } } }</html:pre>
                                                </html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>z</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>setZ</html:b></html:span>(qreal)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@z -->
                            </html:div>
                            <html:div class="func">
                                <html:h2>Member Function Documentation</html:h2>
                                <!-- $$$QQuickItem[overload1]$$$QQuickItemQQuickItem* -->
                                <html:h3 class="fn" id="QQuickItem"><html:a name="QQuickItem"
                                        ></html:a>QQuickItem::<html:span class="name"
                                        >QQuickItem</html:span>(<html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> *<html:i> parent</html:i> =
                                    0)</html:h3>
                                <html:p>Constructs a <html:a href="qquickitem.html"
                                        >QQuickItem</html:a> with the given
                                    <html:i>parent</html:i>.</html:p>
                                <!-- @@@QQuickItem -->
                                <!-- $$$~QQuickItem[overload1]$$$~QQuickItem -->
                                <html:h3 class="fn" id="dtor.QQuickItem"><html:a
                                        name="dtor.QQuickItem"></html:a><html:code>[virtual]
                                        </html:code>QQuickItem::<html:span class="name"
                                        >~QQuickItem</html:span>()</html:h3>
                                <html:p>Destroys the <html:a href="qquickitem.html"
                                        >QQuickItem</html:a>.</html:p>
                                <!-- @@@~QQuickItem -->
                                <!-- $$$acceptHoverEvents[overload1]$$$acceptHoverEvents -->
                                <html:h3 class="fn" id="acceptHoverEvents"><html:a
                                        name="acceptHoverEvents"></html:a><html:span class="type"
                                        >bool</html:span> QQuickItem::<html:span class="name"
                                        >acceptHoverEvents</html:span>() const</html:h3>
                                <html:p>Returns whether hover events are accepted by this
                                    item.</html:p>
                                <html:p>The default value is false.</html:p>
                                <html:p>If this is false, then the item will not receive any hover
                                    events through the <html:a
                                        href="qquickitem.html#hoverEnterEvent"
                                        >hoverEnterEvent</html:a>(), <html:a
                                        href="qquickitem.html#hoverMoveEvent"
                                        >hoverMoveEvent</html:a>() and <html:a
                                        href="qquickitem.html#hoverLeaveEvent"
                                        >hoverLeaveEvent</html:a>() functions.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setAcceptHoverEvents"
                                        >setAcceptHoverEvents</html:a>().</html:p>
                                <!-- @@@acceptHoverEvents -->
                                <!-- $$$acceptedMouseButtons[overload1]$$$acceptedMouseButtons -->
                                <html:h3 class="fn" id="acceptedMouseButtons"><html:a
                                        name="acceptedMouseButtons"></html:a><html:span class="type"
                                            ><html:a href="qtcore/qt.html#MouseButton-enum"
                                            >Qt::MouseButtons</html:a></html:span>
                                        QQuickItem::<html:span class="name"
                                        >acceptedMouseButtons</html:span>() const</html:h3>
                                <html:p>Returns the mouse buttons accepted by this item.</html:p>
                                <html:p>The default value is <html:a
                                        href="qtcore/qt.html#MouseButton-enum"
                                    >Qt::NoButton</html:a>; that is, no mouse buttons are
                                    accepted.</html:p>
                                <html:p>If an item does not accept the mouse button for a particular
                                    mouse event, the mouse event will not be delivered to the item
                                    and will be delivered to the next item in the item hierarchy
                                    instead.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setAcceptedMouseButtons"
                                        >setAcceptedMouseButtons</html:a>().</html:p>
                                <!-- @@@acceptedMouseButtons -->
                                <!-- $$$childAt[overload1]$$$childAtqrealqreal -->
                                <html:h3 class="fn" id="childAt"><html:a name="childAt"
                                        ></html:a><html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> * QQuickItem::<html:span
                                        class="name">childAt</html:span>(<html:span class="type"
                                            ><html:a href="qtcore/qtglobal.html#qreal-typedef"
                                            >qreal</html:a></html:span><html:i> x</html:i>,
                                        <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span><html:i> y</html:i>)
                                    const</html:h3>
                                <html:p>Returns the first visible child item found at point
                                        (<html:i>x</html:i>, <html:i>y</html:i>) within the
                                    coordinate system of this item.</html:p>
                                <html:p>Returns 0 if there is no such item.</html:p>
                                <!-- @@@childAt -->
                                <!-- $$$childItems[overload1]$$$childItems -->
                                <html:h3 class="fn" id="childItems"><html:a name="childItems"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qlist.html"
                                        >QList</html:a></html:span>&lt;<html:span class="type"
                                            ><html:a href="qquickitem.html#QQuickItem"
                                            >QQuickItem</html:a></html:span> *&gt;
                                        QQuickItem::<html:span class="name">childItems</html:span>()
                                    const</html:h3>
                                <html:p>Returns the children of this item.</html:p>
                                <!-- @@@childItems -->
                                <!-- $$$childMouseEventFilter[overload1]$$$childMouseEventFilterQQuickItem*QEvent* -->
                                <html:h3 class="fn" id="childMouseEventFilter"><html:a
                                        name="childMouseEventFilter"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >bool</html:span> QQuickItem::<html:span class="name"
                                        >childMouseEventFilter</html:span>(<html:span class="type"
                                            ><html:a href="qquickitem.html#QQuickItem"
                                            >QQuickItem</html:a></html:span> *<html:i>
                                    item</html:i>, <html:span class="type"><html:a
                                            href="qtcore/qevent.html">QEvent</html:a></html:span>
                                        *<html:i> event</html:i>)</html:h3>
                                <html:p>Reimplement this method to filter the mouse events that are
                                    received by this item's children.</html:p>
                                <html:p>This method will only be called if <html:a
                                        href="qquickitem.html#filtersChildMouseEvents"
                                        >filtersChildMouseEvents</html:a>() is true.</html:p>
                                <html:p>Return true if the specified <html:i>event</html:i> should
                                    not be passed onto the specified child <html:i>item</html:i>,
                                    and false otherwise.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setFiltersChildMouseEvents"
                                        >setFiltersChildMouseEvents</html:a>().</html:p>
                                <!-- @@@childMouseEventFilter -->
                                <!-- $$$classBegin[overload1]$$$classBegin -->
                                <html:h3 class="fn" id="classBegin"><html:a name="classBegin"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >classBegin</html:span>()</html:h3>
                                <html:p>Reimplemented from <html:a
                                        href="qtqml/qqmlparserstatus.html#classBegin"
                                        >QQmlParserStatus::classBegin</html:a>().</html:p>
                                <html:p>Derived classes should call the base class method before
                                    adding their own action to perform at classBegin.</html:p>
                                <!-- @@@classBegin -->
                                <!-- $$$componentComplete[overload1]$$$componentComplete -->
                                <html:h3 class="fn" id="componentComplete"><html:a
                                        name="componentComplete"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >componentComplete</html:span>()</html:h3>
                                <html:p>Reimplemented from <html:a
                                        href="qtqml/qqmlparserstatus.html#componentComplete"
                                        >QQmlParserStatus::componentComplete</html:a>().</html:p>
                                <html:p>Derived classes should call the base class method before
                                    adding their own actions to perform at
                                    componentComplete.</html:p>
                                <!-- @@@componentComplete -->
                                <!-- $$$contains[overload1]$$$containsconstQPointF& -->
                                <html:h3 class="fn" id="contains"><html:a name="contains"
                                        ></html:a><html:code>[virtual] </html:code><html:span
                                        class="type">bool</html:span> QQuickItem::<html:span
                                        class="name">contains</html:span>(const <html:span
                                        class="type"><html:a href="qtcore/qpointf.html"
                                            >QPointF</html:a></html:span> &amp;<html:i>
                                        point</html:i>) const</html:h3>
                                <html:p>Returns true if this item contains <html:i>point</html:i>,
                                    which is in local coordinates; returns false otherwise.</html:p>
                                <html:p>This function can be overwritten in order to handle point
                                    collisions in items with custom shapes. The default
                                    implementation checks if the point is inside the item's bounding
                                    rect.</html:p>
                                <html:p>Note that this method is generally used to check whether the
                                    item is under the mouse cursor, and for that reason, the
                                    implementation of this function should be as light-weight as
                                    possible.</html:p>
                                <!-- @@@contains -->
                                <!-- $$$cursor[overload1]$$$cursor -->
                                <html:h3 class="fn" id="cursor"><html:a name="cursor"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtgui/qcursor.html">QCursor</html:a></html:span>
                                        QQuickItem::<html:span class="name">cursor</html:span>()
                                    const</html:h3>
                                <html:p>Returns the cursor shape for this item.</html:p>
                                <html:p>The mouse cursor will assume this shape when it is over this
                                    item, unless an override cursor is set. See the <html:a
                                        href="qtcore/qt.html#CursorShape-enum">list of predefined
                                        cursor objects</html:a> for a range of useful
                                    shapes.</html:p>
                                <html:p>If no cursor shape has been set this returns a cursor with
                                    the <html:a href="qtcore/qt.html#CursorShape-enum"
                                        >Qt::ArrowCursor</html:a> shape, however another cursor
                                    shape may be displayed if an overlapping item has a valid
                                    cursor.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setCursor">setCursor</html:a>() and
                                        <html:a href="qquickitem.html#unsetCursor"
                                        >unsetCursor</html:a>().</html:p>
                                <!-- @@@cursor -->
                                <!-- $$$dragEnterEvent[overload1]$$$dragEnterEventQDragEnterEvent* -->
                                <html:h3 class="fn" id="dragEnterEvent"><html:a
                                        name="dragEnterEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >dragEnterEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qdragenterevent.html"
                                            >QDragEnterEvent</html:a></html:span> *<html:i>
                                        event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive drag-enter events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Drag and drop events are only provided if the <html:a
                                        href="qquickitem.html#Flag-enum">ItemAcceptsDrops</html:a>
                                    flag has been set for this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qml-qtquick-drag.html">Drag</html:a> and <html:a
                                        href="qtdoc/3rdparty.html#drag-and-drop">Drag and
                                        Drop</html:a>.</html:p>
                                <!-- @@@dragEnterEvent -->
                                <!-- $$$dragLeaveEvent[overload1]$$$dragLeaveEventQDragLeaveEvent* -->
                                <html:h3 class="fn" id="dragLeaveEvent"><html:a
                                        name="dragLeaveEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >dragLeaveEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qdragleaveevent.html"
                                            >QDragLeaveEvent</html:a></html:span> *<html:i>
                                        event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive drag-leave events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Drag and drop events are only provided if the <html:a
                                        href="qquickitem.html#Flag-enum">ItemAcceptsDrops</html:a>
                                    flag has been set for this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qml-qtquick-drag.html">Drag</html:a> and <html:a
                                        href="qtdoc/3rdparty.html#drag-and-drop">Drag and
                                        Drop</html:a>.</html:p>
                                <!-- @@@dragLeaveEvent -->
                                <!-- $$$dragMoveEvent[overload1]$$$dragMoveEventQDragMoveEvent* -->
                                <html:h3 class="fn" id="dragMoveEvent"><html:a name="dragMoveEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >dragMoveEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qdragmoveevent.html"
                                        >QDragMoveEvent</html:a></html:span> *<html:i>
                                        event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive drag-move events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Drag and drop events are only provided if the <html:a
                                        href="qquickitem.html#Flag-enum">ItemAcceptsDrops</html:a>
                                    flag has been set for this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qml-qtquick-drag.html">Drag</html:a> and <html:a
                                        href="qtdoc/3rdparty.html#drag-and-drop">Drag and
                                        Drop</html:a>.</html:p>
                                <!-- @@@dragMoveEvent -->
                                <!-- $$$dropEvent[overload1]$$$dropEventQDropEvent* -->
                                <html:h3 class="fn" id="dropEvent"><html:a name="dropEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >dropEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qdropevent.html"
                                        >QDropEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive drop events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Drag and drop events are only provided if the <html:a
                                        href="qquickitem.html#Flag-enum">ItemAcceptsDrops</html:a>
                                    flag has been set for this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qml-qtquick-drag.html">Drag</html:a> and <html:a
                                        href="qtdoc/3rdparty.html#drag-and-drop">Drag and
                                        Drop</html:a>.</html:p>
                                <!-- @@@dropEvent -->
                                <!-- $$$event[overload1]$$$eventQEvent* -->
                                <html:h3 class="fn" id="event"><html:a name="event"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">bool</html:span>
                                        QQuickItem::<html:span class="name"
                                        >event</html:span>(<html:span class="type"><html:a
                                            href="qtcore/qevent.html">QEvent</html:a></html:span>
                                        *<html:i> ev</html:i>)</html:h3>
                                <html:p>Reimplemented from <html:a href="qtcore/qobject.html#event"
                                        >QObject::event</html:a>().</html:p>
                                <!-- @@@event -->
                                <!-- $$$filtersChildMouseEvents[overload1]$$$filtersChildMouseEvents -->
                                <html:h3 class="fn" id="filtersChildMouseEvents"><html:a
                                        name="filtersChildMouseEvents"></html:a><html:span
                                        class="type">bool</html:span> QQuickItem::<html:span
                                        class="name">filtersChildMouseEvents</html:span>()
                                    const</html:h3>
                                <html:p>Returns whether mouse events of this item's children should
                                    be filtered through this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setFiltersChildMouseEvents"
                                        >setFiltersChildMouseEvents</html:a>() and <html:a
                                        href="qquickitem.html#childMouseEventFilter"
                                        >childMouseEventFilter</html:a>().</html:p>
                                <!-- @@@filtersChildMouseEvents -->
                                <!-- $$$flags[overload1]$$$flags -->
                                <html:h3 class="fn" id="flags"><html:a name="flags"
                                        ></html:a><html:span class="type"><html:a
                                            href="qquickitem.html#Flag-enum"
                                        >Flags</html:a></html:span> QQuickItem::<html:span
                                        class="name">flags</html:span>() const</html:h3>
                                <html:p>Returns the item flags for this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setFlags">setFlags</html:a>() and
                                        <html:a href="qquickitem.html#setFlag"
                                    >setFlag</html:a>().</html:p>
                                <!-- @@@flags -->
                                <!-- $$$focusInEvent[overload1]$$$focusInEventQFocusEvent* -->
                                <html:h3 class="fn" id="focusInEvent"><html:a name="focusInEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >focusInEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qfocusevent.html"
                                        >QFocusEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive focus-in events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@focusInEvent -->
                                <!-- $$$focusOutEvent[overload1]$$$focusOutEventQFocusEvent* -->
                                <html:h3 class="fn" id="focusOutEvent"><html:a name="focusOutEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >focusOutEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qfocusevent.html"
                                        >QFocusEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive focus-out events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@focusOutEvent -->
                                <!-- $$$forceActiveFocus[overload1]$$$forceActiveFocus -->
                                <html:h3 class="fn" id="forceActiveFocus"><html:a
                                        name="forceActiveFocus"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >forceActiveFocus</html:span>()</html:h3>
                                <!-- @@@forceActiveFocus -->
                                <!-- $$$forceActiveFocus$$$forceActiveFocusQt::FocusReason -->
                                <html:h3 class="fn" id="forceActiveFocus-2"><html:a
                                        name="forceActiveFocus-2"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >forceActiveFocus</html:span>(<html:span class="type"
                                            ><html:a href="qtcore/qt.html#FocusReason-enum"
                                            >Qt::FocusReason</html:a></html:span><html:i>
                                        reason</html:i>)</html:h3>
                                <!-- @@@forceActiveFocus -->
                                <!-- $$$geometryChanged[overload1]$$$geometryChangedconstQRectF&constQRectF& -->
                                <html:h3 class="fn" id="geometryChanged"><html:a
                                        name="geometryChanged"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >geometryChanged</html:span>(const <html:span class="type"
                                            ><html:a href="qtcore/qrectf.html"
                                        >QRectF</html:a></html:span> &amp;<html:i>
                                        newGeometry</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qrectf.html">QRectF</html:a></html:span>
                                        &amp;<html:i> oldGeometry</html:i>)</html:h3>
                                <html:p>This function is called to handle this item's changes in
                                    geometry from <html:i>oldGeometry</html:i> to
                                        <html:i>newGeometry</html:i>. If the two geometries are the
                                    same, it doesn't do anything.</html:p>
                                <html:p>Derived classes must call the base class method within their
                                    implementation.</html:p>
                                <!-- @@@geometryChanged -->
                                <!-- $$$grabMouse[overload1]$$$grabMouse -->
                                <html:h3 class="fn" id="grabMouse"><html:a name="grabMouse"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >grabMouse</html:span>()</html:h3>
                                <html:p>Grabs the mouse input.</html:p>
                                <html:p>This item will receive all mouse events until <html:a
                                        href="qquickitem.html#ungrabMouse">ungrabMouse</html:a>() is
                                    called.</html:p>
                                <html:p><html:b>Warning:</html:b> This function should be used with
                                    caution.</html:p>
                                <!-- @@@grabMouse -->
                                <!-- $$$grabToImage[overload1]$$$grabToImageconstQSize& -->
                                <html:h3 class="fn" id="grabToImage"><html:a name="grabToImage"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qsharedpointer.html"
                                            >QSharedPointer</html:a></html:span>&lt;<html:span
                                        class="type"><html:a href="qquickitemgrabresult.html"
                                            >QQuickItemGrabResult</html:a></html:span>&gt;
                                        QQuickItem::<html:span class="name"
                                    >grabToImage</html:span>(const <html:span class="type"><html:a
                                            href="qtcore/qsize.html">QSize</html:a></html:span>
                                        &amp;<html:i> targetSize</html:i> = QSize())</html:h3>
                                <html:p>Grabs the item into an in-memory image.</html:p>
                                <html:p>The grab happens asynchronously and the signal <html:a
                                        href="qquickitemgrabresult.html#ready"
                                        >QQuickItemGrabResult::ready</html:a>() is emitted when the
                                    grab has been completed.</html:p>
                                <html:p>Use <html:i>targetSize</html:i> to specify the size of the
                                    target image. By default, the result will have the same size as
                                    item.</html:p>
                                <html:p>If the grab could not be initiated, the function returns a
                                        <html:code>null</html:code>.</html:p>
                                <html:p><html:b>Note: </html:b>This function will render the item to
                                    an offscreen surface and copy that surface from the GPU's memory
                                    into the CPU's memory, which can be quite costly. For "live"
                                    preview, use <html:a
                                        href="qml-qtquick-item.html#layer.enabled-prop"
                                        >layers</html:a> or <html:a
                                        href="qml-qtquick-shadereffectsource.html"
                                        >ShaderEffectSource</html:a>.</html:p><html:p><html:b>See
                                        also </html:b><html:a href="qquickwindow.html#grabWindow"
                                        >QQuickWindow::grabWindow</html:a>().</html:p>
                                <!-- @@@grabToImage -->
                                <!-- $$$grabTouchPoints[overload1]$$$grabTouchPointsconstQVector<int>& -->
                                <html:h3 class="fn" id="grabTouchPoints"><html:a
                                        name="grabTouchPoints"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >grabTouchPoints</html:span>(const <html:span class="type"
                                            ><html:a href="qtcore/qvector.html"
                                        >QVector</html:a></html:span>&lt;<html:span class="type"
                                        >int</html:span>&gt; &amp;<html:i> ids</html:i>)</html:h3>
                                <html:p>Grabs the touch points specified by
                                    <html:i>ids</html:i>.</html:p>
                                <html:p>These touch points will be owned by the item until they are
                                    released. Alternatively, the grab can be stolen by a filtering
                                    item like Flickable. Use <html:a
                                        href="qquickitem.html#setKeepTouchGrab"
                                        >setKeepTouchGrab</html:a>() to prevent the grab from being
                                    stolen.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#ungrabTouchPoints"
                                        >ungrabTouchPoints</html:a>() and <html:a
                                        href="qquickitem.html#setKeepTouchGrab"
                                        >setKeepTouchGrab</html:a>().</html:p>
                                <!-- @@@grabTouchPoints -->
                                <!-- $$$heightValid[overload1]$$$heightValid -->
                                <html:h3 class="fn" id="heightValid"><html:a name="heightValid"
                                        ></html:a><html:code>[protected] </html:code><html:span
                                        class="type">bool</html:span> QQuickItem::<html:span
                                        class="name">heightValid</html:span>() const</html:h3>
                                <html:p>Returns whether the height property has been set
                                    explicitly.</html:p>
                                <!-- @@@heightValid -->
                                <!-- $$$hoverEnterEvent[overload1]$$$hoverEnterEventQHoverEvent* -->
                                <html:h3 class="fn" id="hoverEnterEvent"><html:a
                                        name="hoverEnterEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >hoverEnterEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qhoverevent.html"
                                        >QHoverEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive hover-enter events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Hover events are only provided if <html:a
                                        href="qquickitem.html#acceptHoverEvents"
                                        >acceptHoverEvents</html:a>() is true.</html:p>
                                <!-- @@@hoverEnterEvent -->
                                <!-- $$$hoverLeaveEvent[overload1]$$$hoverLeaveEventQHoverEvent* -->
                                <html:h3 class="fn" id="hoverLeaveEvent"><html:a
                                        name="hoverLeaveEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >hoverLeaveEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qhoverevent.html"
                                        >QHoverEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive hover-leave events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Hover events are only provided if <html:a
                                        href="qquickitem.html#acceptHoverEvents"
                                        >acceptHoverEvents</html:a>() is true.</html:p>
                                <!-- @@@hoverLeaveEvent -->
                                <!-- $$$hoverMoveEvent[overload1]$$$hoverMoveEventQHoverEvent* -->
                                <html:h3 class="fn" id="hoverMoveEvent"><html:a
                                        name="hoverMoveEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >hoverMoveEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qhoverevent.html"
                                        >QHoverEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive hover-move events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <html:p>Hover events are only provided if <html:a
                                        href="qquickitem.html#acceptHoverEvents"
                                        >acceptHoverEvents</html:a>() is true.</html:p>
                                <!-- @@@hoverMoveEvent -->
                                <!-- $$$inputMethodEvent[overload1]$$$inputMethodEventQInputMethodEvent* -->
                                <html:h3 class="fn" id="inputMethodEvent"><html:a
                                        name="inputMethodEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >inputMethodEvent</html:span>(<html:span class="type"
                                            ><html:a href="qtgui/qinputmethodevent.html"
                                            >QInputMethodEvent</html:a></html:span> *<html:i>
                                        event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive input method events for an item. The event information
                                    is provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@inputMethodEvent -->
                                <!-- $$$inputMethodQuery[overload1]$$$inputMethodQueryQt::InputMethodQuery -->
                                <html:h3 class="fn" id="inputMethodQuery"><html:a
                                        name="inputMethodQuery"></html:a><html:code>[virtual]
                                        </html:code><html:span class="type"><html:a
                                            href="qtcore/qvariant.html"
                                        >QVariant</html:a></html:span> QQuickItem::<html:span
                                        class="name">inputMethodQuery</html:span>(<html:span
                                        class="type"><html:a
                                            href="qtcore/qt.html#InputMethodQuery-enum"
                                            >Qt::InputMethodQuery</html:a></html:span><html:i>
                                        query</html:i>) const</html:h3>
                                <html:p>This method is only relevant for input items.</html:p>
                                <html:p>If this item is an input item, this method should be
                                    reimplemented to return the relevant input method flags for the
                                    given <html:i>query</html:i>.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtwidgets/qwidget.html#inputMethodQuery"
                                        >QWidget::inputMethodQuery</html:a>().</html:p>
                                <!-- @@@inputMethodQuery -->
                                <!-- $$$isComponentComplete[overload1]$$$isComponentComplete -->
                                <html:h3 class="fn" id="isComponentComplete"><html:a
                                        name="isComponentComplete"></html:a><html:code>[protected]
                                        </html:code><html:span class="type">bool</html:span>
                                        QQuickItem::<html:span class="name"
                                        >isComponentComplete</html:span>() const</html:h3>
                                <html:p>Returns true if construction of the QML component is
                                    complete; otherwise returns false.</html:p>
                                <html:p>It is often desirable to delay some processing until the
                                    component is completed.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#componentComplete"
                                        >componentComplete</html:a>().</html:p>
                                <!-- @@@isComponentComplete -->
                                <!-- $$$isFocusScope[overload1]$$$isFocusScope -->
                                <html:h3 class="fn" id="isFocusScope"><html:a name="isFocusScope"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQuickItem::<html:span class="name"
                                    >isFocusScope</html:span>() const</html:h3>
                                <html:p>Returns true if this item is a focus scope, and false
                                    otherwise.</html:p>
                                <!-- @@@isFocusScope -->
                                <!-- $$$isTextureProvider[overload1]$$$isTextureProvider -->
                                <html:h3 class="fn" id="isTextureProvider"><html:a
                                        name="isTextureProvider"></html:a><html:code>[virtual]
                                        </html:code><html:span class="type">bool</html:span>
                                        QQuickItem::<html:span class="name"
                                        >isTextureProvider</html:span>() const</html:h3>
                                <html:p>Returns true if this item is a texture provider. The default
                                    implementation returns false.</html:p>
                                <html:p>This function can be called from any thread.</html:p>
                                <!-- @@@isTextureProvider -->
                                <!-- $$$itemChange[overload1]$$$itemChangeItemChangeconstItemChangeData& -->
                                <html:h3 class="fn" id="itemChange"><html:a name="itemChange"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >itemChange</html:span>(<html:span class="type"><html:a
                                            href="qquickitem.html#ItemChange-enum"
                                            >ItemChange</html:a></html:span><html:i>
                                    change</html:i>, const <html:span class="type"><html:a
                                            href="qquickitem-itemchangedata.html"
                                            >ItemChangeData</html:a></html:span> &amp;<html:i>
                                        value</html:i>)</html:h3>
                                <html:p>Called when <html:i>change</html:i> occurs for this
                                    item.</html:p>
                                <html:p><html:i>value</html:i> contains extra information relating
                                    to the change, when applicable.</html:p>
                                <html:p>If you re-implement this method in a subclass, be sure to
                                    call</html:p>
                                <html:pre class="cpp"><html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span><html:span class="operator"
                                        >::</html:span>itemChange(change<html:span class="operator"
                                        >,</html:span> value);</html:pre>
                                <html:p>typically at the end of your implementation, to ensure the
                                        <html:a href="qquickitem.html#windowChanged"
                                        >windowChanged</html:a>() signal will be emitted.</html:p>
                                <!-- @@@itemChange -->
                                <!-- $$$keepMouseGrab[overload1]$$$keepMouseGrab -->
                                <html:h3 class="fn" id="keepMouseGrab"><html:a name="keepMouseGrab"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQuickItem::<html:span class="name"
                                        >keepMouseGrab</html:span>() const</html:h3>
                                <html:p>Returns whether mouse input should exclusively remain with
                                    this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setKeepMouseGrab"
                                        >setKeepMouseGrab</html:a>().</html:p>
                                <!-- @@@keepMouseGrab -->
                                <!-- $$$keepTouchGrab[overload1]$$$keepTouchGrab -->
                                <html:h3 class="fn" id="keepTouchGrab"><html:a name="keepTouchGrab"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQuickItem::<html:span class="name"
                                        >keepTouchGrab</html:span>() const</html:h3>
                                <html:p>Returns whether the touch points grabbed by this item should
                                    exclusively remain with this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#setKeepTouchGrab"
                                        >setKeepTouchGrab</html:a>() and <html:a
                                        href="qquickitem.html#keepMouseGrab"
                                    >keepMouseGrab</html:a>().</html:p>
                                <!-- @@@keepTouchGrab -->
                                <!-- $$$keyPressEvent[overload1]$$$keyPressEventQKeyEvent* -->
                                <html:h3 class="fn" id="keyPressEvent"><html:a name="keyPressEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >keyPressEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qkeyevent.html"
                                        >QKeyEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive key press events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@keyPressEvent -->
                                <!-- $$$keyReleaseEvent[overload1]$$$keyReleaseEventQKeyEvent* -->
                                <html:h3 class="fn" id="keyReleaseEvent"><html:a
                                        name="keyReleaseEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >keyReleaseEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qkeyevent.html"
                                        >QKeyEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive key release events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@keyReleaseEvent -->
                                <!-- $$$mapFromItem[overload1]$$$mapFromItemconstQQuickItem*constQPointF& -->
                                <html:h3 class="fn" id="mapFromItem"><html:a name="mapFromItem"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qpointf.html">QPointF</html:a></html:span>
                                        QQuickItem::<html:span class="name"
                                    >mapFromItem</html:span>(const <html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> *<html:i> item</html:i>,
                                    const <html:span class="type"><html:a href="qtcore/qpointf.html"
                                            >QPointF</html:a></html:span> &amp;<html:i>
                                        point</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>point</html:i> in
                                        <html:i>item</html:i>'s coordinate system to the equivalent
                                    point within this item's coordinate system, and returns the
                                    mapped coordinate.</html:p>
                                <html:p>If <html:i>item</html:i> is 0, this maps
                                        <html:i>point</html:i> from the coordinate system of the
                                    scene.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapFromItem -->
                                <!-- $$$mapFromScene[overload1]$$$mapFromSceneconstQPointF& -->
                                <html:h3 class="fn" id="mapFromScene"><html:a name="mapFromScene"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qpointf.html">QPointF</html:a></html:span>
                                        QQuickItem::<html:span class="name"
                                    >mapFromScene</html:span>(const <html:span class="type"><html:a
                                            href="qtcore/qpointf.html">QPointF</html:a></html:span>
                                        &amp;<html:i> point</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>point</html:i> in the scene's
                                    coordinate system to the equivalent point within this item's
                                    coordinate system, and returns the mapped coordinate.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapFromScene -->
                                <!-- $$$mapRectFromItem[overload1]$$$mapRectFromItemconstQQuickItem*constQRectF& -->
                                <html:h3 class="fn" id="mapRectFromItem"><html:a
                                        name="mapRectFromItem"></html:a><html:span class="type"
                                            ><html:a href="qtcore/qrectf.html"
                                        >QRectF</html:a></html:span> QQuickItem::<html:span
                                        class="name">mapRectFromItem</html:span>(const <html:span
                                        class="type"><html:a href="qquickitem.html#QQuickItem"
                                            >QQuickItem</html:a></html:span> *<html:i>
                                    item</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qrectf.html">QRectF</html:a></html:span>
                                        &amp;<html:i> rect</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>rect</html:i> in
                                        <html:i>item</html:i>'s coordinate system to the equivalent
                                    rectangular area within this item's coordinate system, and
                                    returns the mapped rectangle value.</html:p>
                                <html:p>If <html:i>item</html:i> is 0, this maps
                                        <html:i>rect</html:i> from the coordinate system of the
                                    scene.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapRectFromItem -->
                                <!-- $$$mapRectFromScene[overload1]$$$mapRectFromSceneconstQRectF& -->
                                <html:h3 class="fn" id="mapRectFromScene"><html:a
                                        name="mapRectFromScene"></html:a><html:span class="type"
                                            ><html:a href="qtcore/qrectf.html"
                                        >QRectF</html:a></html:span> QQuickItem::<html:span
                                        class="name">mapRectFromScene</html:span>(const <html:span
                                        class="type"><html:a href="qtcore/qrectf.html"
                                            >QRectF</html:a></html:span> &amp;<html:i>
                                    rect</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>rect</html:i> in the scene's
                                    coordinate system to the equivalent rectangular area within this
                                    item's coordinate system, and returns the mapped rectangle
                                    value.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapRectFromScene -->
                                <!-- $$$mapRectToItem[overload1]$$$mapRectToItemconstQQuickItem*constQRectF& -->
                                <html:h3 class="fn" id="mapRectToItem"><html:a name="mapRectToItem"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qrectf.html">QRectF</html:a></html:span>
                                        QQuickItem::<html:span class="name"
                                        >mapRectToItem</html:span>(const <html:span class="type"
                                            ><html:a href="qquickitem.html#QQuickItem"
                                            >QQuickItem</html:a></html:span> *<html:i>
                                    item</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qrectf.html">QRectF</html:a></html:span>
                                        &amp;<html:i> rect</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>rect</html:i> in this item's
                                    coordinate system to the equivalent rectangular area within
                                        <html:i>item</html:i>'s coordinate system, and returns the
                                    mapped rectangle value.</html:p>
                                <html:p>If <html:i>item</html:i> is 0, this maps
                                        <html:i>rect</html:i> to the coordinate system of the
                                    scene.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapRectToItem -->
                                <!-- $$$mapRectToScene[overload1]$$$mapRectToSceneconstQRectF& -->
                                <html:h3 class="fn" id="mapRectToScene"><html:a
                                        name="mapRectToScene"></html:a><html:span class="type"
                                            ><html:a href="qtcore/qrectf.html"
                                        >QRectF</html:a></html:span> QQuickItem::<html:span
                                        class="name">mapRectToScene</html:span>(const <html:span
                                        class="type"><html:a href="qtcore/qrectf.html"
                                            >QRectF</html:a></html:span> &amp;<html:i>
                                    rect</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>rect</html:i> in this item's
                                    coordinate system to the equivalent rectangular area within the
                                    scene's coordinate system, and returns the mapped rectangle
                                    value.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapRectToScene -->
                                <!-- $$$mapToItem[overload1]$$$mapToItemconstQQuickItem*constQPointF& -->
                                <html:h3 class="fn" id="mapToItem"><html:a name="mapToItem"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qpointf.html">QPointF</html:a></html:span>
                                        QQuickItem::<html:span class="name"
                                    >mapToItem</html:span>(const <html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> *<html:i> item</html:i>,
                                    const <html:span class="type"><html:a href="qtcore/qpointf.html"
                                            >QPointF</html:a></html:span> &amp;<html:i>
                                        point</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>point</html:i> in this item's
                                    coordinate system to the equivalent point within
                                        <html:i>item</html:i>'s coordinate system, and returns the
                                    mapped coordinate.</html:p>
                                <html:p>If <html:i>item</html:i> is 0, this maps
                                        <html:i>point</html:i> to the coordinate system of the
                                    scene.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapToItem -->
                                <!-- $$$mapToScene[overload1]$$$mapToSceneconstQPointF& -->
                                <html:h3 class="fn" id="mapToScene"><html:a name="mapToScene"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qpointf.html">QPointF</html:a></html:span>
                                        QQuickItem::<html:span class="name"
                                    >mapToScene</html:span>(const <html:span class="type"><html:a
                                            href="qtcore/qpointf.html">QPointF</html:a></html:span>
                                        &amp;<html:i> point</html:i>) const</html:h3>
                                <html:p>Maps the given <html:i>point</html:i> in this item's
                                    coordinate system to the equivalent point within the scene's
                                    coordinate system, and returns the mapped coordinate.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-coordinates.html">Concepts -
                                        Visual Coordinates in Qt Quick</html:a>.</html:p>
                                <!-- @@@mapToScene -->
                                <!-- $$$mouseDoubleClickEvent[overload1]$$$mouseDoubleClickEventQMouseEvent* -->
                                <html:h3 class="fn" id="mouseDoubleClickEvent"><html:a
                                        name="mouseDoubleClickEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >mouseDoubleClickEvent</html:span>(<html:span class="type"
                                            ><html:a href="qtgui/qmouseevent.html"
                                            >QMouseEvent</html:a></html:span> *<html:i>
                                        event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive mouse double-click events for an item. The event
                                    information is provided by the <html:i>event</html:i>
                                    parameter.</html:p>
                                <!-- @@@mouseDoubleClickEvent -->
                                <!-- $$$mouseMoveEvent[overload1]$$$mouseMoveEventQMouseEvent* -->
                                <html:h3 class="fn" id="mouseMoveEvent"><html:a
                                        name="mouseMoveEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >mouseMoveEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qmouseevent.html"
                                        >QMouseEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive mouse move events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@mouseMoveEvent -->
                                <!-- $$$mousePressEvent[overload1]$$$mousePressEventQMouseEvent* -->
                                <html:h3 class="fn" id="mousePressEvent"><html:a
                                        name="mousePressEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >mousePressEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qmouseevent.html"
                                        >QMouseEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive mouse press events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@mousePressEvent -->
                                <!-- $$$mouseReleaseEvent[overload1]$$$mouseReleaseEventQMouseEvent* -->
                                <html:h3 class="fn" id="mouseReleaseEvent"><html:a
                                        name="mouseReleaseEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >mouseReleaseEvent</html:span>(<html:span class="type"
                                            ><html:a href="qtgui/qmouseevent.html"
                                            >QMouseEvent</html:a></html:span> *<html:i>
                                        event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive mouse release events for an item. The event information
                                    is provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@mouseReleaseEvent -->
                                <!-- $$$mouseUngrabEvent[overload1]$$$mouseUngrabEvent -->
                                <html:h3 class="fn" id="mouseUngrabEvent"><html:a
                                        name="mouseUngrabEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >mouseUngrabEvent</html:span>()</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to be
                                    notified when a mouse ungrab event has occurred on this
                                    item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#ungrabMouse"
                                    >ungrabMouse</html:a>().</html:p>
                                <!-- @@@mouseUngrabEvent -->
                                <!-- $$$nextItemInFocusChain[overload1]$$$nextItemInFocusChainbool -->
                                <html:h3 class="fn" id="nextItemInFocusChain"><html:a
                                        name="nextItemInFocusChain"></html:a><html:span class="type"
                                            ><html:a href="qquickitem.html#QQuickItem"
                                            >QQuickItem</html:a></html:span> *
                                        QQuickItem::<html:span class="name"
                                        >nextItemInFocusChain</html:span>(<html:span class="type"
                                        >bool</html:span><html:i> forward</html:i> = true)</html:h3>
                                <html:p>Returns the item in the focus chain which is next to this
                                    item. If <html:i>forward</html:i> is
                                    <html:code>true</html:code>, or not supplied, it is the next
                                    item in the forwards direction. If <html:i>forward</html:i> is
                                        <html:code>false</html:code>, it is the next item in the
                                    backwards direction.</html:p>
                                <!-- @@@nextItemInFocusChain -->
                                <!-- $$$polish[overload1]$$$polish -->
                                <html:h3 class="fn" id="polish"><html:a name="polish"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >polish</html:span>()</html:h3>
                                <html:p>Schedules a polish event for this item.</html:p>
                                <html:p>When the scene graph processes the request, it will call
                                        <html:a href="qquickitem.html#updatePolish"
                                        >updatePolish</html:a>() on this item.</html:p>
                                <!-- @@@polish -->
                                <!-- $$$releaseResources[overload1]$$$releaseResources -->
                                <html:h3 class="fn" id="releaseResources"><html:a
                                        name="releaseResources"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >releaseResources</html:span>()</html:h3>
                                <html:p>This function is called when an item should release graphics
                                    resources which are not already managed by the nodes returend
                                    from <html:a href="qquickitem.html#updatePaintNode"
                                        >QQuickItem::updatePaintNode</html:a>().</html:p>
                                <html:p>This happens when the item is about to be removed from
                                    window it was previously rendering to. The item is guaranteed to
                                    have a <html:a href="qquickitem.html#window">window</html:a>
                                    when the function is called.</html:p>
                                <html:p>The function is called on the GUI thread and the state of
                                    the rendering thread, when it is used, is unknown. Objects
                                    should not be deleted directly, but instead scheduled for
                                    cleanup using <html:a href="qquickwindow.html#scheduleRenderJob"
                                        >QQuickWindow::scheduleRenderJob</html:a>().</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#graphics-resource-handling">Graphics
                                        Resource Handling</html:a>.</html:p>
                                <!-- @@@releaseResources -->
                                <!-- $$$scopedFocusItem[overload1]$$$scopedFocusItem -->
                                <html:h3 class="fn" id="scopedFocusItem"><html:a
                                        name="scopedFocusItem"></html:a><html:span class="type"
                                            ><html:a href="qquickitem.html#QQuickItem"
                                            >QQuickItem</html:a></html:span> *
                                        QQuickItem::<html:span class="name"
                                        >scopedFocusItem</html:span>() const</html:h3>
                                <html:p>If this item is a focus scope, this returns the item in its
                                    focus chain that currently has focus.</html:p>
                                <html:p>Returns 0 if this item is not a focus scope.</html:p>
                                <!-- @@@scopedFocusItem -->
                                <!-- $$$setAcceptHoverEvents[overload1]$$$setAcceptHoverEventsbool -->
                                <html:h3 class="fn" id="setAcceptHoverEvents"><html:a
                                        name="setAcceptHoverEvents"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >setAcceptHoverEvents</html:span>(<html:span class="type"
                                        >bool</html:span><html:i> enabled</html:i>)</html:h3>
                                <html:p>If <html:i>enabled</html:i> is true, this sets the item to
                                    accept hover events; otherwise, hover events are not accepted by
                                    this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#acceptHoverEvents"
                                        >acceptHoverEvents</html:a>().</html:p>
                                <!-- @@@setAcceptHoverEvents -->
                                <!-- $$$setAcceptedMouseButtons[overload1]$$$setAcceptedMouseButtonsQt::MouseButtons -->
                                <html:h3 class="fn" id="setAcceptedMouseButtons"><html:a
                                        name="setAcceptedMouseButtons"></html:a><html:span
                                        class="type">void</html:span> QQuickItem::<html:span
                                        class="name">setAcceptedMouseButtons</html:span>(<html:span
                                        class="type"><html:a href="qtcore/qt.html#MouseButton-enum"
                                            >Qt::MouseButtons</html:a></html:span><html:i>
                                        buttons</html:i>)</html:h3>
                                <html:p>Sets the mouse buttons accepted by this item to
                                        <html:i>buttons</html:i>.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#acceptedMouseButtons"
                                        >acceptedMouseButtons</html:a>().</html:p>
                                <!-- @@@setAcceptedMouseButtons -->
                                <!-- $$$setCursor[overload1]$$$setCursorconstQCursor& -->
                                <html:h3 class="fn" id="setCursor"><html:a name="setCursor"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >setCursor</html:span>(const <html:span class="type"><html:a
                                            href="qtgui/qcursor.html">QCursor</html:a></html:span>
                                        &amp;<html:i> cursor</html:i>)</html:h3>
                                <html:p>Sets the <html:i>cursor</html:i> shape for this
                                    item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#cursor">cursor</html:a>() and <html:a
                                        href="qquickitem.html#unsetCursor"
                                    >unsetCursor</html:a>().</html:p>
                                <!-- @@@setCursor -->
                                <!-- $$$setFiltersChildMouseEvents[overload1]$$$setFiltersChildMouseEventsbool -->
                                <html:h3 class="fn" id="setFiltersChildMouseEvents"><html:a
                                        name="setFiltersChildMouseEvents"></html:a><html:span
                                        class="type">void</html:span> QQuickItem::<html:span
                                        class="name"
                                        >setFiltersChildMouseEvents</html:span>(<html:span
                                        class="type">bool</html:span><html:i>
                                    filter</html:i>)</html:h3>
                                <html:p>Sets whether mouse events of this item's children should be
                                    filtered through this item.</html:p>
                                <html:p>If <html:i>filter</html:i> is true, <html:a
                                        href="qquickitem.html#childMouseEventFilter"
                                        >childMouseEventFilter</html:a>() will be called when a
                                    mouse event is triggered for a child item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#filtersChildMouseEvents"
                                        >filtersChildMouseEvents</html:a>().</html:p>
                                <!-- @@@setFiltersChildMouseEvents -->
                                <!-- $$$setFlag[overload1]$$$setFlagFlagbool -->
                                <html:h3 class="fn" id="setFlag"><html:a name="setFlag"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >setFlag</html:span>(<html:span class="type"><html:a
                                            href="qquickitem.html#Flag-enum"
                                        >Flag</html:a></html:span><html:i> flag</html:i>, <html:span
                                        class="type">bool</html:span><html:i> enabled</html:i> =
                                    true)</html:h3>
                                <html:p>Enables the specified <html:i>flag</html:i> for this item if
                                        <html:i>enabled</html:i> is true; if
                                        <html:i>enabled</html:i> is false, the flag is
                                    disabled.</html:p>
                                <html:p>These provide various hints for the item; for example, the
                                        <html:a href="qquickitem.html#Flag-enum"
                                        >ItemClipsChildrenToShape</html:a> flag indicates that all
                                    children of this item should be clipped to fit within the item
                                    area.</html:p>
                                <!-- @@@setFlag -->
                                <!-- $$$setFlags[overload1]$$$setFlagsFlags -->
                                <html:h3 class="fn" id="setFlags"><html:a name="setFlags"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >setFlags</html:span>(<html:span class="type"><html:a
                                            href="qquickitem.html#Flag-enum"
                                        >Flags</html:a></html:span><html:i>
                                    flags</html:i>)</html:h3>
                                <html:p>Enables the specified <html:i>flags</html:i> for this
                                    item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#flags">flags</html:a>() and <html:a
                                        href="qquickitem.html#setFlag">setFlag</html:a>().</html:p>
                                <!-- @@@setFlags -->
                                <!-- $$$setKeepMouseGrab[overload1]$$$setKeepMouseGrabbool -->
                                <html:h3 class="fn" id="setKeepMouseGrab"><html:a
                                        name="setKeepMouseGrab"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >setKeepMouseGrab</html:span>(<html:span class="type"
                                        >bool</html:span><html:i> keep</html:i>)</html:h3>
                                <html:p>Sets whether the mouse input should remain exclusively with
                                    this item.</html:p>
                                <html:p>This is useful for items that wish to grab and keep mouse
                                    interaction following a predefined gesture. For example, an item
                                    that is interested in horizontal mouse movement may set <html:a
                                        href="qquickitem.html#keepMouseGrab">keepMouseGrab</html:a>
                                    to true once a threshold has been exceeded. Once <html:a
                                        href="qquickitem.html#keepMouseGrab">keepMouseGrab</html:a>
                                    has been set to true, filtering items will not react to mouse
                                    events.</html:p>
                                <html:p>If <html:i>keep</html:i> is false, a filtering item may
                                    steal the grab. For example, <html:a
                                        href="qtquick-touchinteraction-example.html#flickable"
                                        >Flickable</html:a> may attempt to steal a mouse grab if it
                                    detects that the user has begun to move the viewport.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#keepMouseGrab"
                                    >keepMouseGrab</html:a>().</html:p>
                                <!-- @@@setKeepMouseGrab -->
                                <!-- $$$setKeepTouchGrab[overload1]$$$setKeepTouchGrabbool -->
                                <html:h3 class="fn" id="setKeepTouchGrab"><html:a
                                        name="setKeepTouchGrab"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >setKeepTouchGrab</html:span>(<html:span class="type"
                                        >bool</html:span><html:i> keep</html:i>)</html:h3>
                                <html:p>Sets whether the touch points grabbed by this item should
                                    remain exclusively with this item.</html:p>
                                <html:p>This is useful for items that wish to grab and keep specific
                                    touch points following a predefined gesture. For example, an
                                    item that is interested in horizontal touch point movement may
                                    set setKeepTouchGrab to true once a threshold has been exceeded.
                                    Once setKeepTouchGrab has been set to true, filtering items will
                                    not react to the relevant touch points.</html:p>
                                <html:p>If <html:i>keep</html:i> is false, a filtering item may
                                    steal the grab. For example, <html:a
                                        href="qtquick-touchinteraction-example.html#flickable"
                                        >Flickable</html:a> may attempt to steal a touch point grab
                                    if it detects that the user has begun to move the
                                    viewport.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#keepTouchGrab"
                                    >keepTouchGrab</html:a>() and <html:a
                                        href="qquickitem.html#setKeepMouseGrab"
                                        >setKeepMouseGrab</html:a>().</html:p>
                                <!-- @@@setKeepTouchGrab -->
                                <!-- $$$stackAfter[overload1]$$$stackAfterconstQQuickItem* -->
                                <html:h3 class="fn" id="stackAfter"><html:a name="stackAfter"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >stackAfter</html:span>(const <html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> *<html:i>
                                    sibling</html:i>)</html:h3>
                                <html:p>Moves the specified <html:i>sibling</html:i> item to the
                                    index after this item within the visual stacking order.</html:p>
                                <html:p>The given <html:i>sibling</html:i> must be a sibling of this
                                    item; that is, they must have the same immediate <html:a
                                        href="qquickitem.html#parent-prop">parent</html:a>.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-visualparent.html">Concepts -
                                        Visual Parent in Qt Quick</html:a>.</html:p>
                                <!-- @@@stackAfter -->
                                <!-- $$$stackBefore[overload1]$$$stackBeforeconstQQuickItem* -->
                                <html:h3 class="fn" id="stackBefore"><html:a name="stackBefore"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >stackBefore</html:span>(const <html:span class="type"><html:a
                                            href="qquickitem.html#QQuickItem"
                                        >QQuickItem</html:a></html:span> *<html:i>
                                    sibling</html:i>)</html:h3>
                                <html:p>Moves the specified <html:i>sibling</html:i> item to the
                                    index before this item within the visual stacking
                                    order.</html:p>
                                <html:p>The given <html:i>sibling</html:i> must be a sibling of this
                                    item; that is, they must have the same immediate <html:a
                                        href="qquickitem.html#parent-prop">parent</html:a>.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qtquick-visualcanvas-visualparent.html">Concepts -
                                        Visual Parent in Qt Quick</html:a>.</html:p>
                                <!-- @@@stackBefore -->
                                <!-- $$$textureProvider[overload1]$$$textureProvider -->
                                <html:h3 class="fn" id="textureProvider"><html:a
                                        name="textureProvider"></html:a><html:code>[virtual]
                                        </html:code><html:span class="type"><html:a
                                            href="qsgtextureprovider.html"
                                            >QSGTextureProvider</html:a></html:span> *
                                        QQuickItem::<html:span class="name"
                                        >textureProvider</html:span>() const</html:h3>
                                <html:p>Returns the texture provider for an item. The default
                                    implementation returns 0.</html:p>
                                <html:p>This function may only be called on the rendering
                                    thread.</html:p>
                                <!-- @@@textureProvider -->
                                <!-- $$$touchEvent[overload1]$$$touchEventQTouchEvent* -->
                                <html:h3 class="fn" id="touchEvent"><html:a name="touchEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >touchEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qtouchevent.html"
                                        >QTouchEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive touch events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@touchEvent -->
                                <!-- $$$touchUngrabEvent[overload1]$$$touchUngrabEvent -->
                                <html:h3 class="fn" id="touchUngrabEvent"><html:a
                                        name="touchUngrabEvent"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >touchUngrabEvent</html:span>()</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to be
                                    notified when a touch ungrab event has occurred on this
                                    item.</html:p>
                                <!-- @@@touchUngrabEvent -->
                                <!-- $$$ungrabMouse[overload1]$$$ungrabMouse -->
                                <html:h3 class="fn" id="ungrabMouse"><html:a name="ungrabMouse"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >ungrabMouse</html:span>()</html:h3>
                                <html:p>Releases the mouse grab following a call to <html:a
                                        href="qquickitem.html#grabMouse"
                                    >grabMouse</html:a>().</html:p>
                                <!-- @@@ungrabMouse -->
                                <!-- $$$ungrabTouchPoints[overload1]$$$ungrabTouchPoints -->
                                <html:h3 class="fn" id="ungrabTouchPoints"><html:a
                                        name="ungrabTouchPoints"></html:a><html:span class="type"
                                        >void</html:span> QQuickItem::<html:span class="name"
                                        >ungrabTouchPoints</html:span>()</html:h3>
                                <html:p>Ungrabs the touch points owned by this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#grabTouchPoints"
                                        >grabTouchPoints</html:a>().</html:p>
                                <!-- @@@ungrabTouchPoints -->
                                <!-- $$$unsetCursor[overload1]$$$unsetCursor -->
                                <html:h3 class="fn" id="unsetCursor"><html:a name="unsetCursor"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >unsetCursor</html:span>()</html:h3>
                                <html:p>Clears the cursor shape for this item.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qquickitem.html#cursor">cursor</html:a>() and <html:a
                                        href="qquickitem.html#setCursor"
                                    >setCursor</html:a>().</html:p>
                                <!-- @@@unsetCursor -->
                                <!-- $$$update[overload1]$$$update -->
                                <html:h3 class="fn" id="update"><html:a name="update"
                                        ></html:a><html:code>[slot] </html:code><html:span
                                        class="type">void</html:span> QQuickItem::<html:span
                                        class="name">update</html:span>()</html:h3>
                                <html:p>Schedules a call to <html:a
                                        href="qquickitem.html#updatePaintNode"
                                        >updatePaintNode</html:a>() for this item.</html:p>
                                <html:p>The call to <html:a href="qquickitem.html#updatePaintNode"
                                        >QQuickItem::updatePaintNode</html:a>() will always happen
                                    if the item is showing in a <html:a href="qquickwindow.html"
                                        >QQuickWindow</html:a>.</html:p>
                                <html:p>Only items which specifies <html:a
                                        href="qquickitem.html#Flag-enum"
                                        >QQuickItem::ItemHasContents</html:a> are allowed to call
                                    QQuickItem::update().</html:p>
                                <!-- @@@update -->
                                <!-- $$$updateInputMethod[overload1]$$$updateInputMethodQt::InputMethodQueries -->
                                <html:h3 class="fn" id="updateInputMethod"><html:a
                                        name="updateInputMethod"></html:a><html:code>[protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >updateInputMethod</html:span>(<html:span class="type"
                                            ><html:a href="qtcore/qt.html#InputMethodQuery-enum"
                                            >Qt::InputMethodQueries</html:a></html:span><html:i>
                                        queries</html:i> = Qt::ImQueryInput)</html:h3>
                                <html:p>Notify input method on updated query values if needed.
                                        <html:i>queries</html:i> indicates the changed
                                    attributes.</html:p>
                                <!-- @@@updateInputMethod -->
                                <!-- $$$updatePaintNode[overload1]$$$updatePaintNodeQSGNode*UpdatePaintNodeData* -->
                                <html:h3 class="fn" id="updatePaintNode"><html:a
                                        name="updatePaintNode"></html:a><html:code>[virtual
                                        protected] </html:code><html:span class="type"><html:a
                                            href="qsgnode.html">QSGNode</html:a></html:span> *
                                        QQuickItem::<html:span class="name"
                                        >updatePaintNode</html:span>(<html:span class="type"><html:a
                                            href="qsgnode.html">QSGNode</html:a></html:span>
                                        *<html:i> oldNode</html:i>, <html:span class="type"><html:a
                                            href="qquickitem-updatepaintnodedata.html"
                                            >UpdatePaintNodeData</html:a></html:span> *<html:i>
                                        updatePaintNodeData</html:i>)</html:h3>
                                <html:p>Called on the render thread when it is time to sync the
                                    state of the item with the scene graph.</html:p>
                                <html:p>The function is called as a result of <html:a
                                        href="qquickitem.html#update">QQuickItem::update</html:a>(),
                                    if the user has set the <html:a href="qquickitem.html#Flag-enum"
                                        >QQuickItem::ItemHasContents</html:a> flag on the
                                    item.</html:p>
                                <html:p>The function should return the root of the scene graph
                                    subtree for this item. Most implementations will return a single
                                        <html:a href="qsggeometrynode.html">QSGGeometryNode</html:a>
                                    containing the visual representation of this item.
                                        <html:i>oldNode</html:i> is the node that was returned the
                                    last time the function was called.
                                        <html:i>updatePaintNodeData</html:i> provides a pointer to
                                    the <html:a href="qsgtransformnode.html"
                                        >QSGTransformNode</html:a> associated with this <html:a
                                        href="qquickitem.html">QQuickItem</html:a>.</html:p>
                                <html:pre class="cpp"><html:span class="type"><html:a
                                            href="qsgnode.html">QSGNode</html:a></html:span>
                                    <html:span class="operator">*</html:span>MyItem<html:span
                                        class="operator">::</html:span>updatePaintNode(<html:span
                                        class="type"><html:a href="qsgnode.html"
                                        >QSGNode</html:a></html:span>
                                    <html:span class="operator">*</html:span>node<html:span
                                        class="operator">,</html:span> UpdatePaintNodeData
                                        <html:span class="operator">*</html:span>) { <html:span
                                        class="type"><html:a href="qsgsimplerectnode.html"
                                            >QSGSimpleRectNode</html:a></html:span>
                                    <html:span class="operator">*</html:span>n <html:span
                                        class="operator">=</html:span>
                                    <html:span class="keyword">static_cast</html:span><html:span
                                        class="operator">&lt;</html:span><html:span class="type"
                                            ><html:a href="qsgsimplerectnode.html"
                                            >QSGSimpleRectNode</html:a></html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">&gt;</html:span>(node); <html:span
                                        class="keyword">if</html:span> (<html:span class="operator"
                                        >!</html:span>n) { n <html:span class="operator"
                                        >=</html:span>
                                    <html:span class="keyword">new</html:span>
                                    <html:span class="type"><html:a href="qsgsimplerectnode.html"
                                            >QSGSimpleRectNode</html:a></html:span>(); n<html:span
                                        class="operator">-</html:span><html:span class="operator"
                                        >&gt;</html:span>setColor(<html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span><html:span
                                        class="operator">::</html:span>red); } n<html:span
                                        class="operator">-</html:span><html:span class="operator"
                                        >&gt;</html:span>setRect(boundingRect()); <html:span
                                        class="keyword">return</html:span> n; }</html:pre>
                                <html:p>The main thread is blocked while this function is executed
                                    so it is safe to read values from the <html:a
                                        href="qquickitem.html">QQuickItem</html:a> instance and
                                    other objects in the main thread.</html:p>
                                <html:p>If no call to QQuickItem::updatePaintNode() result in actual
                                    scene graph changes, like <html:a href="qsgnode.html#markDirty"
                                        >QSGNode::markDirty</html:a>() or adding and removing nodes,
                                    then the underlying implementation may decide to not render the
                                    scene again as the visual outcome is identical.</html:p>
                                <html:p><html:b>Warning:</html:b> It is crucial that OpenGL
                                    operations and interaction with the scene graph happens
                                    exclusively on the render thread, primarily during the
                                    QQuickItem::updatePaintNode() call. The best rule of thumb is to
                                    only use classes with the "QSG" prefix inside the
                                    QQuickItem::updatePaintNode() function.</html:p>
                                <html:p><html:b>Warning:</html:b> This function is called on the
                                    render thread. This means any QObjects or thread local storage
                                    that is created will have affinity to the render thread, so
                                    apply caution when doing anything other than rendering in this
                                    function. Similarly for signals, these will be emitted on the
                                    render thread and will thus often be delivered via queued
                                    connections.</html:p>
                                <html:p><html:b>Note: </html:b>All classes with QSG prefix should be
                                    used solely on the scene graph's rendering thread. See <html:a
                                        href="qtquick-visualcanvas-scenegraph.html#scene-graph-and-rendering"
                                        >Scene Graph and Rendering</html:a> for more
                                    information.</html:p><html:p><html:b>See also </html:b><html:a
                                        href="qsgmaterial.html">QSGMaterial</html:a>, <html:a
                                        href="qsgsimplematerial.html">QSGSimpleMaterial</html:a>,
                                        <html:a href="qsggeometrynode.html"
                                    >QSGGeometryNode</html:a>, <html:a href="qsggeometry.html"
                                        >QSGGeometry</html:a>, <html:a
                                        href="qsgflatcolormaterial.html"
                                        >QSGFlatColorMaterial</html:a>, <html:a
                                        href="qsgtexturematerial.html">QSGTextureMaterial</html:a>,
                                        <html:a href="qsgnode.html#markDirty"
                                        >QSGNode::markDirty</html:a>(), and <html:a
                                        href="qquickitem.html#graphics-resource-handling">Graphics
                                        Resource Handling</html:a>.</html:p>
                                <!-- @@@updatePaintNode -->
                                <!-- $$$updatePolish[overload1]$$$updatePolish -->
                                <html:h3 class="fn" id="updatePolish"><html:a name="updatePolish"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                    >updatePolish</html:span>()</html:h3>
                                <html:p>This function should perform any layout as required for this
                                    item.</html:p>
                                <html:p>When <html:a href="qquickitem.html#polish">polish</html:a>()
                                    is called, the scene graph schedules a polish event for this
                                    item. When the scene graph is ready to render this item, it
                                    calls updatePolish() to do any item layout as required before it
                                    renders the next frame.</html:p>
                                <!-- @@@updatePolish -->
                                <!-- $$$wheelEvent[overload1]$$$wheelEventQWheelEvent* -->
                                <html:h3 class="fn" id="wheelEvent"><html:a name="wheelEvent"
                                        ></html:a><html:code>[virtual protected]
                                        </html:code><html:span class="type">void</html:span>
                                        QQuickItem::<html:span class="name"
                                        >wheelEvent</html:span>(<html:span class="type"><html:a
                                            href="qtgui/qwheelevent.html"
                                        >QWheelEvent</html:a></html:span> *<html:i>
                                    event</html:i>)</html:h3>
                                <html:p>This event handler can be reimplemented in a subclass to
                                    receive wheel events for an item. The event information is
                                    provided by the <html:i>event</html:i> parameter.</html:p>
                                <!-- @@@wheelEvent -->
                                <!-- $$$widthValid[overload1]$$$widthValid -->
                                <html:h3 class="fn" id="widthValid"><html:a name="widthValid"
                                        ></html:a><html:code>[protected] </html:code><html:span
                                        class="type">bool</html:span> QQuickItem::<html:span
                                        class="name">widthValid</html:span>() const</html:h3>
                                <html:p>Returns whether the width property has been set
                                    explicitly.</html:p>
                                <!-- @@@widthValid -->
                                <!-- $$$window[overload1]$$$window -->
                                <html:h3 class="fn" id="window"><html:a name="window"
                                        ></html:a><html:span class="type"><html:a
                                            href="qquickwindow.html"
                                        >QQuickWindow</html:a></html:span> * QQuickItem::<html:span
                                        class="name">window</html:span>() const</html:h3>
                                <html:p>Returns the window in which this item is rendered.</html:p>
                                <html:p>The item does not have a window until it has been assigned
                                    into a scene. The <html:a href="qquickitem.html#windowChanged"
                                        >windowChanged</html:a>() signal provides a notification
                                    both when the item is entered into a scene and when it is
                                    removed from a scene.</html:p>
                                <!-- @@@window -->
                                <!-- $$$windowChanged[overload1]$$$windowChangedQQuickWindow* -->
                                <html:h3 class="fn" id="windowChanged"><html:a name="windowChanged"
                                        ></html:a><html:code>[signal] </html:code><html:span
                                        class="type">void</html:span> QQuickItem::<html:span
                                        class="name">windowChanged</html:span>(<html:span
                                        class="type"><html:a href="qquickwindow.html"
                                            >QQuickWindow</html:a></html:span> *<html:i>
                                        window</html:i>)</html:h3>
                                <html:p>This signal is emitted when the item's
                                        <html:i>window</html:i> changes.</html:p>
                                <!-- @@@windowChanged -->
                            </html:div>
                        </html:div>
                    </html:div>
                </html:div>
            </html:div>
        </html:div>
        <html:div class="footer">
            <html:p>
                <html:acronym title="Copyright">&#169;</html:acronym> 2015 The Qt Company Ltd.
                Documentation contributions included herein are the copyrights of their respective
                owners.<html:br /> The documentation provided herein is licensed under the terms of
                the <html:a href="http://www.gnu.org/licenses/fdl.html">GNU Free Documentation
                    License version 1.3</html:a> as published by the Free Software
                Foundation.<html:br /> Qt and respective logos are trademarks of The Qt Company Ltd.
                in Finland and/or other countries worldwide. All other trademarks are property of
                their respective owners. </html:p>
        </html:div>
    </html:body>
</html:html>