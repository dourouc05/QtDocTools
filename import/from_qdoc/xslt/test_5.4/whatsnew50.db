<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="5.0"
            xml:lang="en">
   <db:title>What's New in Qt 5.0</db:title>
   <db:section xml:id="qt-core-changes">
      <db:title>Qt Core Changes</db:title>
      <db:para/>
      <db:section>
         <db:title>QStandardPaths</db:title>
         <db:para>
            <db:code><db:link xlink:href="whatsnew50.html#qstandardpaths">QStandardPaths</db:link></db:code> is a more powerful version of
                                        <db:code><db:link xlink:href="qtgui/qdesktopservices.html">QDesktopServices</db:link></db:code> that was present in Qt 4. Modeled
                                    after <db:link xlink:href="http://api.kde.org/4.x-api/kdelibs- apidocs/kdecore/html/classKStandardDirs.html">KStandardDirs</db:link> from KDE 4, it contains additional
                                    features such as searching for all occurrences of a given file
                                    in the storage locations.</db:para>
      </db:section>
      <db:section>
         <db:title>Compile-time Checks for Signal-slot Connections</db:title>
         <db:para>
            <db:code><db:link xlink:href="qtcore/qobject.html">QObject</db:link></db:code> now
                                    supports an additional syntax for connecting signals to slots,
                                    which forces the compiler to check whether the signal and the
                                    receiver exist and their arguments are compatible.</db:para>
         <db:para>This syntax allows connecting a signal to any kind of C++
                                    receiver, including C++11 lambdas, member functions, or static
                                    functions. The receivers no longer need to be declared as slots,
                                    but such declarations are still recommended for
                                    readability.</db:para>
         <db:para>See <db:link xlink:href="signalsandslots-syntaxes.html">Differences
                                        between String-Based and Functor-Based Connections</db:link>
                                    for more details.</db:para>
      </db:section>
      <db:section>
         <db:title>Perl-Compatible Regular Expressions</db:title>
         <db:para>
            <db:code><db:link xlink:href="qtcore/qregularexpression.html">QRegularExpression</db:link></db:code> is introduced to provide better
                                    support for regular expressions compatible with Perl. This class
                                    is more powerful and faster than <db:code><db:link xlink:href="qtcore/qregexp.html">QRegExp</db:link></db:code>, and supports
                                    more features such as lazy and possessive quantifiers,
                                    lookbehinds, named capturing groups, and iteration of
                                    matches.</db:para>
      </db:section>
   </db:section>
   <db:section xml:id="qt-gui-changes">
      <db:title>Qt GUI Changes</db:title>
      <db:para/>
      <db:section>
         <db:title>New Classes for Windowing and Rendering</db:title>
         <db:para>A new set of enabler classes have been added, most
                                    importantly <db:code><db:link xlink:href="qtgui/qwindow.html">QWindow</db:link></db:code>,
                                        <db:code><db:link xlink:href="qtgui/qscreen.html">QScreen</db:link></db:code>, <db:code><db:link xlink:href="qtgui/qsurfaceformat.html">QSurfaceFormat</db:link></db:code>,
                                    and <db:code><db:link xlink:href="qtgui/qopenglcontext.html">QOpenGLContext</db:link></db:code>. These are now used as backends for
                                    the <db:link xlink:href="qtwidgets/qtwidgets-index.html">Qt
                                        Widgets</db:link> module and by l{Qt Quick} 2.</db:para>
      </db:section>
      <db:section>
         <db:title>OpenGL Classes</db:title>
         <db:para>Most of the useful l{Qt OpenGL} classes have been polished
                                    and moved into <db:link xlink:href="qtgui/qtgui-index.html">Qt
                                        GUI</db:link>. A few important ones are, <db:code><db:link xlink:href="qtgui/qopenglframebufferobject.html">QOpenGLFramebufferObject</db:link></db:code>, <db:code><db:link xlink:href="qtgui/qopenglshaderprogram.html">QOpenGLShaderProgram</db:link></db:code>, <db:code><db:link xlink:href="qtgui/qopenglfunctions.html">QOpenGLFunctions</db:link></db:code>, and so on. For the complete list,
                                    refer to <db:link xlink:href="qtgui/qtgui-module.html">Qt GUI C++
                                        Classes</db:link>.</db:para>
         <db:para>This change introduces <db:code><db:link xlink:href="qtgui/qopenglcontext.html">QOpenGLContext</db:link></db:code> as
                                    a replacement for QGLContext. This replacement class is more
                                    generic and decoupled from <db:code><db:link xlink:href="qtgui/qwindow.html">QWindow</db:link></db:code>, making it to support more use cases such
                                    as using the same context for multiple surfaces.</db:para>
      </db:section>
      <db:section>
         <db:title>QOpenGLPaintDevice</db:title>
         <db:para>Instead of having <db:code><db:link xlink:href="qtgui/qwindow.html">QWindow</db:link></db:code> and <db:code><db:link xlink:href="qtgui/qopenglframebufferobject.html">QOpenGLFramebufferObject</db:link></db:code> be subclasses of <db:code><db:link xlink:href="qtgui/qpaintdevice.html">QPaintDevice</db:link></db:code>, you
                                    can now use <db:code><db:link xlink:href="whatsnew50.html#qopenglpaintdevice">QOpenGLPaintDevice</db:link></db:code>. This new alternative can be
                                    created on the stack, makes it easier and flexible to render
                                    into the currently bound context using <db:code><db:link xlink:href="qtgui/qpainter.html">QPainter</db:link></db:code>.</db:para>
      </db:section>
   </db:section>
   <db:section xml:id="qt-network-changes">
      <db:title>Qt Network Changes</db:title>
      <db:para/>
      <db:section>
         <db:title>QDnsLookup</db:title>
         <db:para>It is now possible to lookup DNS records using the new
                                        <db:code><db:link xlink:href="whatsnew50.html#qdnslookup">QDnsLookup</db:link></db:code> API. This does not replace <db:code><db:link xlink:href="qtnetwork/qhostinfo.html">QHostInfo</db:link></db:code>, which is
                                    still the API to be used for resolving a host name to an IP
                                    address. <db:code><db:link xlink:href="whatsnew50.html#qdnslookup">QDnsLookup</db:link></db:code> is mainly used for other types of DNS
                                    record, such as SRV, TXT and MX.</db:para>
         <db:note>
            <db:para>This new class replaces the Q3Dns
                                    API, which is removed in Qt 5.</db:para>
         </db:note>
      </db:section>
      <db:section>
         <db:title>Better Support for IPv6 and Dual-mode Networks</db:title>
         <db:para>Most applications using host names and network layer
                                    transparent protocols, will now gain IPv6 support transparently.
                                    This means, <db:code><db:link xlink:href="qtnetwork/qtcpserver.html">QTcpServer</db:link></db:code> and <db:code><db:link xlink:href="qtnetwork/qudpsocket.html">QUdpSocket</db:link></db:code> bound
                                    to <db:code><db:link xlink:href="qtnetwork/qhostaddress.html#SpecialAddress-enum">QHostAddress::Any</db:link></db:code> can now receive both IPv4 and
                                    IPv6 connections, although, <db:code><db:link xlink:href="qtnetwork/qhostaddress.html#SpecialAddress-enum">QHostAddress::AnyIPv4</db:link></db:code> and <db:code><db:link xlink:href="qtnetwork/qhostaddress.html#SpecialAddress-enum">QHostAddress::AnyIPv6</db:link></db:code> can be used to bind to only
                                    one protocol.</db:para>
         <db:para>Outgoing http connections using <db:code><db:link xlink:href="qtnetwork/qnetworkaccessmanager.html">QNetworkAccessManager</db:link></db:code> will now attempt both IPv4
                                    and IPv6 connections in parallel, and use the one that succeeds
                                    first.</db:para>
      </db:section>
      <db:section>
         <db:title>Binding TCP Sockets</db:title>
         <db:para>
            <db:code><db:link xlink:href="qtnetwork/qtcpsocket.html">QTcpSocket</db:link></db:code>
                                    can be bound to an IP address before connecting, which is useful
                                    for limiting connection to a specific interface in a multi-homed
                                    environment.</db:para>
      </db:section>
      <db:section>
         <db:title>SSL Certificates</db:title>
         <db:para>SSL certificate extensions can now be accessed to enable
                                    further development of SSL support in Qt.</db:para>
         <db:para>Developers can also verify an SSL certificate chain
                                    programatically now.</db:para>
      </db:section>
      <db:section>
         <db:title>Workarounds for Buggy SSL Servers</db:title>
         <db:para>The <db:code><db:link xlink:href="qtnetwork/qssl.html#SslOption-enum">QSsl::SslOption</db:link></db:code> enum now allows a <db:code><db:link xlink:href="qtnetwork/qsslsocket.html">QSslSocket</db:link></db:code>-based
                                    code to access legacy systems by enabling bug
                                    workarounds.</db:para>
         <db:note>
            <db:para>This change is also back-ported to Qt
                                    4.8.</db:para>
         </db:note>
      </db:section>
      <db:section>
         <db:title>Support for Opaque Private Keys</db:title>
         <db:para>This allows applications to read private keys from devices
                                    such as PKCS#11 dongles, as illustrated by the <db:link xlink:href="http://git.iksaif.net/?p=qsslkey-p11.git">qsslkey
                                        example</db:link>
         </db:para>
      </db:section>
   </db:section>
   <db:section xml:id="qt-qml-changes">
      <db:title>Qt QML Changes</db:title>
      <db:para>This is a new module in Qt 5 that provides the QML engine
                                    and the backend infrastructure.</db:para>
      <db:section>
         <db:title>QML Engine</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>V8 JavaScript engine</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>Various parser and compiler optimizations have been
                                        implemented along with the new bindings optimizer.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>Loading/compilation can now be performed in a separate
                                        thread. This can be enabled by loading a loader object
                                        asynchronously through its source property, or by passing
                                        the Component.Asynchronous parameter to <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#createComponent-method">Qt.createComponent()</db:link></db:code>.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>New <db:code><db:link xlink:href="qtqml/qqmlengine.html#trimComponentCache">QQmlEngine::trimComponentCache</db:link>()</db:code> function
                                        safely discards unused data in the engine’s component
                                        cache to free memory.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Type System</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>New <db:link xlink:href="qtqml/qml-var.html">var</db:link>
                                        property type can hold JavaScript references.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>QML properties of type <db:link xlink:href="qtqml/qml-var.html">var</db:link> and <db:link xlink:href="qtqml/qml-variant.html">variant</db:link> can now
                                        hold pixmaps.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>Value type improvements:<db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qcolor.html">QColor</db:link></db:code> is now a value type. The red,
                                                green, blue and alpha channels of a
                                                “color” property can now be accessed
                                                using “r”, “g”,
                                                “b” and “a”
                                                properties.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Improved support for <db:code><db:link xlink:href="qtgui/qvector4d.html">QVector4D</db:link></db:code>,
                                                now constructible in QML using <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#vector4d-method">Qt.vector4d()</db:link></db:code>.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>Support for certain sequence types (<db:code><db:link xlink:href="qtcore/qlist.html">QList</db:link>&lt;int&gt;</db:code>,
                                            <db:code><db:link xlink:href="qtcore/qlist.html">QList</db:link>&lt;qreal&gt;</db:code>, <db:code><db:link xlink:href="qtcore/qlist.html">QList</db:link>&lt;bool&gt;</db:code>,
                                            <db:code><db:link xlink:href="qtcore/qlist.html">QList</db:link>&lt;&gt;</db:code>
                  <db:code><db:link xlink:href="qtcore/qurl.html">QUrl</db:link></db:code>&gt;, <db:code><db:link xlink:href="qtcore/qlist.html">QList</db:link>&lt;&gt;</db:code>
                  <db:code><db:link xlink:href="qtcore/qstring.html">QString</db:link></db:code>&gt; and <db:code><db:link xlink:href="qtcore/qstringlist.html">QStringList</db:link></db:code>) has
                                        been improved. <db:code><db:link xlink:href="qtwebkit/qtwebkit-bridge.html#qobjects">QObjects</db:link></db:code> can define Q_PROPERTYs of these types
                                        which can be accessed from JavaScript.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Other</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>JavaScript (.js) files can now import QML modules and
                                        other JavaScript files using the “import”
                                        statement.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:code><db:link xlink:href="qtqml/qqmlexpression.html">QQmlExpression</db:link></db:code> can now be constructed directly
                                        (and more efficiently) from a <db:code><db:link xlink:href="qtqml/qqmlscriptstring.html">QQmlScriptString</db:link></db:code>.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>The component returned by <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#createComponent-method">Qt.createComponent()</db:link></db:code> is no longer the owned by
                                        the engine. Be sure to hold a reference,or provide a
                                        parent.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
   </db:section>
   <db:section xml:id="qt-quick-changes">
      <db:title>Qt Quick Changes</db:title>
      <db:para>This is a new module in Qt 5 which provides the visual
                                    canvas and scenegraph backend as well as the
                                        <db:code>QtQuick</db:code> QML module for QML-based
                                    application development.</db:para>
      <db:para>The module replaces the QDeclarative* equivalents in
                                            <db:emphasis><db:code><db:link xlink:href="qtquick/qtquick-qmlmodule.html">QtQuick</db:link></db:code> 1</db:emphasis> with the
                                    following:</db:para>
      <db:itemizedlist>
         <db:listitem>
            <db:para>
               <db:code><db:link xlink:href="qtquick/qquickview.html">QQuickView</db:link></db:code>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>QQuickCanvas</db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:code><db:link xlink:href="qtquick/qquickitem.html">QQuickItem</db:link></db:code>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:code><db:link xlink:href="qtquick/qquickpainteditem.html">QQuickPaintedItem</db:link></db:code>
            </db:para>
         </db:listitem>
      </db:itemizedlist>
      <db:para>See <db:link xlink:href="qtquick/qtquick-module.html">Qt Quick C++
                                        Classes</db:link> for the complete list.</db:para>
      <db:para>The <db:code><db:link xlink:href="qtquick/qtquick-qmlmodule.html">QtQuick</db:link></db:code> 2.0 QML module is a major update, and the
                                    following sections outline the features that come with
                                    it:</db:para>
      <db:section>
         <db:title>New Graphics Architecture</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>Qt Quick 2.0 uses a dedicated OpenGL (ES) 2.0 based
                                            <db:link xlink:href="topics-graphics.html#qt-quick-scene-graph">Qt Quick Scene Graph</db:link> scene graph for all its
                                        rendering.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Visual and Graphic Types</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>New Canvas type for drawing, provides a HTML5
                                        canvas-like API along with the following additional features:<db:itemizedlist>
                     <db:listitem>
                        <db:para>Two render targets:
                                                  <db:code>Canvas::Image</db:code>{Canvas.Image}
                                                and
                                                <db:code>Canvas::FrameBufferObject</db:code>{Canvas.FramebufferObject}.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Background thread rendering.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Tiled canvas rendering.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Support for most of the HTML5 context2d
                                                APIs.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>Image type now has:<db:itemizedlist>
                     <db:listitem>
                        <db:para>New horizontal and vertical alignment
                                                properties, <db:link xlink:href="qtquick/qml-qtquick-image.html#horizontalAlignment-prop">horizontalAlignment</db:link> and <db:link xlink:href="qtquick/qml-qtquick-image.html#verticalAlignment-prop">verticalAlignment</db:link>.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-image.html#fillMode-prop">Image.Pad</db:link> enum value for
                                                  <db:code>fillMode</db:code> property does not
                                                transform the image unlike the other
                                                  <db:code>fillMode</db:code> enum
                                                values.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-image.html#sourceSize-prop">sourceSize.width</db:link> and <db:link xlink:href="qtquick/qml-qtquick-image.html#sourceSize-prop">sourceSize.height</db:link> now fits the image to
                                                size maintaining the aspect ratio.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Animations</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>New <db:link xlink:href="qtquick/qtquick-imageelements-example.html#spritesequence">SpriteSequence</db:link> type renders animated sprites
                                        and can transition between animations.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>New <db:link xlink:href="qtquick/qml-qtquick-sprite.html">Sprite</db:link> type that represents each animation in
                                        a <db:link xlink:href="qtquick/qtquick-imageelements-example.html#spritesequence">SpriteSequence</db:link>.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>New <db:link xlink:href="qtquick/qtquick-effects-sprites.html#animatedsprite">AnimatedSprite</db:link> type for drawing single sprite
                                        animations.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Text</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="whatsnew50.html#text">Text</db:link>:<db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-text.html#textFormat-prop">AutoText</db:link> format now switches to
                                                  <db:code>StyledText</db:code> instead of
                                                  <db:code>RichText</db:code>.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-text.html#lineLaidOut-signal">lineLaidOut</db:link> signal is emitted for every
                                                line during the layout process to give the option of
                                                positioning and/or resizing text as they are laid
                                                out.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-text.html#doLayout-method">doLayout()</db:link> method can now trigger the
                                                text layout from JavaScript.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-text.html#elide-prop">ElideRight</db:link> to support text that spans
                                                multiple lines.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-text.html#fontSizeMode-prop">fontSizeMode</db:link> property now supports
                                                wrapping the text to the item size.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-text.html#minimumPixelSize-prop">minimumPixelSize</db:link> and <db:link xlink:href="qtquick/qml-qtquick-text.html#minimumPointSize-prop">minimumPointSize</db:link> properties can be used
                                                to specify a lower bound when
                                                auto-fitting.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:code>TextEdit::textFormat</db:code>{<db:link xlink:href="qtquick/qml-qtquick-textedit.html">TextEdit</db:link>.textFormat} property now defaults to
                                            <db:code>PlainText</db:code> instead of
                                            <db:code>AutoText</db:code>.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="qtquick/qml-qtquick-textinput.html">TextInput</db:link> now has
                                            <db:code>wrapMode</db:code> and verticalAlignment
                                        properties.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:code>TextInput.positionAt()</db:code> now takes
                                            <db:code>y</db:code> value.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>User Input</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>New <db:link xlink:href="qtquick/qml-qtquick-multipointtoucharea.html">MultiPointTouchArea</db:link> type can process
                                        multi-point touches and provide information about the touch
                                        points including position, pressure and velocity.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="qtquick/qml-qtquick-mousearea.html">MouseArea</db:link> type now:<db:itemizedlist>
                     <db:listitem>
                        <db:para>Propagates wheel events.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Propagates <db:code>clicked</db:code>,
                                                  <db:code>doubleClicked</db:code> and
                                                  <db:code>pressAndHold</db:code> events
                                                differently to <db:code>pressed</db:code>. These
                                                events are propagated to the handler of the topmost
                                                  <db:link xlink:href="qtquick/qml-qtquick-mousearea.html">MouseArea</db:link> in the stack-order.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Can ignore the propagated events using the
                                                  <db:code>propagateComposedEvents</db:code>.
                                                Such ignored events are propagated to the next
                                                  <db:link xlink:href="qtquick/qml-qtquick-mousearea.html">MouseArea</db:link> handler in the
                                                stack-order.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Specialized Containers</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="qtquick/qtquick-touchinteraction-example.html#flickable">Flickable</db:link> type now has:<db:itemizedlist>
                     <db:listitem>
                        <db:para>a new <db:code>rebound</db:code> property
                                                that enables you to specify the transition type for
                                                the bounce back animation.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New <db:code>topMargin</db:code>,
                                                  <db:code>bottomMargin</db:code>,
                                                  <db:code>leftMargin</db:code>, and
                                                  <db:code>rightMargin</db:code> properties
                                                allow extra margin space to be specified. This is
                                                useful to implement the pull-to-refresh
                                                functionality for a list.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New <db:code>xOrigin</db:code> and
                                                  <db:code>yOrigin</db:code> properties provide
                                                the top left position of the content item.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New <db:code>dragging</db:code>,
                                                  <db:code>draggingHorizontally</db:code>, and
                                                  <db:code>draggingVertically</db:code>
                                                properties that provide information when the
                                                flickable area is dragged.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Positioners</db:title>
         <db:para>The following features are related to Row, Column, Grid, and
                                    Flow types:</db:para>
         <db:itemizedlist>
            <db:listitem>
               <db:para>The “add” and “move”
                                        transitions can now access the <db:link xlink:href="qtquick/qml-qtquick-viewtransition.html">ViewTransition</db:link> attached property, and also
                                        animate arbitrary item properties (instead of being
                                        restricted to animating an item’s position).</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>New <db:code>Positioner.index</db:code>,
                                            <db:code>Positioner.isFirstItem</db:code> and
                                            <db:code>Positioner.isLastItem</db:code> attached
                                        properties for items within a positioner.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>The <db:link xlink:href="qtquick/qtquick-positioning-layouts.html#grid">Grid</db:link> type has new
                                            <db:code>rowSpacing</db:code> and
                                            <db:code>columnSpacing</db:code>
                                        properties.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>All spacing properties on positioners now use real
                                        numbers instead of integers.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Models and Views</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="qtquick/qml-qtquick-listview.html">ListView</db:link> and <db:link xlink:href="qtquick/qtquick-draganddrop-example.html#gridview">GridView</db:link>:<db:itemizedlist>
                     <db:listitem>
                        <db:para>Transitions can be specified to animate the
                                                adding, removing and moving of items in a view. For
                                                details, see <db:link xlink:href="qtquick/qml-qtquick-viewtransition.html">ViewTransition</db:link>, <db:link xlink:href="qtquick/qml-qtquick-listview.html#add-signal">ListView.add</db:link>, <db:link xlink:href="qtquick/qml-qtquick-listview.html#addDisplaced-prop">ListView.addDisplaced</db:link>, <db:link xlink:href="qtquick/qml-qtquick-gridview.html#add-signal">GridView.add</db:link>, and <db:link xlink:href="qtquick/qml-qtquick-gridview.html#addDisplaced-prop">GridView.addDisplaced</db:link>.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New
                                                  <db:code>verticalLayoutDirection</db:code>
                                                property enables items to be laid out from
                                                bottom-to-top using the
                                                  <db:code>BottomToTop</db:code> enum
                                                value.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>The <db:code>cacheBuffer</db:code> property
                                                now has a non-zero default and delegates in the
                                                  <db:code>cacheBuffer</db:code> are created
                                                asynchronously.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New <db:code>headerItem</db:code> and
                                                  <db:code>footerItem</db:code> properties
                                                provide access to the instantiated header and footer
                                                items.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code>RightToLeft</db:code> layout now
                                                also reverses the
                                                  <db:code>preferredHighlightBegin</db:code> and
                                                  <db:code>preferredHighlightEnd</db:code>.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="qtquick/qml-qtquick-listview.html">ListView</db:link>'s new
                                            <db:code>section.labelPositioning</db:code> property
                                        can fix the current section label to the start of the view,
                                        and the next section label to the end of the view, so that
                                        labels do not scroll while section items are still in
                                        view.</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="qtquick/qml-qtquick-pathview.html">PathView</db:link> has two new properties,
                                            <db:code>curretnItem</db:code> and
                                            <db:code>maximumFlickVelocity</db:code>.</db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title>Particles System Support</db:title>
         <db:para>The new <db:code><db:link xlink:href="qtquick/qtquick-qmlmodule.html">QtQuick</db:link></db:code>.Particles 2.0 module provides support for
                                    the composition of a variety of 2D particle systems. See
                                        <db:code>Using the Qt Quick Particle System</db:code>
                                    for more details.</db:para>
      </db:section>
      <db:section>
         <db:title>Utility Types</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>New <db:link xlink:href="qtquick/qml-qtquick-patharc.html">PathArc</db:link>, <db:link xlink:href="qtquick/qml-qtquick-pathcurve.html">PathCurve</db:link> and <db:link xlink:href="qtquick/qml-qtquick-pathsvg.html">PathSvg</db:link> types:<db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code>PathArc</db:code> and
                                                  <db:code>PathCurve</db:code> support the
                                                construction of arcs and catmull-rom curves,
                                                respectively. <db:link xlink:href="qtquick/qml-qtquick-pathsvg.html">PathSvg</db:link> supports the construction of a
                                                path from an SVG string.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>Loader:<db:itemizedlist>
                     <db:listitem>
                        <db:para>New <db:code>asynchronous</db:code>
                                                property allows components to be instantiated with a
                                                lower chance of blocking. With the
                                                  <db:code>asynchronous</db:code> property set
                                                to <db:code>true</db:code>, the component is
                                                compiled in a background thread.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New <db:code>active</db:code> property
                                                delays instantiation of a Loader object’s
                                                item.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>New <db:code>setSource(JSObject)</db:code>
                                                method to specify initial property values for the
                                                loaded item, similar to
                                                  <db:code>Component::createObject</db:code>
                                                {Component.createObject()}.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code>sourceChanged</db:code> signal is
                                                now only emitted when the source changes and the
                                                  <db:code>sourceComponentChanged</db:code>
                                                signal is now emitted when the
                                                  <db:code>sourceComponent</db:code> is changed.
                                                Ealier, these signals were emitted by the Loader
                                                only when one of the two properties had
                                                changed.</db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>Loader type can now be used as a value source,
                                                and it can restore any previously set binding if its
                                                "when" clause becomes
                                                <db:code>false</db:code>.</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
   </db:section>
   <db:section xml:id="qt-multimedia-changes">
      <db:title>Qt Multimedia Changes</db:title>
      <db:para>Qt Multimedia is an essential module replacing the <db:code><db:link xlink:href="qtmultimedia/qtmultimedia-qmlmodule.html">QtMultimedia</db:link></db:code> library and Qt MultimediaKit mobility
                                    API in Qt 4.8. It features full support for Audio and Video
                                    playback, and recording. Support for web cameras is
                                    integrated.</db:para>
      <db:para>Qt Multimedia uses the system’s native multimedia
                                    engine as a backend, and does not come with its own audio or
                                    video codecs. Thus the supported list of codecs is equivalent to
                                    the ones supported by the underlying OS.</db:para>
      <db:para>It uses DirectShow and WMF on Windows, AVFoundation on Mac
                                    and gstreamer on Linux.</db:para>
   </db:section>
   <db:section xml:id="new-classes-and-functions">
      <db:title>New Classes and
                                    Functions</db:title>
      <db:para>The section provides a comprehensive list of all new classes
                                    and functions introduced in Qt 5.</db:para>
      <db:itemizedlist>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-classes"> New
                                        Classes</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-member-functions"> New Member
                                            Functions</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-functions-in-namespaces"> New
                                            Functions in Namespaces</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-global-functions"> New Global
                                            Functions</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-macros"> New
                                        Macros</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-enum-types"> New Enum
                                        Types</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-typedefs"> New
                                        Typedefs</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-properties"> New
                                        Properties</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-qml-types"> New QML
                                        Types</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-qml-properties"> New QML
                                            Properties</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="#new-qml-methods"> New QML
                                            Methods</db:link>
            </db:para>
         </db:listitem>
      </db:itemizedlist>
      <db:section>
         <db:title> New Classes</db:title>
         <db:variablelist>
            <db:varlistentry>
               <db:term>A</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qabstractnativeeventfilter.html">QAbstractNativeEventFilter</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>B</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qbackingstore.html">QBackingStore</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>C</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html">QCameraFeedbackControl</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtcore/qjsonobject-const-iterator.html">const_iterator</db:link> (<db:code><db:link xlink:href="qtcore/qjsonobject.html">QJsonObject</db:link></db:code>)</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>D</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtnetwork/qdnslookup.html">QDnsLookup</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>E</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qenterevent.html">QEnterEvent</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qeventlooplocker.html">QEventLoopLocker</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qexception.html">QException</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qexposeevent.html">QExposeEvent</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>F</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qfiledevice.html">QFileDevice</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>G</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qguiapplication.html">QGuiApplication</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>I</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qinputmethodqueryevent.html">QInputMethodQueryEvent</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtcore/qjsonobject-iterator.html">iterator</db:link> (<db:code><db:link xlink:href="qtcore/qjsonobject.html">QJsonObject</db:link></db:code>)</db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>J</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qjsengine.html">QJSEngine</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qjsvalue.html">QJSValue</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qjsonarray.html">QJsonArray</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qjsondocument.html">QJsonDocument</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qjsonobject.html">QJsonObject</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qjsonparseerror.html">QJsonParseError</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qjsonvalue.html">QJsonValue</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>M</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qmessagelogcontext.html">QMessageLogContext</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qmessagelogger.html">QMessageLogger</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qmimedatabase.html">QMimeDatabase</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qmimetype.html">QMimeType</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>O</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglbuffer.html">QOpenGLBuffer</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglcontext.html">QOpenGLContext</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglcontextgroup.html">QOpenGLContextGroup</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglframebufferobject.html">QOpenGLFramebufferObject</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglframebufferobjectformat.html">QOpenGLFramebufferObjectFormat</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglfunctions.html">QOpenGLFunctions</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglpaintdevice.html">QOpenGLPaintDevice</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglshader.html">QOpenGLShader</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qopenglshaderprogram.html">QOpenGLShaderProgram</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>Q</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlcomponent.html">QQmlComponent</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlengine.html">QQmlEngine</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlerror.html">QQmlError</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlexpression.html">QQmlExpression</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlextensionplugin.html">QQmlExtensionPlugin</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmllistproperty.html">QQmlListProperty</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmllistreference.html">QQmlListReference</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlnetworkaccessmanagerfactory.html">QQmlNetworkAccessManagerFactory</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlparserstatus.html">QQmlParserStatus</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtqml/qqmlproperty.html">QQmlProperty</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtquick/qquickimageprovider.html">QQuickImageProvider</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtquick/qquicktexturefactory.html">QQuickTextureFactory</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtquick/qquickview.html">QQuickView</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtquick/qquickwindow.html">QQuickWindow</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>R</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qregularexpression.html">QRegularExpression</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qregularexpressionmatch.html">QRegularExpressionMatch</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qregularexpressionmatchiterator.html">QRegularExpressionMatchIterator</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>S</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qscreen.html">QScreen</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtwidgets/qscroller.html">QScroller</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtnetwork/qsslcertificateextension.html">QSslCertificateExtension</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qstandardpaths.html">QStandardPaths</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qstylehints.html">QStyleHints</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qsurface.html">QSurface</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qsurfaceformat.html">QSurfaceFormat</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>T</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qtouchdevice.html">QTouchDevice</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>U</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qunhandledexception.html">QUnhandledException</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qurlquery.html">QUrlQuery</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>W</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtcore/qwineventnotifier.html">QWinEventNotifier</db:link></db:code>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:code><db:link xlink:href="qtgui/qwindow.html">QWindow</db:link></db:code>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
         </db:variablelist>
      </db:section>
      <db:section>
         <db:title> New Member Functions</db:title>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qobject.html">QObject</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qobject.html#connectNotify">connectNotify</db:link></db:emphasis>(const QMetaMethod
                                                  &amp;<db:emphasis> signal</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qobject.html#disconnectNotify">disconnectNotify</db:link></db:emphasis>(const
                                                  QMetaMethod &amp;<db:emphasis>
                                                  signal</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qobject.html#findChildren-3">findChildren</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  Qt::FindChildOptions<db:emphasis> options</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qobject.html#isSignalConnected">isSignalConnected</db:link></db:emphasis>(const
                                                  QMetaMethod &amp;<db:emphasis> signal</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qvariant.html">QVariant</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toJsonArray">toJsonArray</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toJsonDocument">toJsonDocument</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toJsonObject">toJsonObject</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toJsonValue">toJsonValue</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toModelIndex">toModelIndex</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toRegularExpression">toRegularExpression</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvariant.html#toUuid">toUuid</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qmetatype.html">QMetaType</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#construct">construct</db:link></db:emphasis>(int<db:emphasis>
                                                  type</db:emphasis>, void *<db:emphasis> where</db:emphasis>,
                                                  const void *<db:emphasis> copy</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#construct-3">construct</db:link></db:emphasis>(void *<db:emphasis>
                                                  where</db:emphasis>, const void *<db:emphasis>
                                                  copy</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#create-2">create</db:link></db:emphasis>(const void *<db:emphasis>
                                                  copy</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#destroy-2">destroy</db:link></db:emphasis>(void *<db:emphasis>
                                                  data</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#destruct">destruct</db:link></db:emphasis>(int<db:emphasis>
                                                  type</db:emphasis>, void *<db:emphasis>
                                                  where</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#destruct-2">destruct</db:link></db:emphasis>(void *<db:emphasis>
                                                  data</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#flags">flags</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#isRegistered-2">isRegistered</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#isValid">isValid</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#metaObjectForType">metaObjectForType</db:link></db:emphasis>(int<db:emphasis>
                                                  type</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#sizeOf">sizeOf</db:link></db:emphasis>(int<db:emphasis>
                                                  type</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#sizeOf-2">sizeOf</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetatype.html#typeFlags">typeFlags</db:link></db:emphasis>(int<db:emphasis>
                                                  type</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qpointer.html">QPointer</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qpointer.html#clear">clear</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qmetaobject.html">QMetaObject</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetaobject.html#checkConnectArgs-2">checkConnectArgs</db:link></db:emphasis>(const
                                                  QMetaMethod &amp;<db:emphasis> signal</db:emphasis>, const
                                                  QMetaMethod &amp;<db:emphasis>
                                                  method</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/quuid.html">QUuid</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/quuid.html#createUuidV3">createUuidV3</db:link></db:emphasis>(const QUuid
                                                  &amp;<db:emphasis> ns</db:emphasis>, const QByteArray
                                                  &amp;<db:emphasis> baseData</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/quuid.html#createUuidV3-2">createUuidV3</db:link></db:emphasis>(const QUuid
                                                  &amp;<db:emphasis> ns</db:emphasis>, const QString
                                                  &amp;<db:emphasis> baseData</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/quuid.html#createUuidV5">createUuidV5</db:link></db:emphasis>(const QUuid
                                                  &amp;<db:emphasis> ns</db:emphasis>, const QByteArray
                                                  &amp;<db:emphasis> baseData</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/quuid.html#createUuidV5-2">createUuidV5</db:link></db:emphasis>(const QUuid
                                                  &amp;<db:emphasis> ns</db:emphasis>, const QString
                                                  &amp;<db:emphasis> baseData</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qmetamethod.html">QMetaMethod</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#fromSignal">fromSignal</db:link></db:emphasis>(PointerToMemberFunction<db:emphasis>
                                                  signal</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#isValid">isValid</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#methodSignature">methodSignature</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#name">name</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#parameterCount">parameterCount</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#parameterType">parameterType</db:link></db:emphasis>(int<db:emphasis>
                                                  index</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#returnType">returnType</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qabstracteventdispatcher.html">QAbstractEventDispatcher</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qabstracteventdispatcher.html#filterNativeEvent">filterNativeEvent</db:link></db:emphasis>(const
                                                  QByteArray &amp;<db:emphasis> eventType</db:emphasis>, void
                                                  *<db:emphasis> message</db:emphasis>, long *<db:emphasis>
                                                  result</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qabstracteventdispatcher.html#installNativeEventFilter">installNativeEventFilter</db:link></db:emphasis>(QAbstractNativeEventFilter
                                                  *<db:emphasis> filterObj</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qabstracteventdispatcher.html#removeNativeEventFilter">removeNativeEventFilter</db:link></db:emphasis>(QAbstractNativeEventFilter
                                                  *<db:emphasis> filter</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qcoreapplication.html">QCoreApplication</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qcoreapplication.html#installNativeEventFilter">installNativeEventFilter</db:link></db:emphasis>(QAbstractNativeEventFilter
                                                  *<db:emphasis> filterObj</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qcoreapplication.html#removeNativeEventFilter">removeNativeEventFilter</db:link></db:emphasis>(QAbstractNativeEventFilter
                                                  *<db:emphasis> filterObject</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qdrag.html">QDrag</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qdrag.html#dragCursor">dragCursor</db:link></db:emphasis>(Qt::DropAction<db:emphasis>
                                                  action</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:link xlink:href="qtgui/qtouchevent-touchpoint.html">TouchPoint</db:link>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtouchevent-touchpoint.html#rawScreenPositions">rawScreenPositions</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qguiapplication.html">QGuiApplication</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qguiapplication.html#isSavingSession">isSavingSession</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qmouseevent.html">QMouseEvent</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qmouseevent.html#localPos">localPos</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qmouseevent.html#screenPos">screenPos</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qmouseevent.html#windowPos">windowPos</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qpalette.html">QPalette</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qpalette.html#swap">swap</db:link></db:emphasis>(QPalette &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qlibraryinfo.html">QLibraryInfo</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlibraryinfo.html#isDebugBuild">isDebugBuild</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qthread.html">QThread</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qthread.html#eventDispatcher">eventDispatcher</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qthread.html#setEventDispatcher">setEventDispatcher</db:link></db:emphasis>(QAbstractEventDispatcher
                                                  *<db:emphasis> eventDispatcher</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qmutex.html">QMutex</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmutex.html#isRecursive">isRecursive</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qchar.html">QChar</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#hasMirrored-2">hasMirrored</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isDigit-2">isDigit</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isLetter-2">isLetter</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isLetterOrNumber-2">isLetterOrNumber</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isLower-2">isLower</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isMark-2">isMark</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isNonCharacter-2">isNonCharacter</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isNonCharacter">isNonCharacter</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isNumber-2">isNumber</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isPrint-2">isPrint</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isPunct-2">isPunct</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isSpace-2">isSpace</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isSurrogate-2">isSurrogate</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isSurrogate">isSurrogate</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isSymbol-2">isSymbol</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isTitleCase-2">isTitleCase</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qchar.html#isUpper-2">isUpper</db:link></db:emphasis>(uint<db:emphasis>
                                                  ucs4</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qdatetime.html">QDateTime</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qdatetime.html#swap">swap</db:link></db:emphasis>(QDateTime &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qcryptographichash.html">QCryptographicHash</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qcryptographichash.html#addData-2">addData</db:link></db:emphasis>(QIODevice *<db:emphasis>
                                                  device</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qeasingcurve.html">QEasingCurve</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qeasingcurve.html#swap">swap</db:link></db:emphasis>(QEasingCurve &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qeasingcurve.html#toCubicSpline">toCubicSpline</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkcachemetadata.html">QNetworkCacheMetaData</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcachemetadata.html#swap">swap</db:link></db:emphasis>(QNetworkCacheMetaData
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qhttppart.html">QHttpPart</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qhttppart.html#swap">swap</db:link></db:emphasis>(QHttpPart &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkrequest.html">QNetworkRequest</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkrequest.html#swap">swap</db:link></db:emphasis>(QNetworkRequest
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkcookiejar.html">QNetworkCookieJar</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookiejar.html#deleteCookie">deleteCookie</db:link></db:emphasis>(const
                                                  QNetworkCookie &amp;<db:emphasis>
                                                  cookie</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookiejar.html#insertCookie">insertCookie</db:link></db:emphasis>(const
                                                  QNetworkCookie &amp;<db:emphasis>
                                                  cookie</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookiejar.html#updateCookie">updateCookie</db:link></db:emphasis>(const
                                                  QNetworkCookie &amp;<db:emphasis>
                                                  cookie</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookiejar.html#validateCookie">validateCookie</db:link></db:emphasis>(const
                                                  QNetworkCookie &amp;<db:emphasis> cookie</db:emphasis>,
                                                  const QUrl &amp;<db:emphasis> url</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkconfiguration.html">QNetworkConfiguration</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkconfiguration.html#swap">swap</db:link></db:emphasis>(QNetworkConfiguration
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkaccessmanager.html">QNetworkAccessManager</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkaccessmanager.html#clearAccessCache">clearAccessCache</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkreply.html">QNetworkReply</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkreply.html#ignoreSslErrorsImplementation">ignoreSslErrorsImplementation</db:link></db:emphasis>(const
                                                  QList&lt;QSslError&gt; &amp;<db:emphasis>
                                                  errors</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkreply.html#setSslConfigurationImplementation">setSslConfigurationImplementation</db:link></db:emphasis>(const
                                                  QSslConfiguration &amp;<db:emphasis>
                                                  configuration</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkreply.html#sslConfigurationImplementation">sslConfigurationImplementation</db:link></db:emphasis>(QSslConfiguration
                                                  &amp;<db:emphasis> configuration</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkcookie.html">QNetworkCookie</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookie.html#normalize">normalize</db:link></db:emphasis>(const QUrl
                                                  &amp;<db:emphasis> url</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookie.html#operator-eq-eq">operator==</db:link></db:emphasis>(const QNetworkCookie
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkcookie.html#swap">swap</db:link></db:emphasis>(QNetworkCookie
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworksession.html">QNetworkSession</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworksession.html#usagePoliciesChanged">usagePoliciesChanged</db:link></db:emphasis>(QNetworkSession::UsagePolicies<db:emphasis>
                                                  usagePolicies</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkinterface.html">QNetworkInterface</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkinterface.html#swap">swap</db:link></db:emphasis>(QNetworkInterface
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkproxyquery.html">QNetworkProxyQuery</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxyquery.html#swap">swap</db:link></db:emphasis>(QNetworkProxyQuery
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkproxy.html">QNetworkProxy</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#hasRawHeader">hasRawHeader</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> headerName</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#header">header</db:link></db:emphasis>(QNetworkRequest::KnownHeaders<db:emphasis>
                                                  header</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#rawHeader">rawHeader</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> headerName</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#rawHeaderList">rawHeaderList</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#setHeader">setHeader</db:link></db:emphasis>(QNetworkRequest::KnownHeaders<db:emphasis>
                                                  header</db:emphasis>, const QVariant &amp;<db:emphasis>
                                                  value</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#setRawHeader">setRawHeader</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> headerName</db:emphasis>, const
                                                  QByteArray &amp;<db:emphasis>
                                                  headerValue</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkproxy.html#swap">swap</db:link></db:emphasis>(QNetworkProxy
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qhostaddress.html">QHostAddress</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qhostaddress.html#isLoopback">isLoopback</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qabstractsocket.html">QAbstractSocket</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#bind">bind</db:link></db:emphasis>(const QHostAddress
                                                  &amp;<db:emphasis> address</db:emphasis>, quint16<db:emphasis>
                                                  port</db:emphasis>, BindMode<db:emphasis>
                                                  mode</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#bind-2">bind</db:link></db:emphasis>(quint16<db:emphasis>
                                                  port</db:emphasis>, BindMode<db:emphasis>
                                                  mode</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#pauseMode">pauseMode</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#resume">resume</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#setPauseMode">setPauseMode</db:link></db:emphasis>(PauseModes<db:emphasis>
                                                  pauseMode</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qnetworkaddressentry.html">QNetworkAddressEntry</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworkaddressentry.html#swap">swap</db:link></db:emphasis>(QNetworkAddressEntry
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qsslcipher.html">QSslCipher</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcipher.html#swap">swap</db:link></db:emphasis>(QSslCipher &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qsslconfiguration.html">QSslConfiguration</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslconfiguration.html#swap">swap</db:link></db:emphasis>(QSslConfiguration
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qsslerror.html">QSslError</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslerror.html#swap">swap</db:link></db:emphasis>(QSslError &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qsslkey.html">QSslKey</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslkey.html#swap">swap</db:link></db:emphasis>(QSslKey &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qtcpserver.html">QTcpServer</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qtcpserver.html#acceptError">acceptError</db:link></db:emphasis>(QAbstractSocket::SocketError<db:emphasis>
                                                  socketError</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qtcpserver.html#pauseAccepting">pauseAccepting</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qtcpserver.html#resumeAccepting">resumeAccepting</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qlocalserver.html">QLocalServer</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qlocalserver.html#listen-2">listen</db:link></db:emphasis>(qintptr<db:emphasis>
                                                  socketDescriptor</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qlocalserver.html#socketOptions-prop">socketOptions</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qsslcertificate.html">QSslCertificate</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcertificate.html#extensions">extensions</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcertificate.html#issuerInfoAttributes">issuerInfoAttributes</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcertificate.html#subjectInfoAttributes">subjectInfoAttributes</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcertificate.html#swap">swap</db:link></db:emphasis>(QSslCertificate
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcertificate.html#toText">toText</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslcertificate.html#verify">verify</db:link></db:emphasis>(QList&lt;QSslCertificate&gt;<db:emphasis>
                                                  certificateChain</db:emphasis>, const QString
                                                  &amp;<db:emphasis> hostName</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtnetwork/qsslsocket.html">QSslSocket</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslsocket.html#resume">resume</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslsocket.html#sslLibraryVersionNumber">sslLibraryVersionNumber</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qsslsocket.html#sslLibraryVersionString">sslLibraryVersionString</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtprintsupport/qprinterinfo.html">QPrinterInfo</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtprintsupport/qprinterinfo.html#description">description</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtprintsupport/qprinterinfo.html#location">location</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtprintsupport/qprinterinfo.html#makeAndModel">makeAndModel</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtprintsupport/qprinterinfo.html#printerInfo">printerInfo</db:link></db:emphasis>(const QString
                                                  &amp;<db:emphasis> printerName</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdesigner/qdesignercontainerextension.html">QDesignerContainerExtension</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignercontainerextension.html#canAddWidget">canAddWidget</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignercontainerextension.html#canRemove">canRemove</db:link></db:emphasis>(int<db:emphasis>
                                                  index</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdesigner/qabstractformbuilder.html">QAbstractFormBuilder</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qabstractformbuilder.html#errorString">errorString</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qprocess.html">QProcess</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qprocess.html#arguments">arguments</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qprocess.html#program">program</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qprocessenvironment.html">QProcessEnvironment</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qprocessenvironment.html#swap">swap</db:link></db:emphasis>(QProcessEnvironment
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qfileinfo.html">QFileInfo</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qfileinfo.html#isNativePath">isNativePath</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qfileinfo.html#swap">swap</db:link></db:emphasis>(QFileInfo &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qurl.html">QUrl</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qurl.html#setQuery-2">setQuery</db:link></db:emphasis>(const QUrlQuery
                                                  &amp;<db:emphasis> query</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qurl.html#toDisplayString">toDisplayString</db:link></db:emphasis>(FormattingOptions<db:emphasis>
                                                  options</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qdebug.html">QDebug</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qdebug.html#autoInsertSpaces">autoInsertSpaces</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qdebug.html#setAutoInsertSpaces">setAutoInsertSpaces</db:link></db:emphasis>(bool<db:emphasis>
                                                  b</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qdebug.html#swap">swap</db:link></db:emphasis>(QDebug &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qabstractitemmodel.html">QAbstractItemModel</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qabstractitemmodel.html#layoutAboutToBeChanged">layoutAboutToBeChanged</db:link></db:emphasis>(const
                                                  QList&lt;QPersistentModelIndex&gt; &amp;<db:emphasis>
                                                  parents</db:emphasis>,
                                                  QAbstractItemModel::LayoutChangeHint<db:emphasis>
                                                  hint</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qabstractitemmodel.html#layoutChanged">layoutChanged</db:link></db:emphasis>(const
                                                  QList&lt;QPersistentModelIndex&gt; &amp;<db:emphasis>
                                                  parents</db:emphasis>,
                                                  QAbstractItemModel::LayoutChangeHint<db:emphasis>
                                                  hint</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qdir.html">QDir</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qdir.html#removeRecursively">removeRecursively</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qdir.html#swap">swap</db:link></db:emphasis>(QDir &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qpersistentmodelindex.html">QPersistentModelIndex</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qpersistentmodelindex.html#swap">swap</db:link></db:emphasis>(QPersistentModelIndex
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qhash.html">QHash</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qlist.html">QList</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlist.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlist.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qlinkedlist.html">QLinkedList</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlinkedlist.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlinkedlist.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qmap.html">QMap</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmap.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmap.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qsizef.html">QSizeF</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsizef.html#scaled-2">scaled</db:link></db:emphasis>(const QSizeF
                                                  &amp;<db:emphasis> s</db:emphasis>,
                                                  Qt::AspectRatioMode<db:emphasis> mode</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsizef.html#scaled">scaled</db:link></db:emphasis>(qreal<db:emphasis>
                                                  width</db:emphasis>, qreal<db:emphasis> height</db:emphasis>,
                                                  Qt::AspectRatioMode<db:emphasis> mode</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsizef.html#transposed">transposed</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qstring.html">QString</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#append-3">append</db:link></db:emphasis>(const QChar *<db:emphasis>
                                                  str</db:emphasis>, int<db:emphasis> len</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#contains-7">contains</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#count-5">count</db:link></db:emphasis>(const QRegularExpression
                                                  &amp;<db:emphasis> re</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#fromLatin1-2">fromLatin1</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> str</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#fromLocal8Bit-2">fromLocal8Bit</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> str</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#fromUtf8-2">fromUtf8</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> str</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#indexOf-7">indexOf</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  int<db:emphasis> from</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#lastIndexOf-7">lastIndexOf</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  int<db:emphasis> from</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#remove-5">remove</db:link></db:emphasis>(const QRegularExpression
                                                  &amp;<db:emphasis> re</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#replace-13">replace</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  const QString &amp;<db:emphasis>
                                                  after</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#section-4">section</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  int<db:emphasis> start</db:emphasis>, int<db:emphasis>
                                                  end</db:emphasis>, SectionFlags<db:emphasis> flags</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#split-4">split</db:link></db:emphasis>(const QRegularExpression
                                                  &amp;<db:emphasis> re</db:emphasis>, SplitBehavior<db:emphasis>
                                                  behavior</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstring.html#toHtmlEscaped">toHtmlEscaped</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qstringlist.html">QStringList</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstringlist.html#filter-3">filter</db:link></db:emphasis>(const QRegularExpression
                                                  &amp;<db:emphasis> re</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstringlist.html#indexOf-4">indexOf</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  int<db:emphasis> from</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstringlist.html#join-2">join</db:link></db:emphasis>(QChar<db:emphasis>
                                                  separator</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstringlist.html#lastIndexOf-4">lastIndexOf</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  int<db:emphasis> from</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qstringlist.html#replaceInStrings-3">replaceInStrings</db:link></db:emphasis>(const
                                                  QRegularExpression &amp;<db:emphasis> re</db:emphasis>,
                                                  const QString &amp;<db:emphasis>
                                                  after</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qlatin1string.html">QLatin1String</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlatin1string.html#operator-not-eq-3">operator!=</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlatin1string.html#operator-lt-3">operator&lt;</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlatin1string.html#operator-lt-eq-3">operator&lt;=</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlatin1string.html#operator-eq-eq-3">operator==</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlatin1string.html#operator-gt-3">operator&gt;</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qlatin1string.html#operator-gt-eq-3">operator&gt;=</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> other</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qset.html">QSet</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qset.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qset.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qsharedpointer.html">QSharedPointer</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsharedpointer.html#reset">reset</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsharedpointer.html#reset-2">reset</db:link></db:emphasis>(T *<db:emphasis>
                                                  t</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsharedpointer.html#reset-3">reset</db:link></db:emphasis>(T *<db:emphasis> t</db:emphasis>,
                                                  Deleter<db:emphasis> deleter</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qsize.html">QSize</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsize.html#scaled-2">scaled</db:link></db:emphasis>(const QSize
                                                  &amp;<db:emphasis> s</db:emphasis>,
                                                  Qt::AspectRatioMode<db:emphasis> mode</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsize.html#scaled">scaled</db:link></db:emphasis>(int<db:emphasis>
                                                  width</db:emphasis>, int<db:emphasis> height</db:emphasis>,
                                                  Qt::AspectRatioMode<db:emphasis> mode</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qsize.html#transposed">transposed</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdesigner/qdesignerformwindowinterface.html">QDesignerFormWindowInterface</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowinterface.html#activateResourceFilePaths">activateResourceFilePaths</db:link></db:emphasis>(const
                                                  QStringList &amp;<db:emphasis> paths</db:emphasis>, int
                                                  *<db:emphasis> errorCount</db:emphasis>, QString *<db:emphasis>
                                                  errorMessages</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowinterface.html#activeResourceFilePaths">activeResourceFilePaths</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowinterface.html#checkContents">checkContents</db:link></db:emphasis>() const =
                                                  0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowinterface.html#formContainer">formContainer</db:link></db:emphasis>() const =
                                                  0</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdbus/qdbuspendingcall.html">QDBusPendingCall</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdbus/qdbuspendingcall.html#swap">swap</db:link></db:emphasis>(QDBusPendingCall
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdbus/qdbusunixfiledescriptor.html">QDBusUnixFileDescriptor</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdbus/qdbusunixfiledescriptor.html#swap">swap</db:link></db:emphasis>(QDBusUnixFileDescriptor
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html">QDesignerFormWindowManagerInterface</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#action">action</db:link></db:emphasis>(Action<db:emphasis>
                                                  action</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#actionGroup">actionGroup</db:link></db:emphasis>(ActionGroup<db:emphasis>
                                                  actionGroup</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#closeAllPreviews">closeAllPreviews</db:link></db:emphasis>() =
                                                  0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#showPluginDialog">showPluginDialog</db:link></db:emphasis>() =
                                                  0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#showPreview">showPreview</db:link></db:emphasis>() = 0</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtdesigner/qdesignerpropertysheetextension.html">QDesignerPropertySheetExtension</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerpropertysheetextension.html#isEnabled">isEnabled</db:link></db:emphasis>(int<db:emphasis>
                                                  index</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qvector.html">QVector</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvector.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvector.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtcore/qvarlengtharray.html">QVarLengthArray</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#back">back</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#back-2">back</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#cbegin">cbegin</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#cend">cend</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#empty">empty</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#front">front</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#front-2">front</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#length">length</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#pop_back">pop_back</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qvarlengtharray.html#push_back">push_back</db:link></db:emphasis>(const T &amp;<db:emphasis>
                                                  t</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html">QCameraExposureControl</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#actualValue">actualValue</db:link></db:emphasis>(ExposureParameter<db:emphasis>
                                                  parameter</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#actualValueChanged">actualValueChanged</db:link></db:emphasis>(int<db:emphasis>
                                                  parameter</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#isParameterSupported">isParameterSupported</db:link></db:emphasis>(ExposureParameter<db:emphasis>
                                                  parameter</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#parameterRangeChanged">parameterRangeChanged</db:link></db:emphasis>(int<db:emphasis>
                                                  parameter</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#requestedValue">requestedValue</db:link></db:emphasis>(ExposureParameter<db:emphasis>
                                                  parameter</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#requestedValueChanged">requestedValueChanged</db:link></db:emphasis>(int<db:emphasis>
                                                  parameter</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#setValue">setValue</db:link></db:emphasis>(ExposureParameter<db:emphasis>
                                                  parameter</db:emphasis>, const QVariant &amp;<db:emphasis>
                                                  value</db:emphasis>) = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcameraexposurecontrol.html#supportedParameterRange">supportedParameterRange</db:link></db:emphasis>(ExposureParameter<db:emphasis>
                                                  parameter</db:emphasis>, bool *<db:emphasis>
                                                  continuous</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html">QCameraFeedbackControl</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html#isEventFeedbackEnabled">isEventFeedbackEnabled</db:link></db:emphasis>(EventType<db:emphasis>
                                                  event</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html#isEventFeedbackLocked">isEventFeedbackLocked</db:link></db:emphasis>(EventType<db:emphasis>
                                                  event</db:emphasis>) const = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html#resetEventFeedback">resetEventFeedback</db:link></db:emphasis>(EventType<db:emphasis>
                                                  event</db:emphasis>) = 0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html#setEventFeedbackEnabled">setEventFeedbackEnabled</db:link></db:emphasis>(EventType<db:emphasis>
                                                  event</db:emphasis>, bool<db:emphasis> enabled</db:emphasis>) =
                                                  0</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtmultimedia/qcamerafeedbackcontrol.html#setEventFeedbackSound">setEventFeedbackSound</db:link></db:emphasis>(EventType<db:emphasis>
                                                  event</db:emphasis>, const QString &amp;<db:emphasis>
                                                  filePath</db:emphasis>) = 0</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtsensors/qrotationreading.html">QRotationReading</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsensors/qrotationreading.html#setFromEuler">setFromEuler</db:link></db:emphasis>(qreal<db:emphasis>
                                                  x</db:emphasis>, qreal<db:emphasis> y</db:emphasis>,
                                                  qreal<db:emphasis> z</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtsensors/qsensor.html">QSensor</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsensors/qsensor.html#isFeatureSupported">isFeatureSupported</db:link></db:emphasis>(Feature<db:emphasis>
                                                  feature</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtsensors/qsensorbackend.html">QSensorBackend</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsensors/qsensorbackend.html#isFeatureSupported">isFeatureSupported</db:link></db:emphasis>(QSensor::Feature<db:emphasis>
                                                  feature</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtsql/qsqldriver.html">QSqlDriver</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsql/qsqldriver.html#notification-2">notification</db:link></db:emphasis>(const QString
                                                  &amp;<db:emphasis> name</db:emphasis>,
                                                  QSqlDriver::NotificationSource<db:emphasis>
                                                  source</db:emphasis>, const QVariant &amp;<db:emphasis>
                                                  payload</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtsql/qsqltablemodel.html">QSqlTableModel</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsql/qsqltablemodel.html#isDirty-2">isDirty</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsql/qsqltablemodel.html#record-2">record</db:link></db:emphasis>(int<db:emphasis>
                                                  row</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsql/qsqltablemodel.html#selectRow">selectRow</db:link></db:emphasis>(int<db:emphasis>
                                                  row</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtuitools/quiloader.html">QUiLoader</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtuitools/quiloader.html#errorString">errorString</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qttestlib/qsignalspy.html">QSignalSpy</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qsignalspy.html#wait">wait</db:link></db:emphasis>(int<db:emphasis>
                                                  timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qttestlib/qtest-qtoucheventsequence.html">QTouchEventSequence</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest-qtoucheventsequence.html#move">move</db:link></db:emphasis>(int<db:emphasis>
                                                  touchId</db:emphasis>, const QPoint &amp;<db:emphasis>
                                                  pt</db:emphasis>, QWindow *<db:emphasis>
                                                  window</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest-qtoucheventsequence.html#press">press</db:link></db:emphasis>(int<db:emphasis>
                                                  touchId</db:emphasis>, const QPoint &amp;<db:emphasis>
                                                  pt</db:emphasis>, QWindow *<db:emphasis>
                                                  window</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest-qtoucheventsequence.html#release">release</db:link></db:emphasis>(int<db:emphasis>
                                                  touchId</db:emphasis>, const QPoint &amp;<db:emphasis>
                                                  pt</db:emphasis>, QWindow *<db:emphasis>
                                                  window</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtwidgets/qcolordialog.html">QColorDialog</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qcolordialog.html#standardColor">standardColor</db:link></db:emphasis>(int<db:emphasis>
                                                  index</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtwidgets/qheaderview.html">QHeaderView</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#sectionResizeMode">sectionResizeMode</db:link></db:emphasis>(int<db:emphasis>
                                                  logicalIndex</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#sectionsClickable">sectionsClickable</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#sectionsMovable">sectionsMovable</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#setSectionResizeMode">setSectionResizeMode</db:link></db:emphasis>(ResizeMode<db:emphasis>
                                                  mode</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#setSectionResizeMode-2">setSectionResizeMode</db:link></db:emphasis>(int<db:emphasis>
                                                  logicalIndex</db:emphasis>, ResizeMode<db:emphasis>
                                                  mode</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#setSectionsClickable">setSectionsClickable</db:link></db:emphasis>(bool<db:emphasis>
                                                  clickable</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qheaderview.html#setSectionsMovable">setSectionsMovable</db:link></db:emphasis>(bool<db:emphasis>
                                                  movable</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtwidgets/qabstractitemdelegate.html">QAbstractItemDelegate</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qabstractitemdelegate.html#destroyEditor">destroyEditor</db:link></db:emphasis>(QWidget *<db:emphasis>
                                                  editor</db:emphasis>, const QModelIndex &amp;<db:emphasis>
                                                  index</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtwidgets/qwidget.html">QWidget</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qwidget.html#backingStore">backingStore</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qwidget.html#grab">grab</db:link></db:emphasis>(const QRect &amp;<db:emphasis>
                                                  rectangle</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qwidget.html#hasHeightForWidth">hasHeightForWidth</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qwidget.html#windowHandle">windowHandle</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtwidgets/qcombobox.html">QComboBox</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtwidgets/qcombobox.html#currentText-prop">currentTextChanged</db:link></db:emphasis>(const
                                                  QString &amp;<db:emphasis> text</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qplatformfontdatabase.html">QPlatformFontDatabase</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qplatformfontdatabase.html#defaultFont">defaultFont</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qplatformfontdatabase.html#fontsAlwaysScalable">fontsAlwaysScalable</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  virtual </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qplatformfontdatabase.html#standardSizes">standardSizes</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qfont.html">QFont</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qfont.html#removeSubstitutions">removeSubstitutions</db:link></db:emphasis>(const
                                                  QString &amp;<db:emphasis>
                                                  familyName</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qfont.html#swap">swap</db:link></db:emphasis>(QFont &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qfontinfo.html">QFontInfo</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qfontinfo.html#swap">swap</db:link></db:emphasis>(QFontInfo &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qfontmetricsf.html">QFontMetricsF</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qfontmetricsf.html#swap">swap</db:link></db:emphasis>(QFontMetricsF
                                                  &amp;<db:emphasis> other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qfontmetrics.html">QFontMetrics</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qfontmetrics.html#swap">swap</db:link></db:emphasis>(QFontMetrics &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qglyphrun.html">QGlyphRun</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#boundingRect">boundingRect</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#flags">flags</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#isEmpty">isEmpty</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#isRightToLeft">isRightToLeft</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#setBoundingRect">setBoundingRect</db:link></db:emphasis>(const QRectF
                                                  &amp;<db:emphasis> boundingRect</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#setFlag">setFlag</db:link></db:emphasis>(GlyphRunFlag<db:emphasis>
                                                  flag</db:emphasis>, bool<db:emphasis>
                                                  enabled</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#setFlags">setFlags</db:link></db:emphasis>(GlyphRunFlags<db:emphasis>
                                                  flags</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#setRightToLeft">setRightToLeft</db:link></db:emphasis>(bool<db:emphasis>
                                                  rightToLeft</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#swap">swap</db:link></db:emphasis>(QGlyphRun &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qrawfont.html">QRawFont</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qrawfont.html#boundingRect">boundingRect</db:link></db:emphasis>(quint32<db:emphasis>
                                                  glyphIndex</db:emphasis>) const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qrawfont.html#swap">swap</db:link></db:emphasis>(QRawFont &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qstatictext.html">QStaticText</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qstatictext.html#swap">swap</db:link></db:emphasis>(QStaticText &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qtextcursor.html">QTextCursor</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextcursor.html#swap">swap</db:link></db:emphasis>(QTextCursor &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qregion.html">QRegion</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qregion.html#isNull">isNull</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qtextcharformat.html">QTextCharFormat</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextcharformat.html#fontLetterSpacingType">fontLetterSpacingType</db:link></db:emphasis>()
                                                  const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextcharformat.html#fontStretch">fontStretch</db:link></db:emphasis>() const</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextcharformat.html#setFontLetterSpacingType">setFontLetterSpacingType</db:link></db:emphasis>(QFont::SpacingType<db:emphasis>
                                                  letterSpacingType</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextcharformat.html#setFontStretch">setFontStretch</db:link></db:emphasis>(int<db:emphasis>
                                                  factor</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qtextformat.html">QTextFormat</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextformat.html#swap">swap</db:link></db:emphasis>(QTextFormat &amp;<db:emphasis>
                                                  other</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>Class <db:code><db:link xlink:href="qtgui/qtextline.html">QTextLine</db:link></db:code>:</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qtextline.html#glyphRuns">glyphRuns</db:link></db:emphasis>(int<db:emphasis>
                                                  from</db:emphasis>, int<db:emphasis> length</db:emphasis>)
                                                  const</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New Functions in Namespaces</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyClick-4">keyClick</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, char<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyClick-3">keyClick</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::Key<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyEvent-4">keyEvent</db:link></db:emphasis>(KeyAction<db:emphasis>
                                                  action</db:emphasis>, QWindow *<db:emphasis>
                                                  window</db:emphasis>, char<db:emphasis> ascii</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyEvent-3">keyEvent</db:link></db:emphasis>(KeyAction<db:emphasis>
                                                  action</db:emphasis>, QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::Key<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyPress-4">keyPress</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, char<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyPress-3">keyPress</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::Key<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyRelease-4">keyRelease</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, char<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#keyRelease-3">keyRelease</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::Key<db:emphasis> key</db:emphasis>,
                                                  Qt::KeyboardModifiers<db:emphasis> modifier</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#mouseClick-2">mouseClick</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::MouseButton<db:emphasis>
                                                  button</db:emphasis>, Qt::KeyboardModifiers<db:emphasis>
                                                  stateKey</db:emphasis>, QPoint<db:emphasis> pos</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#mouseDClick-2">mouseDClick</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::MouseButton<db:emphasis>
                                                  button</db:emphasis>, Qt::KeyboardModifiers<db:emphasis>
                                                  stateKey</db:emphasis>, QPoint<db:emphasis> pos</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#mouseMove-2">mouseMove</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, QPoint<db:emphasis> pos</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#mousePress-2">mousePress</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::MouseButton<db:emphasis>
                                                  button</db:emphasis>, Qt::KeyboardModifiers<db:emphasis>
                                                  stateKey</db:emphasis>, QPoint<db:emphasis> pos</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#mouseRelease-2">mouseRelease</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, Qt::MouseButton<db:emphasis>
                                                  button</db:emphasis>, Qt::KeyboardModifiers<db:emphasis>
                                                  stateKey</db:emphasis>, QPoint<db:emphasis> pos</db:emphasis>,
                                                  int<db:emphasis> delay</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#qWaitForWindowActive">qWaitForWindowActive</db:link></db:emphasis>(QWindow
                                                  *<db:emphasis> window</db:emphasis>, int<db:emphasis>
                                                  timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#qWaitForWindowActive-2">qWaitForWindowActive</db:link></db:emphasis>(QWidget
                                                  *<db:emphasis> widget</db:emphasis>, int<db:emphasis>
                                                  timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#qWaitForWindowExposed">qWaitForWindowExposed</db:link></db:emphasis>(QWindow
                                                  *<db:emphasis> window</db:emphasis>, int<db:emphasis>
                                                  timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#qWaitForWindowExposed-2">qWaitForWindowExposed</db:link></db:emphasis>(QWidget
                                                  *<db:emphasis> widget</db:emphasis>, int<db:emphasis>
                                                  timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qttestlib/qtest.html#touchEvent-2">touchEvent</db:link></db:emphasis>(QWindow *<db:emphasis>
                                                  window</db:emphasis>, QTouchDevice *<db:emphasis>
                                                  device</db:emphasis>, bool<db:emphasis>
                                                  autoCommit</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New Global Functions</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#operator-not-eq-53">operator!=</db:link></db:emphasis>(const QMetaMethod
                                                  &amp;<db:emphasis> m1</db:emphasis>, const QMetaMethod
                                                  &amp;<db:emphasis> m2</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qpointf.html#operator-2b-15">operator+</db:link></db:emphasis>(const QPointF
                                                  &amp;<db:emphasis> point</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qpoint.html#operator-2b-13">operator+</db:link></db:emphasis>(const QPoint
                                                  &amp;<db:emphasis> point</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold">operator&lt;&lt;</db:emphasis>(QDebug<db:emphasis>
                                                  debug</db:emphasis>, const QNetworkProxy &amp;<db:emphasis>
                                                  proxy</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qmetamethod.html#operator-eq-eq-61">operator==</db:link></db:emphasis>(const QMetaMethod
                                                  &amp;<db:emphasis> m1</db:emphasis>, const QMetaMethod
                                                  &amp;<db:emphasis> m2</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-15">qHash</db:link></db:emphasis>(ushort<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-19">qHash</db:link></db:emphasis>(ulong<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-17">qHash</db:link></db:emphasis>(uint<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-13">qHash</db:link></db:emphasis>(uchar<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-14">qHash</db:link></db:emphasis>(signed char<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-16">qHash</db:link></db:emphasis>(short<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-21">qHash</db:link></db:emphasis>(quint64<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-22">qHash</db:link></db:emphasis>(qint64<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-20">qHash</db:link></db:emphasis>(long<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-18">qHash</db:link></db:emphasis>(int<db:emphasis> key</db:emphasis>,
                                                  uint<db:emphasis> seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-31">qHash</db:link></db:emphasis>(const T *<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-33">qHash</db:link></db:emphasis>(const QPair&lt;T1, T2&gt;
                                                  &amp;<db:emphasis> key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-25">qHash</db:link></db:emphasis>(const QChar<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-12">qHash</db:link></db:emphasis>(char<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-28">qHash</db:link></db:emphasis>(const QStringRef
                                                  &amp;<db:emphasis> key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-27">qHash</db:link></db:emphasis>(const QString
                                                  &amp;<db:emphasis> key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-26">qHash</db:link></db:emphasis>(const QByteArray
                                                  &amp;<db:emphasis> key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-29">qHash</db:link></db:emphasis>(const QBitArray
                                                  &amp;<db:emphasis> key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-30">qHash</db:link></db:emphasis>(QLatin1String<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-11">qHash</db:link></db:emphasis>(const QTime &amp;<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-9">qHash</db:link></db:emphasis>(const QDateTime
                                                  &amp;<db:emphasis> key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash-10">qHash</db:link></db:emphasis>(const QDate &amp;<db:emphasis>
                                                  key</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/quuid.html#qHash-8">qHash</db:link></db:emphasis>(const QUuid &amp;<db:emphasis>
                                                  uuid</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qpersistentmodelindex.html#qHash-4">qHash</db:link></db:emphasis>(const
                                                  QPersistentModelIndex &amp;<db:emphasis>
                                                  index</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qhash.html#qHash">qHash</db:link></db:emphasis>(const QUrl &amp;<db:emphasis>
                                                  url</db:emphasis>, uint<db:emphasis>
                                                  seed</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qtglobal.html#qInstallMessageHandler">qInstallMessageHandler</db:link></db:emphasis>(QtMessageHandler<db:emphasis>
                                                  handler</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qpluginloader.html#qRegisterStaticPluginFunction">qRegisterStaticPluginFunction</db:link></db:emphasis>(QStaticPlugin<db:emphasis>
                                                  plugin</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qtglobal.html#qSetMessagePattern">qSetMessagePattern</db:link></db:emphasis>(const
                                                  QString &amp;<db:emphasis> pattern</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New Macros</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qttestlib/qtest.html#QFINDTESTDATA">QFINDTESTDATA</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  filename</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qttestlib/qtest.html#QTEST_GUILESS_MAIN">QTEST_GUILESS_MAIN</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  TestClass</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qttestlib/qtest.html#QTRY_COMPARE">QTRY_COMPARE</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  actual</db:emphasis>, <db:emphasis>
                                                  expected</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qttestlib/qtest.html#QTRY_COMPARE_WITH_TIMEOUT">QTRY_COMPARE_WITH_TIMEOUT</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  actual</db:emphasis>, <db:emphasis> expected</db:emphasis>,
                                                  <db:emphasis> timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qttestlib/qtest.html#QTRY_VERIFY">QTRY_VERIFY</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  condition</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qttestlib/qtest.html#QTRY_VERIFY_WITH_TIMEOUT">QTRY_VERIFY_WITH_TIMEOUT</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  condition</db:emphasis>, <db:emphasis>
                                                  timeout</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_ASSUME">Q_ASSUME</db:link></db:code></db:emphasis>(bool<db:emphasis>
                                                  expr</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qmetatype.html#Q_DECLARE_OPAQUE_POINTER">Q_DECLARE_OPAQUE_POINTER</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  PointerType</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_DECL_FINAL">Q_DECL_FINAL</db:link></db:code></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_DECL_NOEXCEPT">Q_DECL_NOEXCEPT</db:link></db:code></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_DECL_NOEXCEPT_EXPR">Q_DECL_NOEXCEPT_EXPR</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  x</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_DECL_NOTHROW">Q_DECL_NOTHROW</db:link></db:code></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_DECL_OVERRIDE">Q_DECL_OVERRIDE</db:link></db:code></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtplugin.html#Q_PLUGIN_METADATA">Q_PLUGIN_METADATA</db:link></db:code></db:emphasis>(...)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qobject.html#Q_SET_OBJECT_NAME">Q_SET_OBJECT_NAME</db:link></db:code></db:emphasis>(<db:emphasis>
                                                  Object</db:emphasis>)</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#Q_UNREACHABLE">Q_UNREACHABLE</db:link></db:code></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New Enum Types</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#BindFlag-enum">BindFlag</db:link></db:emphasis> { DefaultForPlatform,
                                                  ShareAddress, DontShareAddress, ReuseAddressHint
                                                  }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qabstractsocket.html#PauseMode-enum">PauseMode</db:link></db:emphasis> { PauseNever,
                                                  PauseOnSslErrors }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowinterface.html#ResourceFileSaveMode-enum">ResourceFileSaveMode</db:link></db:emphasis> {
                                                  SaveAllResourceFiles, SaveOnlyUsedResourceFiles,
                                                  DontSaveResourceFiles }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#Action-enum">Action</db:link></db:emphasis> { CutAction, CopyAction,
                                                  PasteAction, DeleteAction, ...,
                                                  FormWindowSettingsDialogAction }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtdesigner/qdesignerformwindowmanagerinterface.html#ActionGroup-enum">ActionGroup</db:link></db:emphasis> {
                                                  StyledPreviewActionGroup }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtgui/qglyphrun.html#GlyphRunFlag-enum">GlyphRunFlag</db:link></db:emphasis> { Overline,
                                                  Underline, StrikeOut, RightToLeft, SplitLigature
                                                  }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qlocalserver.html#SocketOption-enum">SocketOption</db:link></db:emphasis> { NoOptions,
                                                  UserAccessOption, GroupAccessOption,
                                                  OtherAccessOption, WorldAccessOption }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qnetworksession.html#UsagePolicy-enum">UsagePolicy</db:link></db:emphasis> { NoPolicy,
                                                  NoBackgroundTrafficPolicy }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtsensors/qsensor.html#Feature-enum">Feature</db:link></db:emphasis> { Buffering, AlwaysOn,
                                                  GeoValues, FieldOfView, ..., Reserved }</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  enum </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qurl.html#ComponentFormattingOption-enum">ComponentFormattingOption</db:link></db:emphasis> {
                                                  PrettyDecoded, EncodeSpaces, EncodeUnicode,
                                                  EncodeDelimiters, ..., FullyDecoded }</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New Typedefs</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  typedef </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtcore/qflags.html#Int-typedef">Int</db:link></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  typedef </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtgui/qimage.html#QImageCleanupFunction-typedef">QImageCleanupFunction</db:link></db:code></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                                                  typedef </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:code><db:link xlink:href="qtcore/qtglobal.html#QtMessageHandler-typedef">QtMessageHandler</db:link></db:code></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New Properties</db:title>
         <db:itemizedlist>
            <db:listitem>
               <db:para>
                  <db:emphasis role="bold"><db:link xlink:href="qtgui/qguiapplication.html#applicationDisplayName-prop">applicationDisplayName</db:link></db:emphasis> : const </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:emphasis role="bold"><db:link xlink:href="qtnetwork/qlocalserver.html#socketOptions-prop">socketOptions</db:link></db:emphasis> : const </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:emphasis role="bold"><db:link xlink:href="qtcore/qtimer.html#remainingTime-prop">remainingTime</db:link></db:emphasis> : const </db:para>
            </db:listitem>
         </db:itemizedlist>
      </db:section>
      <db:section>
         <db:title> New QML Types</db:title>
         <db:variablelist>
            <db:varlistentry>
               <db:term>A</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-attenuationmodelinverse.html">AttenuationModelInverse</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-attenuationmodellinear.html">AttenuationModelLinear</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-audiocategory.html">AudioCategory</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-audioengine.html">AudioEngine</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-audiolistener.html">AudioListener</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-audiosample.html">AudioSample</db:link>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>C</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-canvas.html">Canvas</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-canvasgradient.html">CanvasGradient</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-context2d.html">Context2D</db:link>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>G</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-gridmesh.html">GridMesh</db:link>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>P</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-parentanimation.html">ParentAnimation</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-pathanimation.html">PathAnimation</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-playvariation.html">PlayVariation</db:link>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
            <db:varlistentry>
               <db:term>S</db:term>
               <db:listitem>
                  <db:itemizedlist>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtquick/qml-qtquick-shadereffectsource.html">ShaderEffectSource</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-sound.html">Sound</db:link>
                        </db:para>
                     </db:listitem>
                     <db:listitem>
                        <db:para>
                           <db:link xlink:href="qtmultimedia/qml-qtaudioengine-soundinstance.html">SoundInstance</db:link>
                        </db:para>
                     </db:listitem>
                  </db:itemizedlist>
               </db:listitem>
            </db:varlistentry>
         </db:variablelist>
      </db:section>
      <db:section>
         <db:title> New QML Properties</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtquick/qml-qtquick-grid.html#columnSpacing-prop">columnSpacing</db:link></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtqml/qml-qtqml-qt.html#inputMethod-prop">inputMethod</db:link></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtquick/qml-qtquick-grid.html#rowSpacing-prop">rowSpacing</db:link></db:emphasis>
                     </db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
      <db:section>
         <db:title> New QML Methods</db:title>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:td>
                     <db:para/>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:emphasis role="bold"><db:link xlink:href="qtqml/qml-qtqml-qt.html#binding-method">binding</db:link></db:emphasis>()</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
      </db:section>
   </db:section>
   <db:section xml:id="additions-to-other-qt-5-releases">
      <db:title>Additions to Other Qt
                                    5 Releases</db:title>
      <db:itemizedlist>
         <db:listitem>
            <db:para>
               <db:link xlink:href="whatsnew54.html">What's New in Qt
                                            5.4</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="whatsnew53.html">What's New in Qt
                                            5.3</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="whatsnew52.html">What's New in Qt
                                            5.2</db:link>
            </db:para>
         </db:listitem>
         <db:listitem>
            <db:para>
               <db:link xlink:href="whatsnew51.html">What's New in Qt
                                            5.1</db:link>
            </db:para>
         </db:listitem>
      </db:itemizedlist>
   </db:section>
</db:article>
