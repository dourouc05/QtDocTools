<html:html xmlns:html="http://www.w3.org/1999/xhtml" lang="en">
    <html:head>
        <html:meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <!-- qdoc-manual-markupcmds.qdoc -->
        <html:title>Text Markup | QDoc Manual 5.4</html:title>
        <html:link href="style/offline.css" rel="stylesheet" type="text/css" />
    </html:head>
    <html:body>
        <html:div class="header" id="qtdocheader">
            <html:div class="main">
                <html:div class="main-rounded">
                    <html:div class="navigationbar">
                        <html:ul>
                            <html:li><html:a href="qtdoc/index.html">Qt 5.4</html:a></html:li>
                            <html:li><html:a href="qdoc-index.html">QDoc Manual</html:a></html:li>
                            <html:li>Text Markup</html:li>
                            <html:li id="buildversion">Qt 5.4.2 Reference Documentation</html:li>
                        </html:ul>
                    </html:div>
                </html:div>
                <html:div class="content">
                    <html:div class="line">
                        <html:div class="content mainContent">
                            <html:link href="03-qdoc-commands-markup.html" rel="prev" />
                            <html:link href="05-qdoc-commands-documentstructure.html" rel="next" />
                            <html:p class="naviNextPrevious headerNavi">
                                <html:a class="prevPage" href="03-qdoc-commands-markup.html">Markup
                                    Commands</html:a>
                                <html:a class="nextPage"
                                    href="05-qdoc-commands-documentstructure.html">Document
                                    Structure</html:a>
                            </html:p><html:p> </html:p><html:div class="sidebar">
                                <html:div class="toc">
                                    <html:h3><html:a name="toc">Contents</html:a></html:h3>
                                    <html:ul>
                                        <html:li class="level1"><html:a href="#a-parameter-marker"
                                                >\a (parameter marker)</html:a></html:li>
                                        <html:li class="level1"><html:a href="#c-code-font">\c (code
                                                font)</html:a></html:li>
                                        <html:li class="level1"><html:a href="#div"
                                            >\div</html:a></html:li>
                                        <html:li class="level1"><html:a href="#span"
                                            >\span</html:a></html:li>
                                        <html:li class="level1"><html:a href="#tt-teletype-font">\tt
                                                (teletype font)</html:a></html:li>
                                        <html:li class="level1"><html:a href="#b"
                                            >\b</html:a></html:li>
                                        <html:li class="level1"><html:a
                                                href="#e-emphasis-italics-new-5-3-2012">\e
                                                (emphasis, italics) <html:span class="newStuff">(new
                                                  5/3/2012)</html:span></html:a></html:li>
                                        <html:li class="level1"><html:a href="#sub"
                                            >\sub</html:a></html:li>
                                        <html:li class="level1"><html:a href="#sup"
                                            >\sup</html:a></html:li>
                                        <html:li class="level1"><html:a href="#uicontrol"
                                                >\uicontrol</html:a></html:li>
                                        <html:li class="level1"><html:a href="#underline"
                                                >\underline</html:a></html:li>
                                        <html:li class="level1"><html:a href="#double-backslash">\\
                                                (double backslash)</html:a></html:li>
                                    </html:ul>
                                </html:div>
                                <html:div class="sidebar-content" id="sidebar-content"
                                ></html:div></html:div>
                            <html:h1 class="title">Text Markup</html:h1>
                            <html:span class="subtitle"></html:span>
                            <!-- $$$04-qdoc-commands-textmarkup.html-description -->
                            <html:div class="descr">
                                <html:a name="details"></html:a>
                                <html:p>The text formatting commands indicate how text is to be
                                    rendered.</html:p>
                                <html:a name="a-command"></html:a><html:a name="a-parameter-marker"></html:a>
                                <html:h2 id="a-parameter-marker">\a (parameter marker)</html:h2>
                                <html:p>The \a command tells QDoc the next word is a formal
                                    parameter name.</html:p>
                                <html:p>A warning is emitted when a formal parameter is not
                                    documented or is misspelled, so when you document a function you
                                    should mention each formal parameter by name in the function
                                    description, preceded by the \a command. The parameter name is
                                    then rendered in italics.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> Constructs a line edit
                                    containing the text \a contents<html:span class="operator"
                                        >.</html:span> The \a parent parameter is sent to the
                                        <html:span class="type"><html:a
                                            href="qtwidgets/qwidget.html"
                                        >QWidget</html:a></html:span> constructor<html:span
                                        class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span>
                                    <html:span class="type"><html:a href="qtwidgets/qlineedit.html"
                                            >QLineEdit</html:a></html:span><html:span
                                        class="operator">::</html:span><html:span class="type"
                                            ><html:a href="qtwidgets/qlineedit.html"
                                            >QLineEdit</html:a></html:span>(<html:span
                                        class="keyword">const</html:span>
                                    <html:span class="type"><html:a href="qtcore/qstring.html"
                                            >QString</html:a></html:span>
                                    <html:span class="operator">&amp;</html:span>contents<html:span
                                        class="operator">,</html:span>
                                    <html:span class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span>
                                    <html:span class="operator">*</html:span>parent) :<html:span
                                        class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span>(parent) { <html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span><html:span class="operator">.</html:span>
                                    }</html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p><html:b><html:a
                                                href="qtwidgets/qlineedit.html"
                                                >QLineEdit::QLineEdit</html:a> ( const <html:a
                                                href="qtcore/qstring.html">QString</html:a> &amp;
                                            contents, <html:a href="qtwidgets/qwidget.html"
                                                >QWidget</html:a> *parent )</html:b></html:p>
                                    <html:p>Constructs a line edit containing the text
                                            <html:i>contents</html:i>. The <html:i>parent</html:i>
                                        parameter is sent to the <html:a
                                            href="qtwidgets/qwidget.html">QWidget</html:a>
                                        constructor.</html:p>
                                </html:blockquote>
                                <html:p>The formal parameter name may be enclosed between curly
                                    brackets, but that isn't required.</html:p>
                                <html:a name="c-command"></html:a><html:a name="c-code-font"></html:a>
                                <html:h2 id="c-code-font">\c (code font)</html:h2>
                                <html:p>The \c command is used for rendering variable names,
                                    user-defined class names, and C++ keywords (for example,
                                        <html:code>int</html:code> and <html:code>for</html:code>)
                                    in the code font.</html:p>
                                <html:p>The command renders its argument using a monospace font. For
                                    example:</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> The \c AnalogClock <html:span
                                        class="keyword">class</html:span> provides a clock widget
                                    with hour and minute hands that is automatically updated every
                                    few seconds<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>The <html:code>AnalogClock</html:code>
                                        class provides a clock widget with hour and minute hands,
                                        which are automatically updated every few seconds.</html:p>
                                </html:blockquote>
                                <html:p>If the text to be rendered in the code font contains spaces,
                                    enclose the entire text in curly brackets.</html:p>
                                <html:pre class="cpp">\c {<html:span class="type"><html:a
                                            href="qtwidgets/qlineedit.html"
                                        >QLineEdit</html:a></html:span><html:span class="operator"
                                        >::</html:span><html:span class="type"><html:a
                                            href="qtwidgets/qlineedit.html"
                                        >QLineEdit</html:a></html:span>(<html:span class="keyword"
                                        >const</html:span>
                                    <html:span class="type"><html:a href="qtcore/qstring.html"
                                            >QString</html:a></html:span>
                                    <html:span class="operator">&amp;</html:span>contents<html:span
                                        class="operator">,</html:span>
                                    <html:span class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span>
                                    <html:span class="operator">*</html:span>parent) :<html:span
                                        class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span>(parent)}</html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p><html:code>QLineEdit::QLineEdit(const
                                            QString &amp;contents, QWidget *parent)
                                            :QWidget(parent)</html:code></html:p>
                                </html:blockquote>
                                <html:p>The \c command accepts the special character
                                        <html:code>\</html:code> within its argument, which renders
                                    it as a normal character. So if you want to use nested commands,
                                    you must use the <html:a
                                        href="04-qdoc-commands-textmarkup.html#tt-command">teletype
                                        (\tt)</html:a> command instead.</html:p>
                                <html:p>See also <html:a
                                        href="04-qdoc-commands-textmarkup.html#tt-command"
                                        >\tt</html:a> and <html:a
                                        href="06-qdoc-commands-includecodeinline.html#code-command"
                                        >\code</html:a>.</html:p>
                                <html:a name="div-command"></html:a><html:a name="div"></html:a>
                                <html:h2 id="div">\div</html:h2>
                                <html:p>The \div and \enddiv commands delimit a large or small block
                                    of text (which may include other QDoc commands) to which special
                                    formatting attributes should be applied.</html:p>
                                <html:p>An argument must be provided in curly braces, as in the qdoc
                                    comment shown below. The argument is not interpreted but is used
                                    as attribute(s) of the tag that is output by qdoc.</html:p>
                                <html:p>For example, we might want to render an inline image so that
                                    it floats to the right of the current block of text:</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \div {<html:span
                                        class="keyword">class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"float-right"</html:span>} \inlineimage qml<html:span
                                        class="operator">-</html:span>column<html:span
                                        class="operator">.</html:span>png \enddiv <html:span
                                        class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>If qdoc is generating HTML, it will translate these commands
                                    to:</html:p>
                                <html:pre class="cpp"><html:span class="operator"
                                    >&lt;</html:span>div <html:span class="keyword"
                                        >class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"float-right"</html:span><html:span class="operator"
                                        >&gt;</html:span><html:span class="operator"
                                        >&lt;</html:span>p<html:span class="operator"
                                        >&gt;</html:span><html:span class="operator"
                                        >&lt;</html:span>img src<html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"images/qml-column.png"</html:span>
                                    <html:span class="operator">/</html:span><html:span
                                        class="operator">&gt;</html:span><html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>p<html:span class="operator"
                                        >&gt;</html:span><html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>div<html:span class="operator"
                                        >&gt;</html:span></html:pre>
                                <html:p>For HTML, the attribute value <html:i>float-right</html:i>
                                    then will refer to a clause in the style.css file, which in this
                                    case could be:</html:p>
                                <html:pre class="cpp"> div<html:span class="operator"
                                        >.</html:span><html:span class="type"
                                        >float</html:span><html:span class="operator"
                                    >-</html:span>right { <html:span class="type">float</html:span>:
                                    right; margin<html:span class="operator">-</html:span>left:
                                        <html:span class="number">2em</html:span> }</html:pre>
                                <html:p>If qdoc is generating DITA XML, it will translate the
                                    commands to:</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">&lt;</html:span>sectiondiv
                                        outputclass<html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"float-right"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>fig<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>image href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"images/qml-column.png"</html:span> placement<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"inline"</html:span><html:span class="operator"
                                        >/</html:span><html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>fig<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>p<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>sectiondiv<html:span
                                        class="operator">&gt;</html:span></html:pre>
                                <html:p>Your DITA XML publishing program must then recognize the
                                        <html:i>outputclass</html:i> attribute value.</html:p>
                                <html:p><html:b>Note: </html:b>Note that the <html:b>\div</html:b>
                                    command can be nested.</html:p><html:p>Below you can find an
                                    example taken from the index.qdoc file used to generate
                                    index.html for Qt 4.7:</html:p>
                                <html:pre class="cpp"> \div {<html:span class="keyword"
                                        >class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string">"indexbox
                                        guide"</html:span>} \div {<html:span class="keyword"
                                        >class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"heading"</html:span>} <html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span> Developer
                                    Guide \enddiv \div {<html:span class="keyword"
                                        >class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string">"indexboxcont
                                        indexboxbar"</html:span>} \div {<html:span class="keyword"
                                        >class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string">"section
                                        indexIcon"</html:span>} \emptyspan \enddiv \div {<html:span
                                        class="keyword">class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"section"</html:span>} <html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span> is a
                                        cross<html:span class="operator">-</html:span>platform
                                    application and UI framework<html:span class="operator"
                                        >.</html:span> Using <html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span><html:span
                                        class="operator">,</html:span> you can write web<html:span
                                        class="operator">-</html:span>enabled applications once and
                                    deploy them across desktop<html:span class="operator"
                                        >,</html:span> mobile and embedded operating systems without
                                    rewriting the source code<html:span class="operator"
                                        >.</html:span> \enddiv \div {<html:span class="keyword"
                                        >class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string">"section
                                        sectionlist"</html:span>} \list \li \l{Getting Started} \li
                                    \l{Installation} {Installation} \li \l{how<html:span
                                        class="operator">-</html:span>to<html:span class="operator"
                                        >-</html:span>learn<html:span class="operator"
                                        >-</html:span>qt<html:span class="operator"
                                    >.</html:span>html} {How to learn <html:span class="type"
                                            ><html:a href="qtcore/qt.html">Qt</html:a></html:span>}
                                    \li \l{tutorials<html:span class="operator">.</html:span>html}
                                    {Tutorials} \li \l{<html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span> Examples}
                                    {Examples} \li \l{qt4<html:span class="operator"
                                        >-</html:span><html:span class="number"
                                        >7</html:span><html:span class="operator"
                                        >-</html:span>intro<html:span class="operator"
                                    >.</html:span>html} {What<html:span class="char">'s new in Qt
                                        4.7} \endlist \enddiv \enddiv \enddiv
                                    </html:span></html:pre>
                                <html:p>When all the class attribute values are defined as they are
                                    in the style.css file that is used for rendering the Qt
                                    documentation, the above example is rendered as:</html:p>
                                <html:div class="indexbox guide"><html:div class="heading"
                                            ><html:p>Qt Developer Guide</html:p>
                                    </html:div><html:div class="indexboxcont indexboxbar"><html:div
                                            class="section indexIcon"
                                            ><html:span></html:span></html:div><html:div
                                            class="section"><html:p>Qt is a cross-platform
                                                application and UI framework. Using Qt, you can
                                                write web-enabled applications once and deploy them
                                                across desktop, mobile and embedded operating
                                                systems without rewriting the source code.</html:p>
                                        </html:div><html:div class="section sectionlist"><html:ul>
                                                <html:li>Getting Started</html:li>
                                                <html:li>Installation</html:li>
                                                <html:li>How to learn Qt</html:li>
                                                <html:li>Tutorials</html:li>
                                                <html:li>Examples</html:li>
                                                <html:li>What's new in Qt 4.7</html:li>
                                            </html:ul>
                                        </html:div></html:div></html:div><html:p>When generating
                                    DITA XML, qdoc outputs the nested <html:i>div</html:i> commands
                                    as:</html:p>
                                <html:pre class="cpp"><html:span class="operator"
                                    >&lt;</html:span>sectiondiv outputclass<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"indexbox guide"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>sectiondiv
                                        outputclass<html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"heading"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span><html:span class="type"
                                            ><html:a href="qtcore/qt.html">Qt</html:a></html:span>
                                    Developer Guide<html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>p<html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>sectiondiv<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>sectiondiv
                                        outputclass<html:span class="operator"
                                        >=</html:span><html:span class="string">"indexboxcont
                                        indexboxbar"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>sectiondiv
                                        outputclass<html:span class="operator"
                                        >=</html:span><html:span class="string">"section
                                        indexIcon"</html:span><html:span class="operator"
                                        >/</html:span><html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>sectiondiv
                                        outputclass<html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"section"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span><html:span class="type"
                                            ><html:a href="qtcore/qt.html">Qt</html:a></html:span>
                                    is a cross<html:span class="operator">-</html:span>platform
                                    application and UI framework<html:span class="operator"
                                        >.</html:span> Using <html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span><html:span
                                        class="operator">,</html:span> you can write web<html:span
                                        class="operator">-</html:span>enabled applications once and
                                    deploy them across desktop<html:span class="operator"
                                        >,</html:span> mobile and embedded operating systems without
                                    rewriting the source code<html:span class="operator"
                                        >.</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>p<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>sectiondiv<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>sectiondiv
                                        outputclass<html:span class="operator"
                                        >=</html:span><html:span class="string">"section
                                        sectionlist"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>ul<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>li<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>xref href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"gettingstarted.xml#id-606ee7a8-219b-47b7-8f94-91bc8c76e54c"</html:span><html:span
                                        class="operator">&gt;</html:span>Getting started<html:span
                                        class="operator">&lt;</html:span><html:span class="operator"
                                        >/</html:span>xref<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>li<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>li<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>xref href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"installation.xml#id-075c20e2-aa1e-4f88-a316-a46517e50443"</html:span><html:span
                                        class="operator">&gt;</html:span>Installation<html:span
                                        class="operator">&lt;</html:span><html:span class="operator"
                                        >/</html:span>xref<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>li<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>li<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>xref href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"how-to-learn-qt.xml#id-49f509b5-52f9-4cd9-9921-74217b9a5182"</html:span><html:span
                                        class="operator">&gt;</html:span>How to learn <html:span
                                        class="type"><html:a href="qtcore/qt.html"
                                        >Qt</html:a></html:span><html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>xref<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>li<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>li<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>xref href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"tutorials.xml#id-a737f955-a904-455f-b4aa-0dc69ed5a64f"</html:span><html:span
                                        class="operator">&gt;</html:span>Tutorials<html:span
                                        class="operator">&lt;</html:span><html:span class="operator"
                                        >/</html:span>xref<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>li<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>li<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>xref href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"all-examples.xml#id-98d95159-d65b-4706-b08f-13d80080448d"</html:span><html:span
                                        class="operator">&gt;</html:span>Examples<html:span
                                        class="operator">&lt;</html:span><html:span class="operator"
                                        >/</html:span>xref<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>li<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>li<html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>xref href<html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"qt4-7-intro.xml#id-519ae0e3-4242-4c2a-b2be-e05d1e95f177"</html:span><html:span
                                        class="operator">&gt;</html:span>What<html:span class="char"
                                        >'s new in Qt 4.7&lt;/xref&gt; &lt;/li&gt; &lt;/ul&gt;
                                        &lt;/sectiondiv&gt; &lt;/sectiondiv&gt; &lt;/sectiondiv&gt;
                                    </html:span></html:pre>
                                <html:p>Your DITA XML publishing program must recognize the values
                                    of the <html:i>outputclass</html:i> attribute.</html:p>
                                <html:p>See also <html:a
                                        href="04-qdoc-commands-textmarkup.html#span-command"
                                        >\span</html:a>.</html:p>
                                <html:a name="span-command"></html:a><html:a name="span"></html:a>
                                <html:h2 id="span">\span</html:h2>
                                <html:p>The \span command applies special formatting to a small
                                    block of text.</html:p>
                                <html:p>Two arguments must be provided, each argument in curly
                                    braces, as shown in the QDoc comment below. The first argument
                                    is not interpreted, but specifies the formatting attribute(s) of
                                    the tag output by QDoc. The second argument is the text to be
                                    rendered with the special formatting attributes.</html:p>
                                <html:p>For example, we might want to render the first word of each
                                    element in a numeric list in blue.</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> Global variables with complex
                                    types: \list <html:span class="number">1</html:span> \li \span
                                        {<html:span class="keyword">class</html:span><html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"variableName"</html:span>} {mutableComplex1} in
                                        globals<html:span class="operator">.</html:span>cpp at line
                                        <html:span class="number">14</html:span> \li \span
                                        {<html:span class="keyword">class</html:span><html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"variableName"</html:span>} {mutableComplex2} in
                                        globals<html:span class="operator">.</html:span>cpp at line
                                        <html:span class="number">15</html:span> \li \span
                                        {<html:span class="keyword">class</html:span><html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"variableName"</html:span>} {constComplex1} in
                                        globals<html:span class="operator">.</html:span>cpp at line
                                        <html:span class="number">16</html:span> \li \span
                                        {<html:span class="keyword">class</html:span><html:span
                                        class="operator">=</html:span><html:span class="string"
                                        >"variableName"</html:span>} {constComplex2} in
                                        globals<html:span class="operator">.</html:span>cpp at line
                                        <html:span class="number">17</html:span> \endlist <html:span
                                        class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>Class <html:i>variableName</html:i> refers to a clause in
                                    your style.css.</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">.</html:span>variableName {
                                        font<html:span class="operator">-</html:span>family:
                                    courier; color: blue }</html:pre>
                                <html:p>Using the <html:i>variableName</html:i> clause shown above,
                                    the example is rendered as:</html:p>
                                <html:p>Global variables with complex types:</html:p>
                                <html:ol class="1">
                                    <html:li><html:span class="variableName"
                                            >mutableComplex1</html:span> in globals.cpp at line
                                        14</html:li>
                                    <html:li><html:span class="variableName"
                                            >mutableComplex2</html:span> in globals.cpp at line
                                        15</html:li>
                                    <html:li><html:span class="variableName"
                                            >constComplex1</html:span> in globals.cpp at line
                                        16</html:li>
                                    <html:li><html:span class="variableName"
                                            >constComplex2</html:span> in globals.cpp at line
                                        17</html:li>
                                </html:ol>
                                <html:p><html:b>Note: </html:b>The <html:b>span</html:b> command
                                    does not cause a new paragraph to be
                                    started.</html:p><html:p>See also <html:a
                                        href="04-qdoc-commands-textmarkup.html#div-command"
                                        >\div</html:a>.</html:p>
                                <html:a name="tt-command"></html:a><html:a name="tt-teletype-font"></html:a>
                                <html:h2 id="tt-teletype-font">\tt (teletype font)</html:h2>
                                <html:p>The \tt command renders its argument in a monospace font.
                                    This command behaves just like the <html:a
                                        href="04-qdoc-commands-textmarkup.html#c-command"
                                        >\c</html:a> command, except that \tt allows you to nest
                                    QDoc commands within the argument (e.g. <html:a
                                        href="04-qdoc-commands-textmarkup.html#e-command"
                                        >\e</html:a>, <html:a
                                        href="04-qdoc-commands-textmarkup.html#b-command"
                                        >\b</html:a> and <html:a
                                        href="04-qdoc-commands-textmarkup.html#underline-command"
                                        >\underline</html:a>).</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> After having populated the
                                    main container with child widgets<html:span class="operator"
                                        >,</html:span> \c setupUi() scans the main
                                        container<html:span class="char">'s list of slots for names
                                        with the form \tt{on_\e{objectName}_\e{signalName}().} * /
                                    </html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>After having populated the main container
                                        with child widgets, <html:code>setupUi()</html:code> scans
                                        the main container's list of slots for names with the form
                                                <html:code>on_<html:i>objectName</html:i>_<html:i>signalName</html:i>().</html:code></html:p>
                                </html:blockquote>
                                <html:p>If the text to be rendered in the code font contains spaces,
                                    enclose the entire text in curly brackets.</html:p>
                                <html:pre class="cpp">\tt {<html:span class="type"><html:a
                                            href="qtwidgets/qlineedit.html"
                                        >QLineEdit</html:a></html:span><html:span class="operator"
                                        >::</html:span><html:span class="type"><html:a
                                            href="qtwidgets/qlineedit.html"
                                        >QLineEdit</html:a></html:span>(<html:span class="keyword"
                                        >const</html:span>
                                    <html:span class="type"><html:a href="qtcore/qstring.html"
                                            >QString</html:a></html:span>
                                    <html:span class="operator">&amp;</html:span>contents<html:span
                                        class="operator">,</html:span>
                                    <html:span class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span>
                                    <html:span class="operator">*</html:span>parent) :<html:span
                                        class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span>(parent)}</html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p><html:code><html:a
                                                href="qtwidgets/qlineedit.html"
                                                >QLineEdit::QLineEdit</html:a>(const <html:a
                                                href="qtcore/qstring.html">QString</html:a>
                                            &amp;contents, <html:a href="qtwidgets/qwidget.html"
                                                >QWidget</html:a> *parent) :<html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a>(parent)</html:code></html:p>
                                </html:blockquote>
                                <html:p>See also <html:a
                                        href="04-qdoc-commands-textmarkup.html#c-command"
                                        >\c</html:a>.</html:p>
                                <html:a name="b-command"></html:a><html:a name="b"></html:a>
                                <html:h2 id="b">\b</html:h2>
                                <html:p>The \b command renders its argument in bold font. This
                                    command used to be called \bold.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> This is regular text; \b
                                        {<html:span class="keyword">this</html:span> text is
                                    rendered <html:span class="keyword">using</html:span> the \\b
                                        command}<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>This is regular text; <html:b>this text is
                                            rendered using the \b command</html:b>.</html:p>
                                </html:blockquote>
                                <html:a name="e-command"></html:a><html:a
                                    name="e-emphasis-italics-new-5-3-2012"></html:a>
                                <html:h2 id="e-emphasis-italics-new-5-3-2012">\e (emphasis, italics)
                                        <html:span class="newStuff">(new
                                    5/3/2012)</html:span></html:h2>
                                <html:p>The \e command renders its argument in a special font,
                                    normally italics. This command used to be called \i, which is
                                    now deprecated. Use <html:i>for</html:i> italics.</html:p>
                                <html:p>If the argument contains spaces or other punctuation,
                                    enclose the argument in curly brackets.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> Here<html:span
                                        class="operator">,</html:span> we render \e {a few words} in
                                        italics<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>Here, we render <html:i>a few
                                            words</html:i> in italics.</html:p>
                                </html:blockquote>
                                <html:p>If you want to use other QDoc commands within an argument
                                    that contains spaces, you always need to enclose the argument in
                                    braces. But QDoc is smart enough to count parentheses [3], so
                                    you don't need braces in cases like this:</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> An argument can sometimes
                                    contain whitespaces<html:span class="operator">,</html:span>
                                    <html:span class="keyword">for</html:span> example: \e
                                        <html:span class="type"><html:a
                                            href="qtwidgets/qpushbutton.html"
                                        >QPushButton</html:a></html:span>(tr(<html:span
                                        class="string">"A Brand New Button"</html:span>)) <html:span
                                        class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>An argument can sometimes contain
                                        whitespaces, for example: <html:i>QPushButton(tr("A Brand
                                            New Button"))</html:i></html:p>
                                </html:blockquote>
                                <html:p>Finally, trailing punctuation is not included in an argument
                                    [4], nor is "'s" [5]</html:p>
                                <html:table align="center" border="0" cellpadding="2"
                                    cellspacing="1">
                                    <html:tbody>
                                        <html:tr bgcolor="#a2c511" valign="top">
                                            <html:th></html:th>
                                            <html:th>QDoc Syntax</html:th>
                                            <html:th>Generated Documentation</html:th>
                                        </html:tr>

                                        <html:tr bgcolor="#d0d0d0" valign="top">
                                            <html:td>1</html:td>
                                            <html:td>A variation of a command button is a \e menu
                                                button.</html:td>
                                            <html:td>A variation of a command button is a
                                                  <html:i>menu</html:i> button.</html:td>
                                        </html:tr>

                                        <html:tr bgcolor="#c0c0c0" valign="top">
                                            <html:td>2</html:td>
                                            <html:td>The QPushButton widget provides a \e {command
                                                button}.</html:td>
                                            <html:td>The QPushButton widget provides a
                                                  <html:i>command button</html:i>.</html:td>
                                        </html:tr>

                                        <html:tr bgcolor="#d0d0d0" valign="top">
                                            <html:td>3</html:td>
                                            <html:td>Another class of buttons are option buttons \e
                                                (see QRadioButton).</html:td>
                                            <html:td>Another class of buttons are option buttons
                                                  <html:i> (see QRadioButton)</html:i>.</html:td>
                                        </html:tr>

                                        <html:tr bgcolor="#c0c0c0" valign="top">
                                            <html:td>4</html:td>
                                            <html:td>A push button emits the signal \e
                                                clicked().</html:td>
                                            <html:td>A push button emits the signal
                                                  <html:i>clicked</html:i>().</html:td>
                                        </html:tr>

                                        <html:tr bgcolor="#d0d0d0" valign="top">
                                            <html:td>5</html:td>
                                            <html:td>The \e QPushButton's checked property is false
                                                by default.</html:td>
                                            <html:td>The <html:i>QPushButton</html:i>'s checked
                                                property is false by default.</html:td>
                                        </html:tr>

                                    </html:tbody>
                                </html:table>
                                <html:a name="sub-command"></html:a><html:a name="sub"></html:a>
                                <html:h2 id="sub">\sub</html:h2>
                                <html:p>The \sub command renders its argument lower than the
                                    baseline of the regular text, using a smaller font.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> Definition (Range): Consider
                                    the sequence {x\sub n}\sub {n <html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="number">1</html:span>} <html:span
                                        class="operator">.</html:span> The set {x\sub <html:span
                                        class="number">2</html:span><html:span class="operator"
                                        >,</html:span> x\sub <html:span class="number"
                                        >3</html:span><html:span class="operator">,</html:span>
                                    x\sub <html:span class="number">4</html:span><html:span
                                        class="operator">,</html:span>
                                    <html:span class="operator">.</html:span><html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span>} <html:span class="operator">=</html:span>
                                    {x\sub n ; n <html:span class="operator">=</html:span>
                                    <html:span class="number">2</html:span><html:span
                                        class="operator">,</html:span>
                                    <html:span class="number">3</html:span><html:span
                                        class="operator">,</html:span>
                                    <html:span class="number">4</html:span><html:span
                                        class="operator">,</html:span>
                                    <html:span class="operator">.</html:span><html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span>} is called the range of the
                                        sequence<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>Definition (Range): Consider the sequence
                                            {x<html:sub>n</html:sub>}<html:sub>n &gt; 1</html:sub> .
                                        The set</html:p>
                                    <html:p>{x<html:sub>2</html:sub>, x<html:sub>3</html:sub>,
                                            x<html:sub>4</html:sub>, ...} = {x<html:sub>n</html:sub>
                                        ; n = 2, 3, 4, ...}</html:p>
                                    <html:p>is called the range of the sequence.</html:p>
                                </html:blockquote>
                                <html:p>If the argument contains spaces or other punctuation,
                                    enclose the argument in curly brackets.</html:p>
                                <html:a name="sup-command"></html:a><html:a name="sup"></html:a>
                                <html:h2 id="sup">\sup</html:h2>
                                <html:p>The \sup command renders its argument higher than the
                                    baseline of the regular text, using a smaller font.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> The series <html:span
                                        class="number">1</html:span>
                                    <html:span class="operator">+</html:span> a <html:span
                                        class="operator">+</html:span> a\sup <html:span
                                        class="number">2</html:span>
                                    <html:span class="operator">+</html:span> a\sup <html:span
                                        class="number">3</html:span>
                                    <html:span class="operator">+</html:span> a\sup <html:span
                                        class="number">4</html:span>
                                    <html:span class="operator">+</html:span>
                                    <html:span class="operator">.</html:span><html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span> is called the \i {geometric series}<html:span
                                        class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>The series</html:p>
                                    <html:p>1 + a + a<html:sup>2</html:sup> +
                                            a<html:sup>3</html:sup> + a<html:sup>4</html:sup> +
                                        ...</html:p>
                                    <html:p>is called the <html:i>geometric
                                        series</html:i>.</html:p>
                                </html:blockquote>
                                <html:p>If the argument contains spaces or other punctuation,
                                    enclose the argument in curly brackets.</html:p>
                                <html:a name="uicontrol-command"></html:a><html:a name="uicontrol"></html:a>
                                <html:h2 id="uicontrol">\uicontrol</html:h2>
                                <html:p>The \uicontrol command is used to mark content as being used
                                    for UI control elements. When using HTML, the output is rendered
                                    in bold. When using DITA XML the content is enclosed in a
                                        <html:code>uicontrol</html:code> tag.</html:p>
                                <html:a name="underline-command"></html:a><html:a name="underline"></html:a>
                                <html:h2 id="underline">\underline</html:h2>
                                <html:p>The \underline command renders its argument
                                    underlined.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> The \underline {F}ile menu
                                    gives the users the possibility to edit an existing
                                        file<html:span class="operator">,</html:span>
                                    <html:span class="keyword">or</html:span> save a <html:span
                                        class="keyword">new</html:span>
                                    <html:span class="keyword">or</html:span> modified
                                        file<html:span class="operator">,</html:span> and exit the
                                        application<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>The <html:u>F</html:u>ile menu gives the
                                        users the possibility to edit an existing file, or save a
                                        new or modified file, and exit the application.</html:p>
                                </html:blockquote>
                                <html:p>If the argument contains spaces or other punctuation,
                                    enclose the argument in curly brackets.</html:p>
                                <html:a name="backslash-command"></html:a><html:a
                                    name="double-backslash"></html:a>
                                <html:h2 id="double-backslash">\\ (double backslash)</html:h2>
                                <html:p>The \\ command expands to a double backslash.</html:p>
                                <html:p>QDoc commands always start with a single backslash. To
                                    display a single backslash in the text you need to type two
                                    backslashes. If you want to display two backslashes, you need to
                                    type four.</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> The \\\\ command is useful
                                        <html:span class="keyword">if</html:span> you want a
                                    backslash to appear verbatim<html:span class="operator"
                                        >,</html:span>
                                    <html:span class="keyword">for</html:span> example<html:span
                                        class="operator">,</html:span> writing
                                        C:\\windows\\home\\<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>The \\ command is useful if you want a
                                        backslash to appear verbatim, for example, writing
                                        C:\windows\home\.</html:p>
                                </html:blockquote>
                                <html:p>However, if you want your text to appear in a monospace font
                                    as well, you can use the <html:a
                                        href="04-qdoc-commands-textmarkup.html#c-command"
                                        >\c</html:a> command instead, which accepts and renders the
                                    backslash as any other character. For example:</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> The \\c command is useful
                                        <html:span class="keyword">if</html:span> you want a
                                    backslash to appear verbatim<html:span class="operator"
                                        >,</html:span> and the word that contains it written in a
                                    monospace font<html:span class="operator">,</html:span> like
                                        <html:span class="keyword">this</html:span>: \c
                                        {C:\windows\home\}<html:span class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p>The \c command is useful if you want a
                                        backslash to appear verbatim, and the word that contains it
                                        written in a monospace font, like this:
                                            <html:code>C:\windows\home\</html:code>.</html:p>
                                </html:blockquote>
                            </html:div>
                            <html:p><html:b>See also </html:b><html:a
                                    href="04-qdoc-commands-textmarkup.html#b">\b</html:a>.</html:p>
                            <!-- @@@04-qdoc-commands-textmarkup.html -->
                            <html:p class="naviNextPrevious footerNavi">
                                <html:a class="prevPage" href="03-qdoc-commands-markup.html">Markup
                                    Commands</html:a>
                                <html:a class="nextPage"
                                    href="05-qdoc-commands-documentstructure.html">Document
                                    Structure</html:a>
                            </html:p>
                        </html:div>
                    </html:div>
                </html:div>
            </html:div>
        </html:div>
        <html:div class="footer">
            <html:p>
                <html:acronym title="Copyright">&#169;</html:acronym> 2015 The Qt Company Ltd.
                Documentation contributions included herein are the copyrights of their respective
                owners.<html:br /> The documentation provided herein is licensed under the terms of
                the <html:a href="http://www.gnu.org/licenses/fdl.html">GNU Free Documentation
                    License version 1.3</html:a> as published by the Free Software
                Foundation.<html:br /> Qt and respective logos are trademarks of The Qt Company Ltd.
                in Finland and/or other countries worldwide. All other trademarks are property of
                their respective owners. </html:p>
        </html:div>
    </html:body>
</html:html>