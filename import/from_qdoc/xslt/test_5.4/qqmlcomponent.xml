<html:html xmlns:html="http://www.w3.org/1999/xhtml" lang="en">
    <html:head>
        <html:meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <!-- qqmlcomponent.cpp -->
        <html:title>QQmlComponent Class | Qt QML 5.4</html:title>
        <html:link href="style/offline.css" rel="stylesheet" type="text/css" />
    </html:head>
    <html:body>
        <html:div class="header" id="qtdocheader">
            <html:div class="main">
                <html:div class="main-rounded">
                    <html:div class="navigationbar">
                        <html:ul>
                            <html:li><html:a href="qtdoc/index.html">Qt 5.4</html:a></html:li>
                            <html:li><html:a href="qtqml-index.html">Qt QML</html:a></html:li>
                            <html:li><html:a href="qtqml-module.html">C++ Classes</html:a></html:li>
                            <html:li>QQmlComponent</html:li>
                            <html:li id="buildversion">Qt 5.4.2 Reference Documentation</html:li>
                        </html:ul>
                    </html:div>
                </html:div>
                <html:div class="content">
                    <html:div class="line">
                        <html:div class="content mainContent">
                            <html:div class="sidebar">
                                <html:div class="toc">
                                    <html:h3><html:a name="toc">Contents</html:a></html:h3>
                                    <html:ul>
                                        <html:li class="level1"><html:a href="#public-types">Public
                                                Types</html:a></html:li>
                                        <html:li class="level1"><html:a href="#properties"
                                                >Properties</html:a></html:li>
                                        <html:li class="level1"><html:a href="#public-functions"
                                                >Public Functions</html:a></html:li>
                                        <html:li class="level1"><html:a href="#public-slots">Public
                                                Slots</html:a></html:li>
                                        <html:li class="level1"><html:a href="#signals"
                                                >Signals</html:a></html:li>
                                        <html:li class="level1"><html:a href="#details">Detailed
                                                Description</html:a></html:li>
                                        <html:li class="level2"><html:a href="#network-components"
                                                >Network Components</html:a></html:li>
                                    </html:ul>
                                </html:div>
                                <html:div class="sidebar-content" id="sidebar-content"
                                ></html:div></html:div>
                            <html:h1 class="title">QQmlComponent Class</html:h1>
                            <!-- $$$QQmlComponent-brief -->
                            <html:p>The <html:a href="qqmlcomponent.html">QQmlComponent</html:a>
                                class encapsulates a QML component definition <html:a
                                    href="#details">More...</html:a></html:p>
                            <!-- @@@QQmlComponent -->
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Header:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:span class="preprocessor">#include
                                                  &lt;QQmlComponent&gt;</html:span>
                                            </html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                qmake:</html:td>
                                            <html:td class="memItemRight bottomAlign"> QT +=
                                                qml</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Since:</html:td>
                                            <html:td class="memItemRight bottomAlign"> Qt
                                                5.0</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Instantiated By:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:a href="qml-qtqml-component.html"
                                                  >Component</html:a></html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                Inherits:</html:td>
                                            <html:td class="memItemRight bottomAlign">
                                                <html:a href="qtcore/qobject.html"
                                                >QObject</html:a></html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div><html:ul>
                                <html:li><html:a href="qqmlcomponent-members.html">List of all
                                        members, including inherited members</html:a></html:li>
                            </html:ul>
                            <html:a name="public-types"></html:a>
                            <html:h2 id="public-types">Public Types</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> enum </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#CompilationMode-enum"
                                                  >CompilationMode</html:a></html:b> {
                                                PreferSynchronous, Asynchronous }</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> enum </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#Status-enum"
                                                  >Status</html:a></html:b> { Null, Ready, Loading,
                                                Error }</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:a name="properties"></html:a>
                            <html:h2 id="properties">Properties</html:h2>
                            <html:ul>
                                <html:li class="fn"><html:b><html:a
                                            href="qqmlcomponent.html#progress-prop"
                                            >progress</html:a></html:b> : const qreal</html:li>
                                <html:li class="fn"><html:b><html:a
                                            href="qqmlcomponent.html#status-prop"
                                        >status</html:a></html:b> : const Status</html:li>
                                <html:li class="fn"><html:b><html:a
                                            href="qqmlcomponent.html#url-prop">url</html:a></html:b>
                                    : const QUrl</html:li>
                            </html:ul>
                            <html:ul>
                                <html:li class="fn">1 property inherited from <html:a
                                        href="qtcore/qobject.html#properties"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="public-functions"></html:a>
                            <html:h2 id="public-functions">Public Functions</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#QQmlComponent"
                                                  >QQmlComponent</html:a></html:b>(QQmlEngine
                                                  *<html:i> engine</html:i>, QObject *<html:i>
                                                  parent</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#QQmlComponent-3"
                                                  >QQmlComponent</html:a></html:b>(QQmlEngine
                                                  *<html:i> engine</html:i>, const QString
                                                  &amp;<html:i> fileName</html:i>, QObject *<html:i>
                                                  parent</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#QQmlComponent-4"
                                                  >QQmlComponent</html:a></html:b>(QQmlEngine
                                                  *<html:i> engine</html:i>, const QString
                                                  &amp;<html:i> fileName</html:i>,
                                                  CompilationMode<html:i> mode</html:i>, QObject
                                                  *<html:i> parent</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#QQmlComponent-5"
                                                  >QQmlComponent</html:a></html:b>(QQmlEngine
                                                  *<html:i> engine</html:i>, const QUrl
                                                  &amp;<html:i> url</html:i>, QObject *<html:i>
                                                  parent</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#QQmlComponent-6"
                                                  >QQmlComponent</html:a></html:b>(QQmlEngine
                                                  *<html:i> engine</html:i>, const QUrl
                                                  &amp;<html:i> url</html:i>,
                                                  CompilationMode<html:i> mode</html:i>, QObject
                                                  *<html:i> parent</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#dtor.QQmlComponent"
                                                  >~QQmlComponent</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual QObject * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#beginCreate"
                                                  >beginCreate</html:a></html:b>(QQmlContext
                                                  *<html:i> publicContext</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#completeCreate"
                                                  >completeCreate</html:a></html:b>()</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                virtual QObject * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#create"
                                                  >create</html:a></html:b>(QQmlContext *<html:i>
                                                  context</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#create-2"
                                                  >create</html:a></html:b>(QQmlIncubator
                                                  &amp;<html:i> incubator</html:i>, QQmlContext
                                                  *<html:i> context</html:i> = 0, QQmlContext
                                                  *<html:i> forContext</html:i> = 0)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QQmlContext * </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#creationContext"
                                                  >creationContext</html:a></html:b>()
                                                const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign">
                                                QList&lt;QQmlError&gt; </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#errors"
                                                  >errors</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#isError"
                                                  >isError</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#isLoading"
                                                  >isLoading</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#isNull"
                                                  >isNull</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> bool </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#isReady"
                                                  >isReady</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> qreal </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#progress-prop"
                                                  >progress</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> Status </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#status-prop"
                                                  >status</html:a></html:b>() const</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> QUrl </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#url-prop"
                                                  >url</html:a></html:b>() const</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">31 public functions inherited from <html:a
                                        href="qtcore/qobject.html#public-functions"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="public-slots"></html:a>
                            <html:h2 id="public-slots">Public Slots</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#loadUrl"
                                                  >loadUrl</html:a></html:b>(const QUrl
                                                  &amp;<html:i> url</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#loadUrl-2"
                                                  >loadUrl</html:a></html:b>(const QUrl
                                                  &amp;<html:i> url</html:i>,
                                                  CompilationMode<html:i> mode</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a href="qqmlcomponent.html#setData"
                                                  >setData</html:a></html:b>(const QByteArray
                                                  &amp;<html:i> data</html:i>, const QUrl
                                                  &amp;<html:i> url</html:i>)</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">1 public slot inherited from <html:a
                                        href="qtcore/qobject.html#public-slots"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="signals"></html:a>
                            <html:h2 id="signals">Signals</html:h2>
                            <html:div class="table"><html:table class="alignedsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#progress-prop"
                                                  >progressChanged</html:a></html:b>(qreal<html:i>
                                                  progress</html:i>)</html:td>
                                        </html:tr>
                                        <html:tr>
                                            <html:td class="memItemLeft rightAlign topAlign"> void </html:td>
                                            <html:td class="memItemRight bottomAlign"
                                                  ><html:b><html:a
                                                  href="qqmlcomponent.html#status-prop"
                                                  >statusChanged</html:a></html:b>(QQmlComponent::Status<html:i>
                                                  status</html:i>)</html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                            <html:ul>
                                <html:li class="fn">2 signals inherited from <html:a
                                        href="qtcore/qobject.html#signals"
                                    >QObject</html:a></html:li>
                            </html:ul>
                            <html:h3>Additional Inherited Members</html:h3>
                            <html:ul>
                                <html:li class="fn">1 public variable inherited from <html:a
                                        href="qtcore/qobject.html#public-variables"
                                    >QObject</html:a></html:li>
                                <html:li class="fn">10 static public members inherited from <html:a
                                        href="qtcore/qobject.html#static-public-members"
                                        >QObject</html:a></html:li>
                                <html:li class="fn">9 protected functions inherited from <html:a
                                        href="qtcore/qobject.html#protected-functions"
                                        >QObject</html:a></html:li>
                                <html:li class="fn">2 protected variables inherited from <html:a
                                        href="qtcore/qobject.html#protected-variables"
                                        >QObject</html:a></html:li>
                            </html:ul>
                            <html:a name="details"></html:a>
                            <!-- $$$QQmlComponent-description -->
                            <html:div class="descr">
                                <html:h2 id="details">Detailed Description</html:h2>
                                <html:p>The <html:a href="qqmlcomponent.html">QQmlComponent</html:a>
                                    class encapsulates a QML component definition</html:p>
                                <html:p>Components are reusable, encapsulated QML types with
                                    well-defined interfaces.</html:p>
                                <html:p>A <html:a href="qqmlcomponent.html">QQmlComponent</html:a>
                                    instance can be created from a QML file. For example, if there
                                    is a <html:code>main.qml</html:code> file like this:</html:p>
                                <html:pre class="qml">import QtQuick 2.0 <html:span class="type"
                                            ><html:a href="qtquick/qml-qtquick-item.html"
                                            >Item</html:a></html:span> { <html:span class="name"
                                        >width</html:span>: <html:span class="number"
                                        >200</html:span>
                                    <html:span class="name">height</html:span>: <html:span
                                        class="number">200</html:span> }</html:pre>
                                <html:p>The following code loads this QML file as a component,
                                    creates an instance of this component using <html:a
                                        href="qqmlcomponent.html#create">create</html:a>(), and then
                                    queries the <html:a href="qtquick/qml-qtquick-item.html"
                                        >Item</html:a>'s <html:a
                                        href="qtquick/qml-qtquick-item.html#width-prop"
                                        >width</html:a> value:</html:p>
                                <html:pre class="cpp"><html:span class="type"><html:a
                                            href="qqmlengine.html">QQmlEngine</html:a></html:span>
                                    <html:span class="operator">*</html:span>engine <html:span
                                        class="operator">=</html:span>
                                    <html:span class="keyword">new</html:span>
                                    <html:span class="type"><html:a href="qqmlengine.html"
                                            >QQmlEngine</html:a></html:span>; <html:span
                                        class="type"><html:a href="qqmlcomponent.html#QQmlComponent"
                                            >QQmlComponent</html:a></html:span>
                                        component(engine<html:span class="operator">,</html:span>
                                    <html:span class="type"><html:a href="qtcore/qurl.html"
                                            >QUrl</html:a></html:span><html:span class="operator"
                                        >::</html:span>fromLocalFile(<html:span class="string"
                                        >"main.qml"</html:span>)); <html:span class="type"><html:a
                                            href="qtcore/qobject.html#QObject"
                                        >QObject</html:a></html:span>
                                    <html:span class="operator">*</html:span>myObject <html:span
                                        class="operator">=</html:span> component<html:span
                                        class="operator">.</html:span><html:a
                                        href="qqmlcomponent.html#create">create</html:a>();
                                        <html:span class="type"><html:a
                                            href="qtquick/qquickitem.html"
                                        >QQuickItem</html:a></html:span>
                                    <html:span class="operator">*</html:span>item <html:span
                                        class="operator">=</html:span> qobject_cast<html:span
                                        class="operator">&lt;</html:span><html:span class="type"
                                            ><html:a href="qtquick/qquickitem.html"
                                            >QQuickItem</html:a></html:span><html:span
                                        class="operator">*</html:span><html:span class="operator"
                                        >&gt;</html:span>(myObject); <html:span class="type"
                                        >int</html:span> width <html:span class="operator"
                                        >=</html:span> item<html:span class="operator"
                                        >-</html:span><html:span class="operator"
                                    >&gt;</html:span>width(); <html:span class="comment">// width =
                                        200</html:span></html:pre>
                                <html:p>To create instances of a component in code where a <html:a
                                        href="qqmlengine.html">QQmlEngine</html:a> instance is not
                                    available, you can use <html:a href="qqmlengine.html#qmlContext"
                                        >qmlContext</html:a>() or <html:a
                                        href="qqmlengine.html#qmlEngine">qmlEngine</html:a>(). For
                                    example, in the scenario below, child items are being created
                                    within a <html:a href="qtquick/qquickitem.html"
                                        >QQuickItem</html:a> subclass:</html:p>
                                <html:pre class="cpp"><html:span class="type">void</html:span>
                                        MyCppItem<html:span class="operator">::</html:span>init() {
                                        <html:span class="type"><html:a href="qqmlengine.html"
                                            >QQmlEngine</html:a></html:span>
                                    <html:span class="operator">*</html:span>engine <html:span
                                        class="operator">=</html:span> qmlEngine(<html:span
                                        class="keyword">this</html:span>); <html:span
                                        class="comment">// Or:</html:span>
                                    <html:span class="comment">// QQmlEngine *engine =
                                        qmlContext(this)-&gt;engine();</html:span>
                                    <html:span class="type"><html:a
                                            href="qqmlcomponent.html#QQmlComponent"
                                            >QQmlComponent</html:a></html:span>
                                        component(engine<html:span class="operator">,</html:span>
                                    <html:span class="type"><html:a href="qtcore/qurl.html"
                                            >QUrl</html:a></html:span><html:span class="operator"
                                        >::</html:span>fromLocalFile(<html:span class="string"
                                        >"MyItem.qml"</html:span>)); <html:span class="type"><html:a
                                            href="qtquick/qquickitem.html"
                                        >QQuickItem</html:a></html:span>
                                    <html:span class="operator">*</html:span>childItem <html:span
                                        class="operator">=</html:span> qobject_cast<html:span
                                        class="operator">&lt;</html:span><html:span class="type"
                                            ><html:a href="qtquick/qquickitem.html"
                                            >QQuickItem</html:a></html:span><html:span
                                        class="operator">*</html:span><html:span class="operator"
                                        >&gt;</html:span>(component<html:span class="operator"
                                        >.</html:span>create()); childItem<html:span
                                        class="operator">-</html:span><html:span class="operator"
                                        >&gt;</html:span>setParentItem(<html:span class="keyword"
                                        >this</html:span>); }</html:pre>
                                <html:p>Note that these functions will return
                                        <html:code>null</html:code> when called inside the
                                    constructor of a <html:a href="qtcore/qobject.html"
                                        >QObject</html:a> subclass, as the instance will not yet
                                    have a context nor engine.</html:p>
                                <html:a name="network-components"></html:a>
                                <html:h4>Network Components</html:h4>
                                <html:p>If the URL passed to <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> is a network resource, or if the QML
                                    document references a network resource, the <html:a
                                        href="qqmlcomponent.html">QQmlComponent</html:a> has to
                                    fetch the network data before it is able to create objects. In
                                    this case, the <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> will have a <html:a
                                        href="qqmlcomponent.html#Status-enum">Loading</html:a>
                                    <html:a href="qqmlcomponent.html#status-prop">status</html:a>.
                                    An application will have to wait until the component is <html:a
                                        href="qqmlcomponent.html#Status-enum">Ready</html:a> before
                                    calling <html:a href="qqmlcomponent.html#create"
                                        >QQmlComponent::create</html:a>().</html:p>
                                <html:p>The following example shows how to load a QML file from a
                                    network resource. After creating the <html:a
                                        href="qqmlcomponent.html">QQmlComponent</html:a>, it tests
                                    whether the component is loading. If it is, it connects to the
                                        <html:a href="qqmlcomponent.html#status-prop"
                                        >QQmlComponent::statusChanged</html:a>() signal and
                                    otherwise calls the <html:code>continueLoading()</html:code>
                                    method directly. Note that <html:a
                                        href="qqmlcomponent.html#isLoading"
                                        >QQmlComponent::isLoading</html:a>() may be false for a
                                    network component if the component has been cached and is ready
                                    immediately.</html:p>
                                <html:pre class="cpp">MyApplication<html:span class="operator"
                                        >::</html:span>MyApplication() { <html:span class="comment"
                                        >// ...</html:span> component <html:span class="operator"
                                        >=</html:span>
                                    <html:span class="keyword">new</html:span>
                                    <html:span class="type"><html:a
                                            href="qqmlcomponent.html#QQmlComponent"
                                            >QQmlComponent</html:a></html:span>(engine<html:span
                                        class="operator">,</html:span>
                                    <html:span class="type"><html:a href="qtcore/qurl.html"
                                            >QUrl</html:a></html:span>(<html:span class="string"
                                        >"http://www.example.com/main.qml"</html:span>)); <html:span
                                        class="keyword">if</html:span> (component<html:span
                                        class="operator">-</html:span><html:span class="operator"
                                        >&gt;</html:span>isLoading()) <html:span class="type"
                                            ><html:a href="qtcore/qobject.html#QObject"
                                            >QObject</html:a></html:span><html:span class="operator"
                                        >::</html:span>connect(component<html:span class="operator"
                                        >,</html:span> SIGNAL(statusChanged(<html:span class="type"
                                            ><html:a href="qqmlcomponent.html#QQmlComponent"
                                            >QQmlComponent</html:a></html:span><html:span
                                        class="operator">::</html:span>Status))<html:span
                                        class="operator">,</html:span>
                                    <html:span class="keyword">this</html:span><html:span
                                        class="operator">,</html:span> SLOT(continueLoading()));
                                        <html:span class="keyword">else</html:span>
                                    continueLoading(); } <html:span class="type">void</html:span>
                                        MyApplication<html:span class="operator"
                                    >::</html:span>continueLoading() { <html:span class="keyword"
                                        >if</html:span> (component<html:span class="operator"
                                        >-</html:span><html:span class="operator"
                                    >&gt;</html:span>isError()) { <html:a
                                        href="qtcore/qtglobal.html#qWarning">qWarning</html:a>()
                                        <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">&lt;</html:span> component<html:span
                                        class="operator">-</html:span><html:span class="operator"
                                        >&gt;</html:span>errors(); } <html:span class="keyword"
                                        >else</html:span> { <html:span class="type"><html:a
                                            href="qtcore/qobject.html#QObject"
                                        >QObject</html:a></html:span>
                                    <html:span class="operator">*</html:span>myObject <html:span
                                        class="operator">=</html:span> component<html:span
                                        class="operator">-</html:span><html:span class="operator"
                                        >&gt;</html:span>create(); } }</html:pre>
                                <html:p>Note that the <html:a
                                        href="qtdoc/qtquick-porting-qt5.html#qt-quick-1">Qt Quick
                                        1</html:a> version is named QDeclarativeComponent.</html:p>
                            </html:div>
                            <!-- @@@QQmlComponent -->
                            <html:div class="types">
                                <html:h2>Member Type Documentation</html:h2>
                                <!-- $$$CompilationMode$$$PreferSynchronous$$$Asynchronous -->
                                <html:h3 class="fn" id="CompilationMode-enum"><html:a
                                        name="CompilationMode-enum"></html:a>enum
                                        QQmlComponent::<html:span class="name"
                                        >CompilationMode</html:span></html:h3>
                                <html:p>Specifies whether the <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> should load the component
                                    immediately, or asynchonously.</html:p>
                                <html:div class="table"><html:table class="valuelist">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:th class="tblConst">Constant</html:th>
                                                <html:th class="tblval">Value</html:th>
                                                <html:th class="tbldscr">Description</html:th>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQmlComponent::PreferSynchronous</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0</html:code></html:td>
                                                <html:td class="topAlign">Prefer loading/compiling
                                                  the component immediately, blocking the thread.
                                                  This is not always possible; for example, remote
                                                  URLs will always load asynchronously.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQmlComponent::Asynchronous</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>1</html:code></html:td>
                                                <html:td class="topAlign">Load/compile the component
                                                  in a background thread.</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@CompilationMode -->
                                <!-- $$$Status$$$Null$$$Ready$$$Loading$$$Error -->
                                <html:h3 class="fn" id="Status-enum"><html:a name="Status-enum"
                                    ></html:a>enum QQmlComponent::<html:span class="name"
                                        >Status</html:span></html:h3>
                                <html:p>Specifies the loading status of the <html:a
                                        href="qqmlcomponent.html">QQmlComponent</html:a>.</html:p>
                                <html:div class="table"><html:table class="valuelist">
                                        <html:tbody>
                                            <html:tr class="odd" valign="top">
                                                <html:th class="tblConst">Constant</html:th>
                                                <html:th class="tblval">Value</html:th>
                                                <html:th class="tbldscr">Description</html:th>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQmlComponent::Null</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>0</html:code></html:td>
                                                <html:td class="topAlign">This <html:a
                                                  href="qqmlcomponent.html">QQmlComponent</html:a>
                                                  has no data. Call <html:a
                                                  href="qqmlcomponent.html#loadUrl"
                                                  >loadUrl</html:a>() or <html:a
                                                  href="qqmlcomponent.html#setData"
                                                  >setData</html:a>() to add QML content.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQmlComponent::Ready</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>1</html:code></html:td>
                                                <html:td class="topAlign">This <html:a
                                                  href="qqmlcomponent.html">QQmlComponent</html:a>
                                                  is ready and <html:a
                                                  href="qqmlcomponent.html#create">create</html:a>()
                                                  may be called.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQmlComponent::Loading</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>2</html:code></html:td>
                                                <html:td class="topAlign">This <html:a
                                                  href="qqmlcomponent.html">QQmlComponent</html:a>
                                                  is loading network data.</html:td>
                                            </html:tr>
                                            <html:tr>
                                                <html:td class="topAlign"
                                                  ><html:code>QQmlComponent::Error</html:code></html:td>
                                                <html:td class="topAlign"
                                                  ><html:code>3</html:code></html:td>
                                                <html:td class="topAlign">An error has occurred.
                                                  Call <html:a href="qqmlcomponent.html#errors"
                                                  >errors</html:a>() to retrieve a list of {<html:a
                                                  href="qqmlerror.html"
                                                  >QQmlError</html:a>}{errors}.</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@Status -->
                            </html:div>
                            <html:div class="prop">
                                <html:h2>Property Documentation</html:h2>
                                <!-- $$$progress-prop$$$progress$$$progressChangedqreal -->
                                <html:h3 class="fn" id="progress-prop"><html:a name="progress-prop"
                                        ></html:a><html:span class="name">progress</html:span> :
                                    const <html:span class="type"><html:a
                                            href="qtcore/qtglobal.html#qreal-typedef"
                                        >qreal</html:a></html:span></html:h3>
                                <html:p>The progress of loading the component, from 0.0 (nothing
                                    loaded) to 1.0 (finished).</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  qreal </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>progress</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>Notifier signal:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>progressChanged</html:b></html:span>(qreal<html:i>
                                                  progress</html:i>)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@progress -->
                                <!-- $$$status-prop$$$status$$$statusChangedQQmlComponent::Status -->
                                <html:h3 class="fn" id="status-prop"><html:a name="status-prop"
                                        ></html:a><html:span class="name">status</html:span> : const
                                        <html:span class="type"><html:a
                                            href="qqmlcomponent.html#Status-enum"
                                        >Status</html:a></html:span></html:h3>
                                <html:p>The component's current <html:a
                                        href="qqmlcomponent.html#Status-enum"
                                    >status</html:a>.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  Status </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>status</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <html:p><html:b>Notifier signal:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  void </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"
                                                  ><html:b>statusChanged</html:b></html:span>(QQmlComponent::Status<html:i>
                                                  status</html:i>)</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@status -->
                                <!-- $$$url-prop$$$url -->
                                <html:h3 class="fn" id="url-prop"><html:a name="url-prop"
                                        ></html:a><html:span class="name">url</html:span> : const
                                        <html:span class="type"><html:a href="qtcore/qurl.html"
                                            >QUrl</html:a></html:span></html:h3>
                                <html:p>The component URL. This is the URL passed to either the
                                    constructor, or the <html:a href="qqmlcomponent.html#loadUrl"
                                        >loadUrl</html:a>(), or <html:a
                                        href="qqmlcomponent.html#setData">setData</html:a>()
                                    methods.</html:p>
                                <html:p><html:b>Access functions:</html:b></html:p>
                                <html:div class="table"><html:table class="alignedsummary">
                                        <html:tbody>
                                            <html:tr>
                                                <html:td class="memItemLeft topAlign rightAlign">
                                                  QUrl </html:td>
                                                <html:td class="memItemRight bottomAlign"><html:span
                                                  class="name"><html:b>url</html:b></html:span>()
                                                  const</html:td>
                                            </html:tr>
                                        </html:tbody>
                                    </html:table></html:div>
                                <!-- @@@url -->
                            </html:div>
                            <html:div class="func">
                                <html:h2>Member Function Documentation</html:h2>
                                <!-- $$$QQmlComponent[overload1]$$$QQmlComponentQQmlEngine*QObject* -->
                                <html:h3 class="fn" id="QQmlComponent"><html:a name="QQmlComponent"
                                        ></html:a>QQmlComponent::<html:span class="name"
                                        >QQmlComponent</html:span>(<html:span class="type"><html:a
                                            href="qqmlengine.html">QQmlEngine</html:a></html:span>
                                        *<html:i> engine</html:i>, <html:span class="type"><html:a
                                            href="qtcore/qobject.html#QObject"
                                        >QObject</html:a></html:span> *<html:i> parent</html:i> =
                                    0)</html:h3>
                                <html:p>Create a <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> with no data and give it the
                                    specified <html:i>engine</html:i> and <html:i>parent</html:i>.
                                    Set the data with <html:a href="qqmlcomponent.html#setData"
                                        >setData</html:a>().</html:p>
                                <!-- @@@QQmlComponent -->
                                <!-- $$$QQmlComponent$$$QQmlComponentQQmlEngine*constQString&QObject* -->
                                <html:h3 class="fn" id="QQmlComponent-3"><html:a
                                        name="QQmlComponent-3"></html:a>QQmlComponent::<html:span
                                        class="name">QQmlComponent</html:span>(<html:span
                                        class="type"><html:a href="qqmlengine.html"
                                            >QQmlEngine</html:a></html:span> *<html:i>
                                        engine</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qstring.html">QString</html:a></html:span>
                                        &amp;<html:i> fileName</html:i>, <html:span class="type"
                                            ><html:a href="qtcore/qobject.html#QObject"
                                            >QObject</html:a></html:span> *<html:i> parent</html:i>
                                    = 0)</html:h3>
                                <html:p>Create a <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> from the given
                                        <html:i>fileName</html:i> and give it the specified
                                        <html:i>parent</html:i> and
                                    <html:i>engine</html:i>.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlcomponent.html#loadUrl"
                                    >loadUrl</html:a>().</html:p>
                                <!-- @@@QQmlComponent -->
                                <!-- $$$QQmlComponent$$$QQmlComponentQQmlEngine*constQString&CompilationModeQObject* -->
                                <html:h3 class="fn" id="QQmlComponent-4"><html:a
                                        name="QQmlComponent-4"></html:a>QQmlComponent::<html:span
                                        class="name">QQmlComponent</html:span>(<html:span
                                        class="type"><html:a href="qqmlengine.html"
                                            >QQmlEngine</html:a></html:span> *<html:i>
                                        engine</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qstring.html">QString</html:a></html:span>
                                        &amp;<html:i> fileName</html:i>, <html:span class="type"
                                            ><html:a href="qqmlcomponent.html#CompilationMode-enum"
                                            >CompilationMode</html:a></html:span><html:i>
                                        mode</html:i>, <html:span class="type"><html:a
                                            href="qtcore/qobject.html#QObject"
                                        >QObject</html:a></html:span> *<html:i> parent</html:i> =
                                    0)</html:h3>
                                <html:p>Create a <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> from the given
                                        <html:i>fileName</html:i> and give it the specified
                                        <html:i>parent</html:i> and <html:i>engine</html:i>. If
                                        <html:i>mode</html:i> is <html:a
                                        href="qqmlcomponent.html#CompilationMode-enum"
                                        >Asynchronous</html:a>, the component will be loaded and
                                    compiled asynchronously.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlcomponent.html#loadUrl"
                                    >loadUrl</html:a>().</html:p>
                                <!-- @@@QQmlComponent -->
                                <!-- $$$QQmlComponent$$$QQmlComponentQQmlEngine*constQUrl&QObject* -->
                                <html:h3 class="fn" id="QQmlComponent-5"><html:a
                                        name="QQmlComponent-5"></html:a>QQmlComponent::<html:span
                                        class="name">QQmlComponent</html:span>(<html:span
                                        class="type"><html:a href="qqmlengine.html"
                                            >QQmlEngine</html:a></html:span> *<html:i>
                                        engine</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qurl.html">QUrl</html:a></html:span>
                                        &amp;<html:i> url</html:i>, <html:span class="type"><html:a
                                            href="qtcore/qobject.html#QObject"
                                        >QObject</html:a></html:span> *<html:i> parent</html:i> =
                                    0)</html:h3>
                                <html:p>Create a <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> from the given <html:i>url</html:i>
                                    and give it the specified <html:i>parent</html:i> and
                                        <html:i>engine</html:i>.</html:p>
                                <html:p>Ensure that the URL provided is full and correct, in
                                    particular, use <html:a href="qtcore/qurl.html#fromLocalFile"
                                        >QUrl::fromLocalFile</html:a>() when loading a file from the
                                    local filesystem.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlcomponent.html#loadUrl"
                                    >loadUrl</html:a>().</html:p>
                                <!-- @@@QQmlComponent -->
                                <!-- $$$QQmlComponent$$$QQmlComponentQQmlEngine*constQUrl&CompilationModeQObject* -->
                                <html:h3 class="fn" id="QQmlComponent-6"><html:a
                                        name="QQmlComponent-6"></html:a>QQmlComponent::<html:span
                                        class="name">QQmlComponent</html:span>(<html:span
                                        class="type"><html:a href="qqmlengine.html"
                                            >QQmlEngine</html:a></html:span> *<html:i>
                                        engine</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qurl.html">QUrl</html:a></html:span>
                                        &amp;<html:i> url</html:i>, <html:span class="type"><html:a
                                            href="qqmlcomponent.html#CompilationMode-enum"
                                            >CompilationMode</html:a></html:span><html:i>
                                        mode</html:i>, <html:span class="type"><html:a
                                            href="qtcore/qobject.html#QObject"
                                        >QObject</html:a></html:span> *<html:i> parent</html:i> =
                                    0)</html:h3>
                                <html:p>Create a <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> from the given <html:i>url</html:i>
                                    and give it the specified <html:i>parent</html:i> and
                                        <html:i>engine</html:i>. If <html:i>mode</html:i> is <html:a
                                        href="qqmlcomponent.html#CompilationMode-enum"
                                        >Asynchronous</html:a>, the component will be loaded and
                                    compiled asynchronously.</html:p>
                                <html:p>Ensure that the URL provided is full and correct, in
                                    particular, use <html:a href="qtcore/qurl.html#fromLocalFile"
                                        >QUrl::fromLocalFile</html:a>() when loading a file from the
                                    local filesystem.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlcomponent.html#loadUrl"
                                    >loadUrl</html:a>().</html:p>
                                <!-- @@@QQmlComponent -->
                                <!-- $$$~QQmlComponent[overload1]$$$~QQmlComponent -->
                                <html:h3 class="fn" id="dtor.QQmlComponent"><html:a
                                        name="dtor.QQmlComponent"></html:a><html:code>[virtual]
                                        </html:code>QQmlComponent::<html:span class="name"
                                        >~QQmlComponent</html:span>()</html:h3>
                                <html:p>Destruct the <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a>.</html:p>
                                <!-- @@@~QQmlComponent -->
                                <!-- $$$beginCreate[overload1]$$$beginCreateQQmlContext* -->
                                <html:h3 class="fn" id="beginCreate"><html:a name="beginCreate"
                                        ></html:a><html:code>[virtual] </html:code><html:span
                                        class="type"><html:a href="qtcore/qobject.html#QObject"
                                            >QObject</html:a></html:span> *
                                        QQmlComponent::<html:span class="name"
                                        >beginCreate</html:span>(<html:span class="type"><html:a
                                            href="qqmlcontext.html">QQmlContext</html:a></html:span>
                                        *<html:i> publicContext</html:i>)</html:h3>
                                <html:p>This method provides advanced control over component
                                    instance creation. In general, programmers should use <html:a
                                        href="qqmlcomponent.html#create"
                                        >QQmlComponent::create</html:a>() to create a
                                    component.</html:p>
                                <html:p>Create an object instance from this component. Returns 0 if
                                    creation failed. <html:i>publicContext</html:i> specifies the
                                    context within which to create the object instance.</html:p>
                                <html:p>When <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> constructs an instance, it occurs in
                                    three steps:</html:p>
                                <html:ol class="1">
                                    <html:li>The object hierarchy is created, and constant values
                                        are assigned.</html:li>
                                    <html:li>Property bindings are evaluated for the first
                                        time.</html:li>
                                    <html:li>If applicable, <html:a
                                            href="qqmlparserstatus.html#componentComplete"
                                            >QQmlParserStatus::componentComplete</html:a>() is
                                        called on objects.</html:li>
                                </html:ol>
                                <html:p>QQmlComponent::beginCreate() differs from <html:a
                                        href="qqmlcomponent.html#create"
                                        >QQmlComponent::create</html:a>() in that it only performs
                                    step 1. <html:a href="qqmlcomponent.html#completeCreate"
                                        >QQmlComponent::completeCreate</html:a>() must be called to
                                    complete steps 2 and 3.</html:p>
                                <html:p>This breaking point is sometimes useful when using attached
                                    properties to communicate information to an instantiated
                                    component, as it allows their initial values to be configured
                                    before property bindings take effect.</html:p>
                                <html:p>The ownership of the returned object instance is transferred
                                    to the caller.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlcomponent.html#completeCreate"
                                        >completeCreate</html:a>() and <html:a
                                        href="qqmlengine.html#ObjectOwnership-enum"
                                        >QQmlEngine::ObjectOwnership</html:a>.</html:p>
                                <!-- @@@beginCreate -->
                                <!-- $$$completeCreate[overload1]$$$completeCreate -->
                                <html:h3 class="fn" id="completeCreate"><html:a
                                        name="completeCreate"></html:a><html:code>[virtual]
                                        </html:code><html:span class="type">void</html:span>
                                        QQmlComponent::<html:span class="name"
                                        >completeCreate</html:span>()</html:h3>
                                <html:p>This method provides advanced control over component
                                    instance creation. In general, programmers should use <html:a
                                        href="qqmlcomponent.html#create"
                                        >QQmlComponent::create</html:a>() to create a
                                    component.</html:p>
                                <html:p>This function completes the component creation begun with
                                        <html:a href="qqmlcomponent.html#beginCreate"
                                        >QQmlComponent::beginCreate</html:a>() and must be called
                                    afterwards.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlcomponent.html#beginCreate"
                                    >beginCreate</html:a>().</html:p>
                                <!-- @@@completeCreate -->
                                <!-- $$$create[overload1]$$$createQQmlContext* -->
                                <html:h3 class="fn" id="create"><html:a name="create"
                                        ></html:a><html:code>[virtual] </html:code><html:span
                                        class="type"><html:a href="qtcore/qobject.html#QObject"
                                            >QObject</html:a></html:span> *
                                        QQmlComponent::<html:span class="name"
                                        >create</html:span>(<html:span class="type"><html:a
                                            href="qqmlcontext.html">QQmlContext</html:a></html:span>
                                        *<html:i> context</html:i> = 0)</html:h3>
                                <html:p>Create an object instance from this component. Returns 0 if
                                    creation failed. <html:i>context</html:i> specifies the context
                                    within which to create the object instance.</html:p>
                                <html:p>If <html:i>context</html:i> is 0 (the default), it will
                                    create the instance in the engine' s <html:a
                                        href="qqmlengine.html#rootContext">root
                                    context</html:a>.</html:p>
                                <html:p>The ownership of the returned object instance is transferred
                                    to the caller.</html:p>
                                <html:p>If the object being created from this component is a visual
                                    item, it must have a visual parent, which can be set by calling
                                        <html:a href="qtquick/qquickitem.html#parent-prop"
                                        >QQuickItem::setParentItem</html:a>(). See <html:a
                                        href="qtquick/qtquick-visualcanvas-visualparent.html"
                                        >Concepts - Visual Parent in Qt Quick</html:a> for more
                                    details.</html:p>
                                <html:p><html:b>See also </html:b><html:a
                                        href="qqmlengine.html#ObjectOwnership-enum"
                                        >QQmlEngine::ObjectOwnership</html:a>.</html:p>
                                <!-- @@@create -->
                                <!-- $$$create$$$createQQmlIncubator&QQmlContext*QQmlContext* -->
                                <html:h3 class="fn" id="create-2"><html:a name="create-2"
                                        ></html:a><html:span class="type">void</html:span>
                                        QQmlComponent::<html:span class="name"
                                        >create</html:span>(<html:span class="type"><html:a
                                            href="qqmlincubator.html"
                                        >QQmlIncubator</html:a></html:span> &amp;<html:i>
                                        incubator</html:i>, <html:span class="type"><html:a
                                            href="qqmlcontext.html">QQmlContext</html:a></html:span>
                                        *<html:i> context</html:i> = 0, <html:span class="type"
                                            ><html:a href="qqmlcontext.html"
                                        >QQmlContext</html:a></html:span> *<html:i>
                                        forContext</html:i> = 0)</html:h3>
                                <html:p>Create an object instance from this component using the
                                    provided <html:i>incubator</html:i>. <html:i>context</html:i>
                                    specifies the context within which to create the object
                                    instance.</html:p>
                                <html:p>If <html:i>context</html:i> is 0 (the default), it will
                                    create the instance in the engine's <html:a
                                        href="qqmlengine.html#rootContext">root
                                    context</html:a>.</html:p>
                                <html:p><html:i>forContext</html:i> specifies a context that this
                                    object creation depends upon. If the <html:i>forContext</html:i>
                                    is being created asynchronously, and the <html:a
                                        href="qqmlincubator.html#IncubationMode-enum"
                                        >QQmlIncubator::IncubationMode</html:a> is <html:a
                                        href="qqmlincubator.html#IncubationMode-enum"
                                        >QQmlIncubator::AsynchronousIfNested</html:a>, this object
                                    will also be created asynchronously. If
                                        <html:i>forContext</html:i> is 0 (the default), the
                                        <html:i>context</html:i> will be used for this
                                    decision.</html:p>
                                <html:p>The created object and its creation status are available via
                                    the <html:i>incubator</html:i>.</html:p>
                                <html:p><html:b>See also </html:b><html:a href="qqmlincubator.html"
                                        >QQmlIncubator</html:a>.</html:p>
                                <!-- @@@create -->
                                <!-- $$$creationContext[overload1]$$$creationContext -->
                                <html:h3 class="fn" id="creationContext"><html:a
                                        name="creationContext"></html:a><html:span class="type"
                                            ><html:a href="qqmlcontext.html"
                                        >QQmlContext</html:a></html:span> *
                                        QQmlComponent::<html:span class="name"
                                        >creationContext</html:span>() const</html:h3>
                                <html:p>Returns the <html:a href="qqmlcontext.html"
                                        >QQmlContext</html:a> the component was created in. This is
                                    only valid for components created directly from QML.</html:p>
                                <!-- @@@creationContext -->
                                <!-- $$$errors[overload1]$$$errors -->
                                <html:h3 class="fn" id="errors"><html:a name="errors"
                                        ></html:a><html:span class="type"><html:a
                                            href="qtcore/qlist.html"
                                        >QList</html:a></html:span>&lt;<html:span class="type"
                                            ><html:a href="qqmlerror.html"
                                        >QQmlError</html:a></html:span>&gt;
                                        QQmlComponent::<html:span class="name">errors</html:span>()
                                    const</html:h3>
                                <html:p>Return the list of errors that occurred during the last
                                    compile or create operation. An empty list is returned if
                                        <html:a href="qqmlcomponent.html#isError">isError</html:a>()
                                    is not set.</html:p>
                                <!-- @@@errors -->
                                <!-- $$$isError[overload1]$$$isError -->
                                <html:h3 class="fn" id="isError"><html:a name="isError"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQmlComponent::<html:span class="name">isError</html:span>()
                                    const</html:h3>
                                <html:p>Returns true if <html:a
                                        href="qqmlcomponent.html#status-prop">status</html:a>() ==
                                        <html:a href="qqmlcomponent.html#Status-enum"
                                        >QQmlComponent::Error</html:a>.</html:p>
                                <!-- @@@isError -->
                                <!-- $$$isLoading[overload1]$$$isLoading -->
                                <html:h3 class="fn" id="isLoading"><html:a name="isLoading"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQmlComponent::<html:span class="name"
                                    >isLoading</html:span>() const</html:h3>
                                <html:p>Returns true if <html:a
                                        href="qqmlcomponent.html#status-prop">status</html:a>() ==
                                        <html:a href="qqmlcomponent.html#Status-enum"
                                        >QQmlComponent::Loading</html:a>.</html:p>
                                <!-- @@@isLoading -->
                                <!-- $$$isNull[overload1]$$$isNull -->
                                <html:h3 class="fn" id="isNull"><html:a name="isNull"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQmlComponent::<html:span class="name">isNull</html:span>()
                                    const</html:h3>
                                <html:p>Returns true if <html:a
                                        href="qqmlcomponent.html#status-prop">status</html:a>() ==
                                        <html:a href="qqmlcomponent.html#Status-enum"
                                        >QQmlComponent::Null</html:a>.</html:p>
                                <!-- @@@isNull -->
                                <!-- $$$isReady[overload1]$$$isReady -->
                                <html:h3 class="fn" id="isReady"><html:a name="isReady"
                                        ></html:a><html:span class="type">bool</html:span>
                                        QQmlComponent::<html:span class="name">isReady</html:span>()
                                    const</html:h3>
                                <html:p>Returns true if <html:a
                                        href="qqmlcomponent.html#status-prop">status</html:a>() ==
                                        <html:a href="qqmlcomponent.html#Status-enum"
                                        >QQmlComponent::Ready</html:a>.</html:p>
                                <!-- @@@isReady -->
                                <!-- $$$loadUrl[overload1]$$$loadUrlconstQUrl& -->
                                <html:h3 class="fn" id="loadUrl"><html:a name="loadUrl"
                                        ></html:a><html:code>[slot] </html:code><html:span
                                        class="type">void</html:span> QQmlComponent::<html:span
                                        class="name">loadUrl</html:span>(const <html:span
                                        class="type"><html:a href="qtcore/qurl.html"
                                        >QUrl</html:a></html:span> &amp;<html:i>
                                    url</html:i>)</html:h3>
                                <html:p>Load the <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> from the provided
                                        <html:i>url</html:i>.</html:p>
                                <html:p>Ensure that the URL provided is full and correct, in
                                    particular, use <html:a href="qtcore/qurl.html#fromLocalFile"
                                        >QUrl::fromLocalFile</html:a>() when loading a file from the
                                    local filesystem.</html:p>
                                <!-- @@@loadUrl -->
                                <!-- $$$loadUrl$$$loadUrlconstQUrl&CompilationMode -->
                                <html:h3 class="fn" id="loadUrl-2"><html:a name="loadUrl-2"
                                        ></html:a><html:code>[slot] </html:code><html:span
                                        class="type">void</html:span> QQmlComponent::<html:span
                                        class="name">loadUrl</html:span>(const <html:span
                                        class="type"><html:a href="qtcore/qurl.html"
                                        >QUrl</html:a></html:span> &amp;<html:i> url</html:i>,
                                        <html:span class="type"><html:a
                                            href="qqmlcomponent.html#CompilationMode-enum"
                                            >CompilationMode</html:a></html:span><html:i>
                                        mode</html:i>)</html:h3>
                                <html:p>Load the <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> from the provided
                                        <html:i>url</html:i>. If <html:i>mode</html:i> is <html:a
                                        href="qqmlcomponent.html#CompilationMode-enum"
                                        >Asynchronous</html:a>, the component will be loaded and
                                    compiled asynchronously.</html:p>
                                <html:p>Ensure that the URL provided is full and correct, in
                                    particular, use <html:a href="qtcore/qurl.html#fromLocalFile"
                                        >QUrl::fromLocalFile</html:a>() when loading a file from the
                                    local filesystem.</html:p>
                                <!-- @@@loadUrl -->
                                <!-- $$$setData[overload1]$$$setDataconstQByteArray&constQUrl& -->
                                <html:h3 class="fn" id="setData"><html:a name="setData"
                                        ></html:a><html:code>[slot] </html:code><html:span
                                        class="type">void</html:span> QQmlComponent::<html:span
                                        class="name">setData</html:span>(const <html:span
                                        class="type"><html:a href="qtcore/qbytearray.html"
                                            >QByteArray</html:a></html:span> &amp;<html:i>
                                        data</html:i>, const <html:span class="type"><html:a
                                            href="qtcore/qurl.html">QUrl</html:a></html:span>
                                        &amp;<html:i> url</html:i>)</html:h3>
                                <html:p>Sets the <html:a href="qqmlcomponent.html"
                                        >QQmlComponent</html:a> to use the given QML
                                        <html:i>data</html:i>. If <html:i>url</html:i> is provided,
                                    it is used to set the component name and to provide a base path
                                    for items resolved by this component.</html:p>
                                <!-- @@@setData -->
                            </html:div>
                        </html:div>
                    </html:div>
                </html:div>
            </html:div>
        </html:div>
        <html:div class="footer">
            <html:p>
                <html:acronym title="Copyright">&#169;</html:acronym> 2015 The Qt Company Ltd.
                Documentation contributions included herein are the copyrights of their respective
                owners.<html:br /> The documentation provided herein is licensed under the terms of
                the <html:a href="http://www.gnu.org/licenses/fdl.html">GNU Free Documentation
                    License version 1.3</html:a> as published by the Free Software
                Foundation.<html:br /> Qt and respective logos are trademarks of The Qt Company Ltd.
                in Finland and/or other countries worldwide. All other trademarks are property of
                their respective owners. </html:p>
        </html:div>
    </html:body>
</html:html>