<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="5.1-extension qtdoctools-1.0"
            xml:lang="en">
   <db:title>QTabletEvent Class</db:title>
   <db:classsynopsis>
      <db:ooclass>
         <db:classname>QTabletEvent</db:classname>
      </db:ooclass>
      <db:classsynopsisinfo role="header">#include
                                                  &lt;QTabletEvent&gt;</db:classsynopsisinfo>
      <db:classsynopsisinfo role="qmake"> QT +=
                                                gui</db:classsynopsisinfo>
      <db:classsynopsisinfo role="inherits">
         <db:link xlink:href="qinputevent.html">QInputEvent</db:link>
      </db:classsynopsisinfo>
      <db:constructorsynopsis xlink:href="#QTabletEvent">
         <db:methodname>QTabletEvent</db:methodname>
         <db:void role="parameters"/>
         <db:exceptionname role="parameters">( Type  type , const
                                         QPointF  &amp; 
                                    pos , const  QPointF 
                                        &amp;  globalPos ,  int  device ,  int  pointerType ,
                                         qreal  pressure ,
                                         int 
                                        xTilt ,  int  yTilt ,  qreal 
                                        tangentialPressure ,  qreal  rotation ,
                                         int  z ,
                                         Qt::KeyboardModifiers 
                                        keyState ,  qint64  uniqueID ,
                                         Qt::MouseButton 
                                        button ,  Qt::MouseButtons 
                                        buttons )</db:exceptionname>
      </db:constructorsynopsis>
      <db:methodsynopsis xlink:href="button">
         <db:type xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:type>
         <db:methodname>button</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="buttons">
         <db:type xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButtons</db:type>
         <db:methodname>buttons</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="device">
         <db:type xlink:href="qtabletevent.html#TabletDevice-enum">TabletDevice</db:type>
         <db:methodname>device</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="globalPos">
         <db:type xlink:href="qtcore/qpoint.html">QPoint</db:type>
         <db:methodname>globalPos</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="globalPosF">
         <db:type xlink:href="qtcore/qpointf.html">QPointF</db:type>
         <db:methodname>globalPosF</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="globalX">
         <db:type>int</db:type>
         <db:methodname>globalX</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="globalY">
         <db:type>int</db:type>
         <db:methodname>globalY</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="hiResGlobalX">
         <db:type xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:type>
         <db:methodname>hiResGlobalX</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="hiResGlobalY">
         <db:type xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:type>
         <db:methodname>hiResGlobalY</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="pointerType">
         <db:type xlink:href="qtabletevent.html#PointerType-enum">PointerType</db:type>
         <db:methodname>pointerType</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="pos">
         <db:type xlink:href="qtcore/qpoint.html">QPoint</db:type>
         <db:methodname>pos</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="posF">
         <db:type xlink:href="qtcore/qpointf.html">QPointF</db:type>
         <db:methodname>posF</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="pressure">
         <db:type xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:type>
         <db:methodname>pressure</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="rotation">
         <db:type xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:type>
         <db:methodname>rotation</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="tangentialPressure">
         <db:type xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:type>
         <db:methodname>tangentialPressure</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="uniqueId">
         <db:type xlink:href="qtcore/qtglobal.html#qint64-typedef">qint64</db:type>
         <db:methodname>uniqueId</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="x">
         <db:type>int</db:type>
         <db:methodname>x</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="xTilt">
         <db:type>int</db:type>
         <db:methodname>xTilt</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="y">
         <db:type>int</db:type>
         <db:methodname>y</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="yTilt">
         <db:type>int</db:type>
         <db:methodname>yTilt</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:methodsynopsis xlink:href="z">
         <db:type>int</db:type>
         <db:methodname>z</db:methodname>
         <db:void/>
         <db:modifier>const</db:modifier>
      </db:methodsynopsis>
      <db:constructorsynopsis xlink:href="#QTabletEvent-2">
         <db:modifier>(obsolete)</db:modifier>
         <db:methodname>QTabletEvent</db:methodname>
         <db:void role="parameters"/>
         <db:exceptionname role="parameters">( Type  type , const
                                     QPointF  &amp;  pos ,
                                const  QPointF  &amp; 
                                    globalPos ,  int  device ,  int  pointerType ,
                                     qreal  pressure ,
                                     int  xTilt ,
                                     int  yTilt ,
                                     qreal  tangentialPressure ,
                                     qreal  rotation ,
                                     int  z ,
                                     Qt::KeyboardModifiers 
                                    keyState ,  qint64 
                                uniqueID )</db:exceptionname>
      </db:constructorsynopsis>
      <db:constructorsynopsis xlink:href="#QTabletEvent-2">
         <db:modifier>(compat)</db:modifier>
         <db:methodname>QTabletEvent</db:methodname>
         <db:void role="parameters"/>
         <db:exceptionname role="parameters">( Type  type , const
                                     QPointF  &amp;  pos ,
                                const  QPointF  &amp; 
                                    globalPos ,  int  device ,  int  pointerType ,
                                     qreal  pressure ,
                                     int  xTilt ,
                                     int  yTilt ,
                                     qreal  tangentialPressure ,
                                     qreal  rotation ,
                                     int  z ,
                                     Qt::KeyboardModifiers 
                                    keyState ,  qint64 
                                uniqueID )</db:exceptionname>
      </db:constructorsynopsis>
      <db:enumsynopsis xlink:href="#PointerType-enum">
         <db:enumname>PointerType</db:enumname>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::UnknownPointer</db:enumidentifier>
            <db:enumvalue>0</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::Pen</db:enumidentifier>
            <db:enumvalue>1</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::Cursor</db:enumidentifier>
            <db:enumvalue>2</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::Eraser</db:enumidentifier>
            <db:enumvalue>3</db:enumvalue>
         </db:enumitem>
      </db:enumsynopsis>
      <db:enumsynopsis xlink:href="#TabletDevice-enum">
         <db:enumname>TabletDevice</db:enumname>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::NoDevice</db:enumidentifier>
            <db:enumvalue>0</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::Puck</db:enumidentifier>
            <db:enumvalue>1</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::Stylus</db:enumidentifier>
            <db:enumvalue>2</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::Airbrush</db:enumidentifier>
            <db:enumvalue>3</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::FourDMouse</db:enumidentifier>
            <db:enumvalue>4</db:enumvalue>
         </db:enumitem>
         <db:enumitem>
            <db:enumidentifier>QTabletEvent::RotationStylus</db:enumidentifier>
            <db:enumvalue>6</db:enumvalue>
         </db:enumitem>
      </db:enumsynopsis>
   </db:classsynopsis>
   <db:section xml:id="details">
      <db:title>Detailed Description</db:title>
      <db:para>The <db:code><db:link xlink:href="qtabletevent.html">QTabletEvent</db:link></db:code>
                                    class contains parameters that describe a Tablet event.</db:para>
      <db:para>
         <db:emphasis>Tablet events</db:emphasis> are generated from tablet
                                    peripherals such as Wacom tablets and various other brands, and
                                    electromagnetic stylus devices included with some types of
                                    tablet computers. (It is not the same as <db:code><db:link xlink:href="qtouchevent.html">QTouchEvent</db:link></db:code> which a
                                    touchscreen generates, even when a passive stylus is used on a
                                    touchscreen.)</db:para>
      <db:para>Tablet events are similar to mouse events; for example, the
                                        <db:code><db:link xlink:href="qtabletevent.html#x">x</db:link>()</db:code>, <db:code><db:link xlink:href="qtabletevent.html#y">y</db:link>()</db:code>, <db:code><db:link xlink:href="qtabletevent.html#pos">pos</db:link>()</db:code>, <db:code><db:link xlink:href="qtabletevent.html#globalX">globalX</db:link>()</db:code>, <db:code><db:link xlink:href="qtabletevent.html#globalY">globalY</db:link>()</db:code>, and
                                        <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code> accessors provide the cursor position,
                                    and you can see which <db:code><db:link xlink:href="qtabletevent.html#buttons">buttons</db:link>()</db:code> are pressed (pressing the stylus tip
                                    against the tablet surface is equivalent to a left mouse
                                    button). But tablet events also pass through some extra
                                    information that the tablet device driver provides; for example,
                                    you might want to do subpixel rendering with higher resolution
                                    coordinates (<db:code><db:link xlink:href="qtabletevent.html#hiResGlobalX">hiResGlobalX</db:link>()</db:code> and <db:code><db:link xlink:href="qtabletevent.html#hiResGlobalY">hiResGlobalY</db:link>()</db:code>), adjust color brightness based on the
                                        <db:code><db:link xlink:href="qtabletevent.html#pressure">pressure</db:link>()</db:code> of the tool against the tablet surface, use
                                    different brushes depending on the type of tool in use (<db:code><db:link xlink:href="qtabletevent.html#device">device</db:link>()</db:code>), modulate
                                    the brush shape in some way according to the X-axis and Y-axis
                                    tilt of the tool with respect to the tablet surface (<db:code><db:link xlink:href="qtabletevent.html#xTilt">xTilt</db:link>()</db:code> and <db:code><db:link xlink:href="qtabletevent.html#yTilt">yTilt</db:link>()</db:code>), and use a
                                    virtual eraser instead of a brush if the user switches to the
                                    other end of a double-ended stylus (<db:code><db:link xlink:href="qtabletevent.html#pointerType">pointerType</db:link>()</db:code>).</db:para>
      <db:para>Every event contains an accept flag that indicates whether
                                    the receiver wants the event. You should call <db:code><db:link xlink:href="qtcore/qevent.html#accept">QTabletEvent::accept</db:link>()</db:code> if you handle the tablet
                                    event; otherwise it will be sent to the parent widget. The
                                    exception are <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletEnterProximity</db:link> and <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletLeaveProximity</db:link> events: these are only sent
                                    to <db:code><db:link xlink:href="qtwidgets/qapplication.html">QApplication</db:link></db:code> and do not check whether or not they
                                    are accepted.</db:para>
      <db:para>The <db:code><db:link xlink:href="qtwidgets/qwidget.html#enabled-prop">QWidget::setEnabled</db:link>()</db:code> function can be used to
                                    enable or disable mouse, tablet and keyboard events for a
                                    widget.</db:para>
      <db:para>The event handler <db:code><db:link xlink:href="qtwidgets/qwidget.html#tabletEvent">QWidget::tabletEvent</db:link>()</db:code> receives <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletPress</db:link>,
                                        <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletRelease</db:link> and <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletMove</db:link>
                                    events. Qt will first send a tablet event, then if it is not
                                    accepted by any widget, it will send a mouse event. This allows
                                    users of applications that are not designed for tablets to use a
                                    tablet like a mouse. However high-resolution drawing
                                    applications should handle the tablet events, because they can
                                    occur at a higher frequency, which is a benefit for smooth and
                                    accurate drawing. If the tablet events are rejected, the
                                    synthetic mouse events may be compressed for
                                    efficiency.</db:para>
      <db:para>New in Qt 5.4: <db:code><db:link xlink:href="qtabletevent.html">QTabletEvent</db:link></db:code> includes all information available
                                    from the device, including <db:code><db:link xlink:href="qtabletevent.html#buttons">QTabletEvent::buttons</db:link>()</db:code>. Previously it was not
                                    possible to accept all tablet events and also know which stylus
                                    buttons were pressed.</db:para>
      <db:para>Note that pressing the stylus button while the stylus hovers
                                    over the tablet will generate a button press on some types of
                                    tablets, while on other types it will be necessary to press the
                                    stylus against the tablet surface in order to register the
                                    simultaneous stylus button press.</db:para>
      <db:section xml:id="notes-for-x11-users">
         <db:title>Notes for X11 Users</db:title>
         <db:para>If the tablet is configured in xorg.conf to use the Wacom
                                    driver, there will be separate XInput "devices" for the stylus,
                                    eraser, and (optionally) cursor and touchpad. Qt recognizes
                                    these by their names. Otherwise, if the tablet is configured to
                                    use the evdev driver, there will be only one device and
                                    applications may not be able to distinguish the stylus from the
                                    eraser.</db:para>
      </db:section>
   </db:section>
   <db:section xml:id="types">
      <db:title>Member Type Documentation</db:title>
      <db:section xml:id="PointerType-enum">
         <db:title>enum QTabletEvent::PointerType</db:title>
         <db:para>This enum defines what type of point is generating the
                                    event.</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:th>
                     <db:para>Constant</db:para>
                  </db:th>
                  <db:th>
                     <db:para>Value</db:para>
                  </db:th>
                  <db:th>
                     <db:para>Description</db:para>
                  </db:th>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::UnknownPointer</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>0</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>An unknown
                                                  device.</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::Pen</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>1</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>Tip end of a stylus-like
                                                  device (the narrow end of the pen).</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::Cursor</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>2</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>Any puck-like
                                                  device.</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::Eraser</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>3</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>Eraser end of a
                                                  stylus-like device (the broad end of the
                                                  pen).</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pointerType">pointerType</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="TabletDevice-enum">
         <db:title>enum QTabletEvent::TabletDevice</db:title>
         <db:para>This enum defines what type of device is generating the
                                    event.</db:para>
         <db:informaltable>
            <db:tbody>
               <db:tr>
                  <db:th>
                     <db:para>Constant</db:para>
                  </db:th>
                  <db:th>
                     <db:para>Value</db:para>
                  </db:th>
                  <db:th>
                     <db:para>Description</db:para>
                  </db:th>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::NoDevice</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>0</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>No device, or an unknown
                                                  device.</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::Puck</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>1</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>A Puck (a device that is
                                                  similar to a flat mouse with a transparent circle
                                                  with cross-hairs).</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::Stylus</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>2</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>A Stylus.</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::Airbrush</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>3</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>An airbrush</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::FourDMouse</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>4</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>A 4D Mouse.</db:para>
                  </db:td>
               </db:tr>
               <db:tr>
                  <db:td>
                     <db:para>
                        <db:code>QTabletEvent::RotationStylus</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>
                        <db:code>6</db:code>
                     </db:para>
                  </db:td>
                  <db:td>
                     <db:para>A special stylus that also
                                                  knows about rotation (a 6D stylus).</db:para>
                  </db:td>
               </db:tr>
            </db:tbody>
         </db:informaltable>
         <db:para>This enum was introduced or modified in Qt 4.1.</db:para>
      </db:section>
   </db:section>
   <db:section xml:id="func">
      <db:title>Member Function Documentation</db:title>
      <db:section xml:id="QTabletEvent">
         <db:title>QTabletEvent::QTabletEvent(<db:link xlink:href="qtcore/qevent.html#Type-enum">Type</db:link><db:link xlink:href="qtcore/qpointf.html">QPointF</db:link><db:link xlink:href="qtcore/qpointf.html">QPointF</db:link><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link><db:link xlink:href="qtcore/qt.html#KeyboardModifier-enum">Qt::KeyboardModifiers</db:link><db:link xlink:href="qtcore/qtglobal.html#qint64-typedef">qint64</db:link><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:link><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButtons</db:link></db:title>
         <db:para>Construct a tablet event of the given
                                    <db:emphasis>type</db:emphasis>.</db:para>
         <db:para>The <db:emphasis>pos</db:emphasis> parameter indicates where the event
                                    occurred in the widget; <db:emphasis>globalPos</db:emphasis> is the
                                    corresponding position in absolute coordinates.</db:para>
         <db:para>
            <db:emphasis>pressure</db:emphasis> contains the pressure exerted on
                                    the <db:emphasis>device</db:emphasis>.</db:para>
         <db:para>
            <db:emphasis>pointerType</db:emphasis> describes the type of pen that
                                    is being used.</db:para>
         <db:para>
            <db:emphasis>xTilt</db:emphasis> and <db:emphasis>yTilt</db:emphasis> contain
                                    the device's degree of tilt from the x and y axes
                                    respectively.</db:para>
         <db:para>
            <db:emphasis>keyState</db:emphasis> specifies which keyboard modifiers
                                    are pressed (e.g., <db:emphasis role="bold">Ctrl</db:emphasis>).</db:para>
         <db:para>The <db:emphasis>uniqueID</db:emphasis> parameter contains the unique
                                    ID for the current device.</db:para>
         <db:para>The <db:emphasis>z</db:emphasis> parameter contains the coordinate of
                                    the device on the tablet, this is usually given by a wheel on 4D
                                    mouse. If the device does not support a Z-axis, pass zero
                                    here.</db:para>
         <db:para>The <db:emphasis>tangentialPressure</db:emphasis> parameter contins
                                    the tangential pressure of an air brush. If the device does not
                                    support tangential pressure, pass 0 here.</db:para>
         <db:para>
            <db:emphasis>rotation</db:emphasis> contains the device's rotation in
                                    degrees. 4D mice and the Wacom Art Pen support rotation. If the
                                    device does not support rotation, pass 0 here.</db:para>
         <db:para>The <db:emphasis>button</db:emphasis> that caused the event is given
                                    as a value from the <db:code><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:link></db:code> enum. If the event
                                        <db:emphasis>type</db:emphasis> is not <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletPress</db:link> or
                                        <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletRelease</db:link>, the appropriate button for this
                                    event is <db:code><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::NoButton</db:link></db:code>.</db:para>
         <db:para>
            <db:emphasis>buttons</db:emphasis> is the state of all buttons at the
                                    time of the event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pos">pos</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#device">device</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pressure">pressure</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#xTilt">xTilt</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#yTilt">yTilt</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#uniqueId">uniqueId</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#rotation">rotation</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#tangentialPressure">tangentialPressure</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#z">z</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="button">
         <db:title><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:link></db:title>
         <db:para>Returns the button that caused the event.</db:para>
         <db:para>Note that the returned value is always <db:code><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::NoButton</db:link></db:code>
                                    for <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletMove</db:link>, <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletEnterProximity</db:link> and <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletLeaveProximity</db:link> events.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#buttons">buttons</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:link></db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="buttons">
         <db:title><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButtons</db:link></db:title>
         <db:para>Returns the button state when the event was generated. The
                                    button state is a combination of buttons from the <db:code><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:link></db:code> enum using the OR operator. For
                                        <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletMove</db:link> events, this is all buttons that are
                                    pressed down. For <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletPress</db:link> events this includes the button that
                                    caused the event. For <db:link xlink:href="qtcore/qevent.html#Type-enum">TabletRelease</db:link>
                                    events this excludes the button that caused the event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#button">button</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtcore/qt.html#MouseButton-enum">Qt::MouseButton</db:link></db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="device">
         <db:title><db:link xlink:href="qtabletevent.html#TabletDevice-enum">TabletDevice</db:link></db:title>
         <db:para>Returns the type of device that generated the
                                    event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:link xlink:href="qtabletevent.html#TabletDevice-enum">TabletDevice</db:link>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="globalPos">
         <db:title><db:link xlink:href="qtcore/qpoint.html">QPoint</db:link></db:title>
         <db:para>Returns the global position of the device <db:emphasis>at the
                                        time of the event</db:emphasis>. This is important on
                                    asynchronous windows systems like X11; whenever you move your
                                    widgets around in response to mouse events, globalPos() can
                                    differ significantly from the current position <db:code><db:link xlink:href="qcursor.html#pos">QCursor::pos</db:link>()</db:code>.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalX">globalX</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalY">globalY</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent-compat.html#hiResGlobalPos">hiResGlobalPos</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="globalPosF">
         <db:title>const <db:link xlink:href="qtcore/qpointf.html">QPointF</db:link></db:title>
         <db:para>Returns the global position of the device <db:emphasis>at the
                                        time of the event</db:emphasis>. This is important on
                                    asynchronous windows systems like X11; whenever you move your
                                    widgets around in response to mouse events, globalPosF() can
                                    differ significantly from the current position <db:code><db:link xlink:href="qcursor.html#pos">QCursor::pos</db:link>()</db:code>.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#posF">posF</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="globalX">
         <db:title>int QTabletEvent::globalX() const</db:title>
         <db:para>Returns the global x position of the mouse pointer at the
                                    time of the event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalY">globalY</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#hiResGlobalX">hiResGlobalX</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="globalY">
         <db:title>int QTabletEvent::globalY() const</db:title>
         <db:para>Returns the global y position of the tablet device at the
                                    time of the event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalX">globalX</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#hiResGlobalY">hiResGlobalY</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="hiResGlobalX">
         <db:title><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link></db:title>
         <db:para>The high precision x position of the tablet device.</db:para>
      </db:section>
      <db:section xml:id="hiResGlobalY">
         <db:title><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link></db:title>
         <db:para>The high precision y position of the tablet device.</db:para>
      </db:section>
      <db:section xml:id="pointerType">
         <db:title><db:link xlink:href="qtabletevent.html#PointerType-enum">PointerType</db:link></db:title>
         <db:para>Returns the type of point that generated the event.</db:para>
      </db:section>
      <db:section xml:id="pos">
         <db:title><db:link xlink:href="qtcore/qpoint.html">QPoint</db:link></db:title>
         <db:para>Returns the position of the device, relative to the widget
                                    that received the event.</db:para>
         <db:para>If you move widgets around in response to mouse events, use
                                        <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code> instead of this function.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#x">x</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#y">y</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="posF">
         <db:title>const <db:link xlink:href="qtcore/qpointf.html">QPointF</db:link></db:title>
         <db:para>Returns the position of the device, relative to the widget
                                    that received the event.</db:para>
         <db:para>If you move widgets around in response to mouse events, use
                                        <db:code><db:link xlink:href="qtabletevent.html#globalPosF">globalPosF</db:link>()</db:code> instead of this function.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#globalPosF">globalPosF</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="pressure">
         <db:title><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link></db:title>
         <db:para>Returns the pressure for the device. 0.0 indicates that the
                                    stylus is not on the tablet, 1.0 indicates the maximum amount of
                                    pressure for the stylus.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#tangentialPressure">tangentialPressure</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="rotation">
         <db:title><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link></db:title>
         <db:para>Returns the rotation of the current device in degress. This
                                    is usually given by a 4D Mouse. If the device does not support
                                    rotation this value is always 0.0.</db:para>
      </db:section>
      <db:section xml:id="tangentialPressure">
         <db:title><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link></db:title>
         <db:para>Returns the tangential pressure for the device. This is
                                    typically given by a finger wheel on an airbrush tool. The range
                                    is from -1.0 to 1.0. 0.0 indicates a neutral position. Current
                                    airbrushes can only move in the positive direction from the
                                    neutrual position. If the device does not support tangential
                                    pressure, this value is always 0.0.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pressure">pressure</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="uniqueId">
         <db:title><db:link xlink:href="qtcore/qtglobal.html#qint64-typedef">qint64</db:link></db:title>
         <db:para>Returns a unique ID for the current device, making it
                                    possible to differentiate between multiple devices being used at
                                    the same time on the tablet.</db:para>
         <db:para>Support of this feature is dependent on the tablet.</db:para>
         <db:para>Values for the same device may vary from OS to OS.</db:para>
         <db:para>Later versions of the Wacom driver for Linux will now report
                                    the ID information. If you have a tablet that supports unique ID
                                    and are not getting the information on Linux, consider upgrading
                                    your driver.</db:para>
         <db:para>As of Qt 4.2, the unique ID is the same regardless of the
                                    orientation of the pen. Earlier versions would report a
                                    different value when using the eraser-end versus the pen-end of
                                    the stylus on some OS's.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pointerType">pointerType</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="x">
         <db:title>int QTabletEvent::x() const</db:title>
         <db:para>Returns the x position of the device, relative to the widget
                                    that received the event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#y">y</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pos">pos</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="xTilt">
         <db:title>int QTabletEvent::xTilt() const</db:title>
         <db:para>Returns the angle between the device (a pen, for example)
                                    and the perpendicular in the direction of the x axis. Positive
                                    values are towards the tablet's physical right. The angle is in
                                    the range -60 to +60 degrees.</db:para>
         <db:informalfigure>
            <db:mediaobject>
               <db:imageobject>
                  <db:imagedata fileref="images/qtabletevent-tilt.png"/>
               </db:imageobject>
            </db:mediaobject>
         </db:informalfigure>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#yTilt">yTilt</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="y">
         <db:title>int QTabletEvent::y() const</db:title>
         <db:para>Returns the y position of the device, relative to the widget
                                    that received the event.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#x">x</db:link>()</db:code>
               </db:member>
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pos">pos</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="yTilt">
         <db:title>int QTabletEvent::yTilt() const</db:title>
         <db:para>Returns the angle between the device (a pen, for example)
                                    and the perpendicular in the direction of the y axis. Positive
                                    values are towards the bottom of the tablet. The angle is within
                                    the range -60 to +60 degrees.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#xTilt">xTilt</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
      <db:section xml:id="z">
         <db:title>int QTabletEvent::z() const</db:title>
         <db:para>Returns the z position of the device. Typically this is
                                    represented by a wheel on a 4D Mouse. If the device does not
                                    support a Z-axis, this value is always zero. This is
                                        <db:emphasis role="bold">not</db:emphasis> the same as pressure.</db:para>
         <db:section>
            <db:title>See Also</db:title>
            <db:simplelist type="vert">
               <db:member>
                  <db:code><db:link xlink:href="qtabletevent.html#pressure">pressure</db:link>()</db:code>
               </db:member>
            </db:simplelist>
         </db:section>
      </db:section>
   </db:section>
   <db:section>
      <db:title>Obsolete Members</db:title>
      <db:section xml:id="obsolete_memfunc">
         <db:title>Member Function Documentation</db:title>
         <db:section xml:id="QTabletEvent-2">
            <db:title>QTabletEvent::QTabletEvent(<db:link xlink:href="qtcore/qevent.html#Type-enum">Type</db:link><db:link xlink:href="qtcore/qpointf.html">QPointF</db:link><db:link xlink:href="qtcore/qpointf.html">QPointF</db:link><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link><db:link xlink:href="qtcore/qtglobal.html#qreal-typedef">qreal</db:link><db:link xlink:href="qtcore/qt.html#KeyboardModifier-enum">Qt::KeyboardModifiers</db:link><db:link xlink:href="qtcore/qtglobal.html#qint64-typedef">qint64</db:link></db:title>
            <db:para>Construct a tablet event of the given
                                <db:emphasis>type</db:emphasis>.</db:para>
            <db:para>The <db:emphasis>pos</db:emphasis> parameter indicates where the event
                                occurred in the widget; <db:emphasis>globalPos</db:emphasis> is the
                                corresponding position in absolute coordinates.</db:para>
            <db:para>
               <db:emphasis>pressure</db:emphasis> contains the pressure exerted on the
                                    <db:emphasis>device</db:emphasis>.</db:para>
            <db:para>
               <db:emphasis>pointerType</db:emphasis> describes the type of pen that is
                                being used.</db:para>
            <db:para>
               <db:emphasis>xTilt</db:emphasis> and <db:emphasis>yTilt</db:emphasis> contain the
                                device's degree of tilt from the x and y axes respectively.</db:para>
            <db:para>
               <db:emphasis>keyState</db:emphasis> specifies which keyboard modifiers are
                                pressed (e.g., <db:emphasis role="bold">Ctrl</db:emphasis>).</db:para>
            <db:para>The <db:emphasis>uniqueID</db:emphasis> parameter contains the unique ID
                                for the current device.</db:para>
            <db:para>The <db:emphasis>z</db:emphasis> parameter contains the coordinate of the
                                device on the tablet, this is usually given by a wheel on 4D mouse.
                                If the device does not support a Z-axis, pass zero here.</db:para>
            <db:para>The <db:emphasis>tangentialPressure</db:emphasis> parameter contins the
                                tangential pressure of an air brush. If the device does not support
                                tangential pressure, pass 0 here.</db:para>
            <db:para>
               <db:emphasis>rotation</db:emphasis> contains the device's rotation in
                                degrees. 4D mice support rotation. If the device does not support
                                rotation, pass 0 here.</db:para>
            <db:section>
               <db:title>See Also</db:title>
               <db:simplelist type="vert">
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#pos">pos</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#device">device</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#pressure">pressure</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#xTilt">xTilt</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#yTilt">yTilt</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#uniqueId">uniqueId</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#rotation">rotation</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#tangentialPressure">tangentialPressure</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#z">z</db:link>()</db:code>
                  </db:member>
               </db:simplelist>
            </db:section>
         </db:section>
      </db:section>
   </db:section>
   <db:section>
      <db:title>Compatibility Members</db:title>
      <db:section xml:id="compat_memfunc">
         <db:title>Member Function Documentation</db:title>
         <db:section xml:id="hiResGlobalPos">
            <db:title>const <db:link xlink:href="qtcore/qpointf.html">QPointF</db:link></db:title>
            <db:para>The high precision coordinates delivered from the tablet
                                expressed. Sub pixeling information is in the fractional part of the
                                    <db:code><db:link xlink:href="qtcore/qpointf.html">QPointF</db:link></db:code>.</db:para>
            <db:section>
               <db:title>See Also</db:title>
               <db:simplelist type="vert">
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#globalPos">globalPos</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#hiResGlobalX">hiResGlobalX</db:link>()</db:code>
                  </db:member>
                  <db:member>
                     <db:code><db:link xlink:href="qtabletevent.html#hiResGlobalY">hiResGlobalY</db:link>()</db:code>
                  </db:member>
               </db:simplelist>
            </db:section>
         </db:section>
      </db:section>
   </db:section>
</db:article>
