<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="5.1-extension qtdoctools-1.0"
            xml:lang="en">
   <db:title>Special Content</db:title>
   <db:para>The document contents commands identify parts of the
                                    documentation, parts with a special rendering, conceptual
                                    meaning or function.</db:para>
   <db:section xml:id="abstract">
      <db:title>\abstract</db:title>
      <db:para>The \abstract and \endabstract commands delimit a document's
                                    abstract section.</db:para>
      <db:para>The abstract section is rendered as an indented italicized
                                    paragraph.</db:para>
      <db:warning>
         <db:para> The <db:emphasis role="bold">\abstract</db:emphasis> and
                                        <db:emphasis role="bold">\endabstract</db:emphasis> commands have not been
                                    implemented. The abstract section is rendered as a regular HTML
                                    paragraph.</db:para>
      </db:warning>
   </db:section>
   <db:section xml:id="quotation">
      <db:title>\quotation</db:title>
      <db:para>The \quotation and \endquotation commands delimit a long
                                    quotation.</db:para>
      <db:para>The text in the delimited block is surrounded by
                                        <db:emphasis role="bold">&lt;blockquote&gt;</db:emphasis> and
                                        <db:emphasis role="bold">&lt;/blockquote&gt;</db:emphasis> in the html output,
                                    e.g.:</db:para>
      <db:programlisting>/*! Although the prospect of a
                                    significantly broader market is good news for Firstlogic, the notion also posed some
                                        challenges. Dave
                                        Dobson, director of
                                    technology for the La
                                        Crosse,
                                        Wisconsin-based
                                        company, said:
                                    \quotation As our solutions were being adopted into new environments, we saw an escalating need
                                        for easier
                                    integration with a wider range of enterprise
                                        applications.
                                    \endquotation */</db:programlisting>
      <db:para>The text in the <db:emphasis role="bold">\quotation</db:emphasis> block will
                                    appear in the generated HTML as:</db:para>
      <db:programlisting>&lt;blockquote&gt;&lt;p&gt;As our solutions were being
                                    adopted into new
                                        environments, we saw
                                    an escalating need for
                                    easier integration with a wider range of enterprise
                                        applications.&lt;/p&gt;&lt;/blockquote&gt;</db:programlisting>
      <db:para>The built-in style sheet for most browsers will render the
                                    contents of the &lt;blockquote&gt; tag with left and right
                                    indentations. The example above would be rendered as:</db:para>
      <db:blockquote>
         <db:para>As our solutions were being adopted into
                                        new environments, we saw an escalating need for easier
                                        integration with a wider range of enterprise
                                        applications.</db:para>
      </db:blockquote>
      <db:para>But you can redefine the <db:emphasis role="bold">&lt;blockquote&gt;</db:emphasis>
                                    tag in your style.css file.</db:para>
   </db:section>
   <db:section xml:id="footnote">
      <db:title>\footnote</db:title>
      <db:para>The \footnote and \endfootnote commands delimit a
                                    footnote.</db:para>
      <db:para>The footnote is rendered at the bottom of the page.</db:para>
      <db:warning>
         <db:para> The <db:emphasis role="bold">\footnote</db:emphasis> and
                                        <db:emphasis role="bold">\endfootnote</db:emphasis> commands have not been
                                    implemented. The footnote is rendered as a regular HTML
                                    paragraph.</db:para>
      </db:warning>
   </db:section>
   <db:section xml:id="note">
      <db:title>\note</db:title>
      <db:para>The \note command defines a new paragraph preceded by
                                    "Note:" in bold.</db:para>
   </db:section>
   <db:section xml:id="tableofcontents">
      <db:title>\tableofcontents</db:title>
      <db:para>The \tableofcontents command has been disabled because QDoc
                                    now generates a table of contents automatically.</db:para>
      <db:para>The automatically generated table of contents appears in the
                                    upper righthand corner of the page.</db:para>
   </db:section>
   <db:section xml:id="brief">
      <db:title>\brief</db:title>
      <db:para>The \brief command introduces a one-sentence description of
                                    a class, namespace, header file, property, or variable.</db:para>
      <db:para>The brief text is used to introduce the documentation of the
                                    associated object, and in lists generated using the <db:link xlink:href="12-0-qdoc-commands-miscellaneous.db#generatelist-command">\generatelist</db:link> command and the <db:link xlink:href="12-0-qdoc-commands-miscellaneous.db#annotatedlist-command">\annotatedlist</db:link> command.</db:para>
      <db:para>The \brief command can be used in two significant different
                                    ways: <db:link xlink:href="11-qdoc-commands-specialcontent.db#brief-class">One
                                        for classes, namespaces and header files</db:link>, and
                                        <db:link xlink:href="11-qdoc-commands-specialcontent.db#brief-property">one for properties and variables</db:link>.</db:para>
      <db:para>When the \brief
                                    command is used to describe a property or a variable, the brief
                                    text must be a sentence fragment starting with "whether" (for a
                                    boolean property or variable) or starting with "the" (for any
                                    other property or variable).</db:para>
      <db:para>For example the boolean <db:code><db:link xlink:href="qwidget.db#isWindow">QWidget::isWindow</db:link></db:code> property:</db:para>
      <db:programlisting>/*! \property QWidget::isActiveWindow \brief Whether this widget's window is the active window The active
                                        window is the window that contains the widget that has
                                        keyboard focus. When popup windows are visible, this
                                        property is \c true for both the active window \e and the
                                        popup. \sa activateWindow(), QApplication::activeWindow() *
                                        / </db:programlisting>
      <db:para>and the <db:code><db:link xlink:href="qwidget.db#geometry-prop">QWidget::geometry</db:link></db:code> property</db:para>
      <db:programlisting>/*! \property QWidget::geometry \brief The geometry of the widget
                                    relative to its parent and excluding the window frame When
                                    changing the geometry,
                                    the widget,if visible, receives a move event
                                    (moveEvent()) and/or a
                                    resize event (resizeEvent()) immediately.... \sa frameGeometry(), rect(),...*/</db:programlisting>
      <db:para>QDoc renders this as:</db:para>
      <db:blockquote>
         <db:bridgehead renderas="sect3">geometry : QRect</db:bridgehead>
         <db:para>This property holds the geometry of the widget relative
                                        to its parent and excluding the window frame.</db:para>
         <db:para>...</db:para>
         <db:para>Access functions:</db:para>
         <db:itemizedlist>
            <db:listitem>
               <db:para>
                  <db:emphasis role="bold">const <db:code><db:link xlink:href="qrect.db">QRect</db:link></db:code> &amp; geometry ()
                                            const</db:emphasis>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:emphasis role="bold">void setGeometry ( int x, int y, int w, int
                                                h )</db:emphasis>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>
                  <db:emphasis role="bold">void setGeometry ( const <db:code><db:link xlink:href="qrect.db">QRect</db:link></db:code> &amp;
                                                )</db:emphasis>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
         <db:para>See also <db:link xlink:href="qwidget.db#frameGeometry-prop">frameGeometry()</db:link>, <db:link xlink:href="qwidget.db#rect-prop">rect()</db:link>,
                                        ...</db:para>
      </db:blockquote>
      <db:para>When the \brief command
                                    is used to describe a class, we recommend using a complete
                                    sentence like this:</db:para>
      <db:programlisting> The &lt;classname&gt;class is|provides|contains|specifies...</db:programlisting>
      <db:warning>
         <db:para> Do not repeat your detailed
                                    description with the same sentence as the brief statement will
                                    be the first paragraph of the detailed description.</db:para>
      </db:warning>
      <db:programlisting>/*! \class PreviewWindow \brief The PreviewWindow
                                        class is a custom
                                    widget displaying the names of its currently set window flags in
                                    a read-only text
                                        editor. The
                                    PreviewWindow class
                                    inherits QWidget. The widget displays the names of its window
                                    flags set with the setWindowFlags() function. It is also provided with a
                                        QPushButton that closes the
                                        window.... \sa QWidget*/</db:programlisting>
      <db:para>QDoc renders this as:</db:para>
      <db:blockquote>
         <db:bridgehead renderas="sect1">PreviewWindow Class Reference</db:bridgehead>
         <db:para>The PreviewWindow class is a custom widget displaying
                                        the names of its currently set window flags in a read-only
                                        text editor. <db:link xlink:href="13-qdoc-commands-topics.db#preview-window">More...</db:link>
         </db:para>
         <db:bridgehead renderas="sect3">Properties</db:bridgehead>
         <db:itemizedlist>
            <db:listitem>
               <db:para>52 properties inherited from <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>1 property inherited from <db:code><db:link xlink:href="qobject.db">QObject</db:link></db:code>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
         <db:bridgehead renderas="sect3">Public Functions</db:bridgehead>
         <db:itemizedlist>
            <db:listitem>
               <db:para>
                  <db:link xlink:href="13-qdoc-commands-topics.db#constructor">PreviewWindow</db:link>
                  <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
                                            *parent = 0)</db:para>
            </db:listitem>
            <db:listitem>
               <db:para>void <db:link xlink:href="13-qdoc-commands-topics.db#function">setWindowFlags</db:link>
                  <db:code><db:link xlink:href="qt.db#WindowType-enum">Qt::WindowFlags</db:link></db:code> flags)</db:para>
            </db:listitem>
         </db:itemizedlist>
         <db:itemizedlist>
            <db:listitem>
               <db:para>183 public functions inherited from <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>28 public functions inherited from <db:code><db:link xlink:href="qobject.db">QObject</db:link></db:code>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
         <db:bridgehead renderas="sect3">Public Slots</db:bridgehead>
         <db:itemizedlist>
            <db:listitem>
               <db:para>17 public slots inherited from <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>1 public slot inherited from <db:code><db:link xlink:href="qobject.db">QObject</db:link></db:code>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
         <db:bridgehead renderas="sect3">Additional Inherited Members</db:bridgehead>
         <db:itemizedlist>
            <db:listitem>
               <db:para>1 signal inherited from <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>1 signal inherited from <db:code><db:link xlink:href="qobject.db">QObject</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>4 static public members inherited from <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>4 static public members inherited from <db:code><db:link xlink:href="qobject.db">QObject</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>39 protected functions inherited from <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>
               </db:para>
            </db:listitem>
            <db:listitem>
               <db:para>7 protected functions inherited from <db:code><db:link xlink:href="qobject.db">QObject</db:link></db:code>
               </db:para>
            </db:listitem>
         </db:itemizedlist>
         <db:bridgehead renderas="sect1">&#x97;</db:bridgehead>
         <db:bridgehead renderas="sect2">Detailed Description</db:bridgehead>
         <db:para>The PreviewWindow class is a custom widget displaying
                                        the names of its currently set window flags in a read-only
                                        text editor.</db:para>
         <db:para>The PreviewWindow class inherits <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>. The
                                        widget displays the names of its window flags set with the
                                            <db:link xlink:href="13-qdoc-commands-topics.db#function">setWindowFlags()</db:link> function. It is also provided
                                        with a <db:code><db:link xlink:href="qpushbutton.db">QPushButton</db:link></db:code> that closes the window.</db:para>
         <db:para>...</db:para>
         <db:para>See also <db:code><db:link xlink:href="qwidget.db">QWidget</db:link></db:code>.</db:para>
         <db:bridgehead renderas="sect1">&#x97;</db:bridgehead>
         <db:bridgehead renderas="sect2">Member Function Documentation</db:bridgehead>
         <db:bridgehead renderas="sect3">PreviewWindow(QWidget *parent = 0)</db:bridgehead>
         <db:para>Constructs a preview window widget with
                                            <db:emphasis>parent</db:emphasis>.</db:para>
         <db:bridgehead renderas="sect3">setWindowFlags(Qt::WindowFlags flags)</db:bridgehead>
         <db:para>Sets the widgets flags using the <db:code><db:link xlink:href="qwidget.db#windowFlags-prop">QWidget::setWindowFlags</db:link>()</db:code> function.</db:para>
         <db:para>Then runs through the available window flags, creating a
                                        text that contains the names of the flags that matches the
                                        flags parameter, displaying the text in the widgets text
                                        editor.</db:para>
      </db:blockquote>
      <db:para>Using \brief in a <db:link xlink:href="13-qdoc-commands-topics.db#namespace-command">\namespace</db:link>:</db:para>
      <db:programlisting>/*! \namespaceQt \brief The Qtnamespace contains
                                    miscellaneous identifiers used throughout the Qt library.*/</db:programlisting>
      <db:para>Using \brief in a <db:link xlink:href="13-qdoc-commands-topics.db#headerfile-command">\headerfile</db:link>:</db:para>
      <db:programlisting>/*! \headerfile &lt;QtGlobal&gt; \title Global Qt
                                    Declarations \brief The &lt;QtGlobal&gt; header file provides basic declarations
                                    and is included by all other Qt
                                        headers. \sa
                                        &lt;QtAlgorithms&gt;*/</db:programlisting>
      <db:para>See also <db:link xlink:href="13-qdoc-commands-topics.db#property-command">\property</db:link>, <db:link xlink:href="13-qdoc-commands-topics.db#class-command">\class</db:link>, <db:link xlink:href="13-qdoc-commands-topics.db#namespace-command">\namespace</db:link> and <db:link xlink:href="13-qdoc-commands-topics.db#headerfile-command">\headerfile</db:link>.</db:para>
   </db:section>
   <db:section xml:id="legalese">
      <db:title>\legalese</db:title>
      <db:para>The \legalese and \endlegalese commands delimit a license
                                    agreement.</db:para>
      <db:para>In the generated HTML, the delimited text is surrounded by a
                                        <db:emphasis role="bold">&lt;div class="LegaleseLeft"&gt;</db:emphasis> and
                                        <db:emphasis role="bold">&lt;/div&gt;</db:emphasis> tags.</db:para>
      <db:para>An example of a license agreement enclosed in \legalese and
                                    \endlegalese:</db:para>
      <db:programlisting>/*! \legalese Copyright
                                        1996 Daniel
                                        Dardailler.
                                    Permission to use,
                                        copy,
                                        modify,
                                        distribute, and sell
                                        this software
                                        for any purpose is
                                    hereby granted without fee, provided that the above copyright notice
                                    appear in all copies and that both that copyright notice and
                                        this permission
                                    notice appear in supporting documentation, and that the name of Daniel
                                    Dardailler not be used in
                                    advertising or publicity
                                    pertaining to distribution of the software without
                                        specific, written
                                    prior permission. Daniel
                                    Dardailler makes no representations about the suitability of
                                        this software
                                        for any
                                        purpose. It is
                                    provided "as is" without
                                    express or implied
                                        warranty.
                                    Modifications Copyright 1999 Matt Koss, under the same license as above. \endlegalese */</db:programlisting>
      <db:para>It will appear in the generated HTML as:</db:para>
      <db:programlisting>&lt;div class="LegaleseLeft"&gt;&lt;p&gt;Copyright 1996 Daniel Dardailler.&lt;/p&gt;&lt;p&gt;Permission to use, copy, modify, distribute, and sell this software for any purpose is hereby
                                    granted without fee,
                                    provided that the above copyright notice appear in all copies
                                    and that both that copyright notice and this permission notice appear in
                                    supporting documentation, and that the name of Daniel Dardailler
                                        not be used in
                                    advertising or publicity
                                    pertaining to distribution of the software without
                                        specific, written
                                    prior permission. Daniel
                                    Dardailler makes no representations about the suitability of
                                        this software
                                        for any
                                        purpose. It is
                                    provided "as is" without
                                    express or implied
                                        warranty.&lt;/p&gt;&lt;p&gt;Modifications Copyright
                                        1999 Matt
                                        Koss, under the same
                                    license as above.&lt;/p&gt;&lt;/div&gt;</db:programlisting>
      <db:para>If the \endlegalese command is omitted, QDoc will process
                                    the \legalese command but considers the rest of the
                                    documentation page as the license agreement.</db:para>
      <db:para>Ideally, the license text is located with the licensed
                                    code.</db:para>
      <db:para>Elsewhere, the documentation identified as
                                        <db:emphasis>\legalese</db:emphasis> command can be accumulated using
                                        <db:link xlink:href="12-0-qdoc-commands-miscellaneous.db#generatelist-command">\generatelist</db:link> with
                                        <db:code>legalese-command</db:code> as the argument.
                                    This is useful for generating an overview of the license
                                    agreements associated with the source code.</db:para>
   </db:section>
   <db:section xml:id="warning">
      <db:title>\warning</db:title>
      <db:para>The \warning command prepends "Warning:" to the command's
                                    argument, in bold font.</db:para>
      <db:programlisting>/*!Qt::HANDLE is a platform-specific handle type
                                        for system
                                        objects. This is
                                    equivalent to \c{void*} on Windows and Mac OS
                                        X, and to
                                        \c{unsignedlong} on X11. \warning Using this type is not portable.*/</db:programlisting>
      <db:para>QDoc renders this as:</db:para>
      <db:blockquote>
         <db:para>
            <db:code><db:link xlink:href="qt.db#HANDLE-typedef">Qt::HANDLE</db:link></db:code>
                                        is a platform-specific handle type for system objects. This
                                        is equivalent to <db:code>void *</db:code> on Windows
                                        and Mac OS X, and to <db:code>unsigned long</db:code> on
                                        X11.</db:para>
         <db:para>
            <db:emphasis role="bold">Warning:</db:emphasis> Using this type is not
                                        portable.</db:para>
      </db:blockquote>
   </db:section>
</db:article>
