<?xml version="1.0" encoding="UTF-8"?>
<db:article xmlns:db="http://docbook.org/ns/docbook"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            version="5.1"
            xml:lang="en">
   <db:title>color QML Basic Type</db:title>
   <db:para>an ARGB color value. <db:link xlink:href=""/> The <db:code>color</db:code> type refers to an
                                    ARGB color value. It can be specified in a number of
                                    ways:</db:para>
   <db:itemizedlist>
      <db:listitem>
         <db:para>By a <db:link xlink:href="http://www.w3.org/TR/SVG/types.html#ColorKeywords">SVG color name</db:link>, such as "red", "green" or
                                        "lightsteelblue".</db:para>
      </db:listitem>
      <db:listitem>
         <db:para>By a hexadecimal triplet or quad in the form
                                            <db:code>"#RRGGBB"</db:code> and
                                            <db:code>"#AARRGGBB"</db:code> respectively. For
                                        example, the color red corresponds to a triplet of
                                            <db:code>"#FF0000"</db:code> and a slightly
                                        transparent blue to a quad of
                                            <db:code>"#800000FF"</db:code>.</db:para>
      </db:listitem>
      <db:listitem>
         <db:para>Using the <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#rgba-method">Qt.rgba()</db:link></db:code>, <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#hsla-method">Qt.hsla()</db:link></db:code>, <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#darker-method">Qt.darker()</db:link></db:code>, <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#lighter-method">Qt.lighter()</db:link></db:code> or <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#tint-method">Qt.tint()</db:link></db:code> functions.</db:para>
      </db:listitem>
   </db:itemizedlist>
   <db:para>Example:</db:para>
   <db:informalfigure>
      <db:mediaobject>
         <db:imageobject>
            <db:imagedata fileref="images/declarative-colors.png"/>
         </db:imageobject>
      </db:mediaobject>
   </db:informalfigure>
   <db:programlisting language="qml">Rectangle { color: "steelblue"width: 40; height: 40 } Rectangle { color: "transparent"y: 40; width:
                                        40; height: 40 } Rectangle { color: "#FF0000"y: 80; width:
                                        40; height: 40 } Rectangle { color: "#800000FF"y: 120; width:
                                        40; height: 40 } Rectangle { color: "#00000000"// ARGB fully transparenty: 160width: 40; height: 40 }</db:programlisting>
   <db:para>Additionally, a color type has <db:code>r</db:code>,
                                        <db:code>g</db:code>, <db:code>b</db:code> and
                                        <db:code>a</db:code> properties that refer to the red,
                                    green, blue and alpha values of the color,
                                    respectively:</db:para>
   <db:programlisting language="qml">Text {
                                        color: "red"// prints "1 0 0 1"Component.onCompleted:
                                        console.log(color.r,
                                        color.g, color.b,
                                        color.a) }</db:programlisting>
   <db:para>To test color values for equality, use the <db:code><db:link xlink:href="qtqml/qml-qtqml-qt.html#colorEqual-method">Qt.colorEqual()</db:link></db:code> function. This allows colors to be
                                    accurately compared whether they are in property form or in any
                                    of the acceptable string specification forms.</db:para>
   <db:para>When integrating with C++, note that any <db:code><db:link xlink:href="qtgui/qcolor.html">QColor</db:link></db:code> value <db:link xlink:href="qtqml/qtqml-cppintegration-data.html">passed into QML
                                        from C++</db:link> is automatically converted into a
                                        <db:code>color</db:code> value, and vice-versa.</db:para>
   <db:para>This basic type is provided by the <db:code><db:link xlink:href="qtquick-module.html">QtQuick</db:link></db:code> import.</db:para>
</db:article>
