<html:html xmlns:html="http://www.w3.org/1999/xhtml" lang="en">
    <html:head>
        <html:meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <!-- qdoc-manual-markupcmds.qdoc -->
        <html:title>Special Content | QDoc Manual 5.4</html:title>
        <html:link href="style/offline.css" rel="stylesheet" type="text/css" />
    </html:head>
    <html:body>
        <html:div class="header" id="qtdocheader">
            <html:div class="main">
                <html:div class="main-rounded">
                    <html:div class="navigationbar">
                        <html:ul>
                            <html:li><html:a href="qtdoc/index.html">Qt 5.4</html:a></html:li>
                            <html:li><html:a href="qdoc-index.html">QDoc Manual</html:a></html:li>
                            <html:li>Special Content</html:li>
                            <html:li id="buildversion">Qt 5.4.2 Reference Documentation</html:li>
                        </html:ul>
                    </html:div>
                </html:div>
                <html:div class="content">
                    <html:div class="line">
                        <html:div class="content mainContent">
                            <html:link href="10-qdoc-commands-tablesandlists.html" rel="prev" />
                            <html:link href="12-0-qdoc-commands-miscellaneous.html" rel="next" />
                            <html:p class="naviNextPrevious headerNavi">
                                <html:a class="prevPage" href="10-qdoc-commands-tablesandlists.html"
                                    >Tables and Lists</html:a>
                                <html:a class="nextPage"
                                    href="12-0-qdoc-commands-miscellaneous.html"
                                    >Miscellaneous</html:a>
                            </html:p><html:p> </html:p><html:div class="sidebar">
                                <html:div class="toc">
                                    <html:h3><html:a name="toc">Contents</html:a></html:h3>
                                    <html:ul>
                                        <html:li class="level1"><html:a href="#abstract"
                                                >\abstract</html:a></html:li>
                                        <html:li class="level1"><html:a href="#quotation"
                                                >\quotation</html:a></html:li>
                                        <html:li class="level1"><html:a href="#footnote"
                                                >\footnote</html:a></html:li>
                                        <html:li class="level1"><html:a href="#note"
                                            >\note</html:a></html:li>
                                        <html:li class="level1"><html:a href="#tableofcontents"
                                                >\tableofcontents</html:a></html:li>
                                        <html:li class="level1"><html:a href="#brief"
                                                >\brief</html:a></html:li>
                                        <html:li class="level1"><html:a href="#legalese"
                                                >\legalese</html:a></html:li>
                                        <html:li class="level1"><html:a href="#warning"
                                                >\warning</html:a></html:li>
                                    </html:ul>
                                </html:div>
                                <html:div class="sidebar-content" id="sidebar-content"
                                ></html:div></html:div>
                            <html:h1 class="title">Special Content</html:h1>
                            <html:span class="subtitle"></html:span>
                            <!-- $$$11-qdoc-commands-specialcontent.html-description -->
                            <html:div class="descr">
                                <html:a name="details"></html:a>
                                <html:p>The document contents commands identify parts of the
                                    documentation, parts with a special rendering, conceptual
                                    meaning or function.</html:p>
                                <html:a name="abstract-command"></html:a><html:a name="abstract"></html:a>
                                <html:h2 id="abstract">\abstract</html:h2>
                                <html:p>The \abstract and \endabstract commands delimit a document's
                                    abstract section.</html:p>
                                <html:p>The abstract section is rendered as an indented italicized
                                    paragraph.</html:p>
                                <html:p><html:b>Warning:</html:b> The <html:b>\abstract</html:b> and
                                        <html:b>\endabstract</html:b> commands have not been
                                    implemented. The abstract section is rendered as a regular HTML
                                    paragraph.</html:p>
                                <html:a name="quotation-command"></html:a><html:a name="quotation"></html:a>
                                <html:h2 id="quotation">\quotation</html:h2>
                                <html:p>The \quotation and \endquotation commands delimit a long
                                    quotation.</html:p>
                                <html:p>The text in the delimited block is surrounded by
                                        <html:b>&lt;blockquote&gt;</html:b> and
                                        <html:b>&lt;/blockquote&gt;</html:b> in the html output,
                                    e.g.:</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> Although the prospect of a
                                    significantly broader market is good news <html:span
                                        class="keyword">for</html:span> Firstlogic<html:span
                                        class="operator">,</html:span> the notion also posed some
                                        challenges<html:span class="operator">.</html:span> Dave
                                        Dobson<html:span class="operator">,</html:span> director of
                                    technology <html:span class="keyword">for</html:span> the La
                                        Crosse<html:span class="operator">,</html:span>
                                        Wisconsin<html:span class="operator">-</html:span>based
                                        company<html:span class="operator">,</html:span> said:
                                    \quotation As our solutions were being adopted into <html:span
                                        class="keyword">new</html:span> environments<html:span
                                        class="operator">,</html:span> we saw an escalating need
                                        <html:span class="keyword">for</html:span> easier
                                    integration with a wider range of enterprise
                                        applications<html:span class="operator">.</html:span>
                                    \endquotation <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>The text in the <html:b>\quotation</html:b> block will
                                    appear in the generated HTML as:</html:p>
                                <html:pre class="cpp"><html:span class="operator"
                                        >&lt;</html:span>blockquote<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span>As our solutions were being
                                    adopted into <html:span class="keyword">new</html:span>
                                        environments<html:span class="operator">,</html:span> we saw
                                    an escalating need <html:span class="keyword">for</html:span>
                                    easier integration with a wider range of enterprise
                                        applications<html:span class="operator"
                                        >.</html:span><html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>p<html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>blockquote<html:span
                                        class="operator">&gt;</html:span></html:pre>
                                <html:p>The built-in style sheet for most browsers will render the
                                    contents of the &lt;blockquote&gt; tag with left and right
                                    indentations. The example above would be rendered as:</html:p>
                                <html:blockquote><html:p>As our solutions were being adopted into
                                        new environments, we saw an escalating need for easier
                                        integration with a wider range of enterprise
                                        applications.</html:p>
                                </html:blockquote>
                                <html:p>But you can redefine the <html:b>&lt;blockquote&gt;</html:b>
                                    tag in your style.css file.</html:p>
                                <html:a name="footnote-command"></html:a><html:a name="footnote"></html:a>
                                <html:h2 id="footnote">\footnote</html:h2>
                                <html:p>The \footnote and \endfootnote commands delimit a
                                    footnote.</html:p>
                                <html:p>The footnote is rendered at the bottom of the page.</html:p>
                                <html:p><html:b>Warning:</html:b> The <html:b>\footnote</html:b> and
                                        <html:b>\endfootnote</html:b> commands have not been
                                    implemented. The footnote is rendered as a regular HTML
                                    paragraph.</html:p>
                                <html:a name="note-command"></html:a><html:a name="note"></html:a>
                                <html:h2 id="note">\note</html:h2>
                                <html:p>The \note command defines a new paragraph preceded by
                                    "Note:" in bold.</html:p>
                                <html:a name="tableofcontents-command"></html:a><html:a
                                    name="tableofcontents"></html:a>
                                <html:h2 id="tableofcontents">\tableofcontents</html:h2>
                                <html:p>The \tableofcontents command has been disabled because QDoc
                                    now generates a table of contents automatically.</html:p>
                                <html:p>The automatically generated table of contents appears in the
                                    upper righthand corner of the page.</html:p>
                                <html:a name="brief-command"></html:a><html:a name="brief"></html:a>
                                <html:h2 id="brief">\brief</html:h2>
                                <html:p>The \brief command introduces a one-sentence description of
                                    a class, namespace, header file, property, or variable.</html:p>
                                <html:p>The brief text is used to introduce the documentation of the
                                    associated object, and in lists generated using the <html:a
                                        href="12-0-qdoc-commands-miscellaneous.html#generatelist-command"
                                        >\generatelist</html:a> command and the <html:a
                                        href="12-0-qdoc-commands-miscellaneous.html#annotatedlist-command"
                                        >\annotatedlist</html:a> command.</html:p>
                                <html:p>The \brief command can be used in two significant different
                                    ways: <html:a
                                        href="11-qdoc-commands-specialcontent.html#brief-class">One
                                        for classes, namespaces and header files</html:a>, and
                                        <html:a
                                        href="11-qdoc-commands-specialcontent.html#brief-property"
                                        >one for properties and variables</html:a>.</html:p>
                                <html:a name="brief-property"></html:a><html:p>When the \brief
                                    command is used to describe a property or a variable, the brief
                                    text must be a sentence fragment starting with "whether" (for a
                                    boolean property or variable) or starting with "the" (for any
                                    other property or variable).</html:p>
                                <html:p>For example the boolean <html:a
                                        href="qtwidgets/qwidget.html#isWindow"
                                        >QWidget::isWindow</html:a> property:</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \property <html:span
                                        class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span><html:span class="operator"
                                        >::</html:span>isActiveWindow \brief Whether <html:span
                                        class="keyword">this</html:span> widget<html:span
                                        class="char">'s window is the active window The active
                                        window is the window that contains the widget that has
                                        keyboard focus. When popup windows are visible, this
                                        property is \c true for both the active window \e and the
                                        popup. \sa activateWindow(), QApplication::activeWindow() *
                                        / </html:span></html:pre>
                                <html:p>and the <html:a href="qtwidgets/qwidget.html#geometry-prop"
                                        >QWidget::geometry</html:a> property</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \property <html:span
                                        class="type"><html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:span><html:span class="operator"
                                        >::</html:span>geometry \brief The geometry of the widget
                                    relative to its parent and excluding the window frame When
                                    changing the geometry<html:span class="operator">,</html:span>
                                    the widget<html:span class="operator">,</html:span>
                                    <html:span class="keyword">if</html:span> visible<html:span
                                        class="operator">,</html:span> receives a move event
                                    (moveEvent()) and<html:span class="operator"
                                        >/</html:span><html:span class="keyword">or</html:span> a
                                    resize event (resizeEvent()) immediately<html:span
                                        class="operator">.</html:span>
                                    <html:span class="operator">.</html:span><html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span> \sa frameGeometry()<html:span
                                        class="operator">,</html:span> rect()<html:span
                                        class="operator">,</html:span>
                                    <html:span class="operator">.</html:span><html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote>
                                    <html:h3>geometry : <html:a
                                            href="http://doc.qt.io/qt-5/qrect.html">QRect</html:a>
                                    </html:h3>
                                    <html:p>This property holds the geometry of the widget relative
                                        to its parent and excluding the window frame.</html:p>
                                    <html:p>...</html:p>
                                    <html:p>Access functions:</html:p>
                                    <html:ul>
                                        <html:li><html:b>const <html:a href="qtcore/qrect.html"
                                                  >QRect</html:a> &amp; geometry ()
                                            const</html:b></html:li>
                                        <html:li><html:b>void setGeometry ( int x, int y, int w, int
                                                h )</html:b></html:li>
                                        <html:li><html:b>void setGeometry ( const <html:a
                                                  href="qtcore/qrect.html">QRect</html:a> &amp;
                                                )</html:b></html:li>
                                    </html:ul>
                                    <html:p>See also <html:a
                                            href="qtwidgets/qwidget.html#frameGeometry-prop"
                                            >frameGeometry()</html:a>, <html:a
                                            href="qtwidgets/qwidget.html#rect-prop">rect()</html:a>,
                                        ...</html:p>
                                </html:blockquote>
                                <html:a name="brief-class"></html:a><html:p>When the \brief command
                                    is used to describe a class, we recommend using a complete
                                    sentence like this:</html:p>
                                <html:pre class="cpp"> The <html:span class="operator"
                                        >&lt;</html:span>classname<html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="keyword">class</html:span> is<html:span
                                        class="operator">|</html:span>provides<html:span
                                        class="operator">|</html:span>contains<html:span
                                        class="operator">|</html:span>specifies<html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span><html:span class="operator"
                                    >.</html:span></html:pre>
                                <html:p><html:b>Warning:</html:b> Do not repeat your detailed
                                    description with the same sentence as the brief statement will
                                    be the first paragraph of the detailed description.</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \<html:span class="keyword"
                                        >class</html:span> PreviewWindow \brief The PreviewWindow
                                        <html:span class="keyword">class</html:span> is a custom
                                    widget displaying the names of its currently set window flags in
                                    a read<html:span class="operator">-</html:span>only text
                                        editor<html:span class="operator">.</html:span> The
                                    PreviewWindow <html:span class="keyword">class</html:span>
                                    inherits <html:span class="type"><html:a
                                            href="qtwidgets/qwidget.html"
                                        >QWidget</html:a></html:span><html:span class="operator"
                                        >.</html:span> The widget displays the names of its window
                                    flags set with the setWindowFlags() function<html:span
                                        class="operator">.</html:span> It is also provided with a
                                        <html:span class="type"><html:a
                                            href="qtwidgets/qpushbutton.html"
                                        >QPushButton</html:a></html:span> that closes the
                                        window<html:span class="operator">.</html:span>
                                    <html:span class="operator">.</html:span><html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >.</html:span> \sa <html:span class="type"><html:a
                                            href="qtwidgets/qwidget.html"
                                        >QWidget</html:a></html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote>
                                    <html:h1>PreviewWindow Class Reference</html:h1>
                                    <html:p>The PreviewWindow class is a custom widget displaying
                                        the names of its currently set window flags in a read-only
                                        text editor. <html:a
                                            href="13-qdoc-commands-topics.html#preview-window"
                                            >More...</html:a></html:p>
                                    <html:h3>Properties</html:h3>
                                    <html:ul>
                                        <html:li>52 properties inherited from <html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:li>
                                        <html:li>1 property inherited from <html:a
                                                href="qtcore/qobject.html"
                                            >QObject</html:a></html:li>
                                    </html:ul>
                                    <html:h3>Public Functions</html:h3>
                                    <html:ul>
                                        <html:li><html:a
                                                href="13-qdoc-commands-topics.html#constructor"
                                                >PreviewWindow</html:a>(<html:a
                                                href="qtwidgets/qwidget.html">QWidget</html:a>
                                            *parent = 0)</html:li>
                                        <html:li>void <html:a
                                                href="13-qdoc-commands-topics.html#function"
                                                >setWindowFlags</html:a>(<html:a
                                                href="qtcore/qt.html#WindowType-enum"
                                                >Qt::WindowFlags</html:a> flags)</html:li>
                                    </html:ul>
                                    <html:ul>
                                        <html:li>183 public functions inherited from <html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:li>
                                        <html:li>28 public functions inherited from <html:a
                                                href="qtcore/qobject.html"
                                            >QObject</html:a></html:li>
                                    </html:ul>
                                    <html:h3>Public Slots</html:h3>
                                    <html:ul>
                                        <html:li>17 public slots inherited from <html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:li>
                                        <html:li>1 public slot inherited from <html:a
                                                href="qtcore/qobject.html"
                                            >QObject</html:a></html:li>
                                    </html:ul>
                                    <html:h3>Additional Inherited Members</html:h3>
                                    <html:ul>
                                        <html:li>1 signal inherited from <html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:li>
                                        <html:li>1 signal inherited from <html:a
                                                href="qtcore/qobject.html"
                                            >QObject</html:a></html:li>
                                        <html:li>4 static public members inherited from <html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:li>
                                        <html:li>4 static public members inherited from <html:a
                                                href="qtcore/qobject.html"
                                            >QObject</html:a></html:li>
                                        <html:li>39 protected functions inherited from <html:a
                                                href="qtwidgets/qwidget.html"
                                            >QWidget</html:a></html:li>
                                        <html:li>7 protected functions inherited from <html:a
                                                href="qtcore/qobject.html"
                                            >QObject</html:a></html:li>
                                    </html:ul>
                                    <html:a name="preview-window"></html:a>
                                    <html:hr />
                                    <html:h2>Detailed Description</html:h2>
                                    <html:p>The PreviewWindow class is a custom widget displaying
                                        the names of its currently set window flags in a read-only
                                        text editor.</html:p>
                                    <html:p>The PreviewWindow class inherits <html:a
                                            href="qtwidgets/qwidget.html">QWidget</html:a>. The
                                        widget displays the names of its window flags set with the
                                            <html:a href="13-qdoc-commands-topics.html#function"
                                            >setWindowFlags()</html:a> function. It is also provided
                                        with a <html:a href="qtwidgets/qpushbutton.html"
                                            >QPushButton</html:a> that closes the window.</html:p>
                                    <html:p>...</html:p>
                                    <html:p>See also <html:a href="qtwidgets/qwidget.html"
                                            >QWidget</html:a>.</html:p>
                                    <html:hr />
                                    <html:h2>Member Function Documentation</html:h2>
                                    <html:a name="constructor"></html:a>
                                    <html:h3>PreviewWindow(QWidget *parent = 0)</html:h3>
                                    <html:p>Constructs a preview window widget with
                                            <html:i>parent</html:i>.</html:p>
                                    <html:a name="function"></html:a>
                                    <html:h3>setWindowFlags(Qt::WindowFlags flags)</html:h3>
                                    <html:p>Sets the widgets flags using the <html:a
                                            href="qtwidgets/qwidget.html#windowFlags-prop"
                                            >QWidget::setWindowFlags</html:a>() function.</html:p>
                                    <html:p>Then runs through the available window flags, creating a
                                        text that contains the names of the flags that matches the
                                        flags parameter, displaying the text in the widgets text
                                        editor.</html:p>
                                </html:blockquote>
                                <html:p>Using \brief in a <html:a
                                        href="13-qdoc-commands-topics.html#namespace-command"
                                        >\namespace</html:a>:</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \<html:span class="keyword"
                                        >namespace</html:span>
                                    <html:span class="type"><html:a href="qtcore/qt.html"
                                            >Qt</html:a></html:span> \brief The <html:span
                                        class="type"><html:a href="qtcore/qt.html"
                                        >Qt</html:a></html:span>
                                    <html:span class="keyword">namespace</html:span> contains
                                    miscellaneous identifiers used throughout the <html:span
                                        class="type"><html:a href="qtcore/qt.html"
                                        >Qt</html:a></html:span> library<html:span class="operator"
                                        >.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>Using \brief in a <html:a
                                        href="13-qdoc-commands-topics.html#headerfile-command"
                                        >\headerfile</html:a>:</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \headerfile <html:span
                                        class="operator">&lt;</html:span><html:span class="type"
                                        >QtGlobal</html:span><html:span class="operator"
                                        >&gt;</html:span> \title Global <html:span class="type"
                                            ><html:a href="qtcore/qt.html">Qt</html:a></html:span>
                                    Declarations \brief The <html:span class="operator"
                                        >&lt;</html:span><html:span class="type"
                                        >QtGlobal</html:span><html:span class="operator"
                                        >&gt;</html:span> header file provides basic declarations
                                    and is included by all other <html:span class="type"><html:a
                                            href="qtcore/qt.html">Qt</html:a></html:span>
                                        headers<html:span class="operator">.</html:span> \sa
                                        <html:span class="operator">&lt;</html:span><html:span
                                        class="type">QtAlgorithms</html:span><html:span
                                        class="operator">&gt;</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>See also <html:a
                                        href="13-qdoc-commands-topics.html#property-command"
                                        >\property</html:a>, <html:a
                                        href="13-qdoc-commands-topics.html#class-command"
                                        >\class</html:a>, <html:a
                                        href="13-qdoc-commands-topics.html#namespace-command"
                                        >\namespace</html:a> and <html:a
                                        href="13-qdoc-commands-topics.html#headerfile-command"
                                        >\headerfile</html:a>.</html:p>
                                <html:a name="legalese-command"></html:a><html:a name="legalese"></html:a>
                                <html:h2 id="legalese">\legalese</html:h2>
                                <html:p>The \legalese and \endlegalese commands delimit a license
                                    agreement.</html:p>
                                <html:p>In the generated HTML, the delimited text is surrounded by a
                                        <html:b>&lt;div class="LegaleseLeft"&gt;</html:b> and
                                        <html:b>&lt;/div&gt;</html:b> tags.</html:p>
                                <html:p>An example of a license agreement enclosed in \legalese and
                                    \endlegalese:</html:p>
                                <html:pre class="cpp"><html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span> \legalese Copyright
                                        <html:span class="number">1996</html:span> Daniel
                                        Dardailler<html:span class="operator">.</html:span>
                                    Permission to use<html:span class="operator">,</html:span>
                                        copy<html:span class="operator">,</html:span>
                                        modify<html:span class="operator">,</html:span>
                                        distribute<html:span class="operator">,</html:span> and sell
                                        <html:span class="keyword">this</html:span> software
                                        <html:span class="keyword">for</html:span> any purpose is
                                    hereby granted without fee<html:span class="operator"
                                        >,</html:span> provided that the above copyright notice
                                    appear in all copies and that both that copyright notice and
                                        <html:span class="keyword">this</html:span> permission
                                    notice appear in supporting documentation<html:span
                                        class="operator">,</html:span> and that the name of Daniel
                                    Dardailler <html:span class="keyword">not</html:span> be used in
                                    advertising <html:span class="keyword">or</html:span> publicity
                                    pertaining to distribution of the software without
                                        specific<html:span class="operator">,</html:span> written
                                    prior permission<html:span class="operator">.</html:span> Daniel
                                    Dardailler makes no representations about the suitability of
                                        <html:span class="keyword">this</html:span> software
                                        <html:span class="keyword">for</html:span> any
                                        purpose<html:span class="operator">.</html:span> It is
                                    provided <html:span class="string">"as is"</html:span> without
                                    express <html:span class="keyword">or</html:span> implied
                                        warranty<html:span class="operator">.</html:span>
                                    Modifications Copyright <html:span class="number"
                                        >1999</html:span> Matt Koss<html:span class="operator"
                                        >,</html:span> under the same license as above<html:span
                                        class="operator">.</html:span> \endlegalese <html:span
                                        class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>It will appear in the generated HTML as:</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">&lt;</html:span>div <html:span
                                        class="keyword">class</html:span><html:span class="operator"
                                        >=</html:span><html:span class="string"
                                        >"LegaleseLeft"</html:span><html:span class="operator"
                                        >&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span>Copyright <html:span
                                        class="number">1996</html:span> Daniel Dardailler<html:span
                                        class="operator">.</html:span><html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>p<html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span>Permission to use<html:span
                                        class="operator">,</html:span> copy<html:span
                                        class="operator">,</html:span> modify<html:span
                                        class="operator">,</html:span> distribute<html:span
                                        class="operator">,</html:span> and sell <html:span
                                        class="keyword">this</html:span> software <html:span
                                        class="keyword">for</html:span> any purpose is hereby
                                    granted without fee<html:span class="operator">,</html:span>
                                    provided that the above copyright notice appear in all copies
                                    and that both that copyright notice and <html:span
                                        class="keyword">this</html:span> permission notice appear in
                                    supporting documentation<html:span class="operator"
                                        >,</html:span> and that the name of Daniel Dardailler
                                        <html:span class="keyword">not</html:span> be used in
                                    advertising <html:span class="keyword">or</html:span> publicity
                                    pertaining to distribution of the software without
                                        specific<html:span class="operator">,</html:span> written
                                    prior permission<html:span class="operator">.</html:span> Daniel
                                    Dardailler makes no representations about the suitability of
                                        <html:span class="keyword">this</html:span> software
                                        <html:span class="keyword">for</html:span> any
                                        purpose<html:span class="operator">.</html:span> It is
                                    provided <html:span class="string">"as is"</html:span> without
                                    express <html:span class="keyword">or</html:span> implied
                                        warranty<html:span class="operator">.</html:span><html:span
                                        class="operator">&lt;</html:span><html:span class="operator"
                                        >/</html:span>p<html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span>p<html:span
                                        class="operator">&gt;</html:span>Modifications Copyright
                                        <html:span class="number">1999</html:span> Matt
                                        Koss<html:span class="operator">,</html:span> under the same
                                    license as above<html:span class="operator"
                                        >.</html:span><html:span class="operator"
                                        >&lt;</html:span><html:span class="operator"
                                        >/</html:span>p<html:span class="operator">&gt;</html:span>
                                    <html:span class="operator">&lt;</html:span><html:span
                                        class="operator">/</html:span>div<html:span class="operator"
                                        >&gt;</html:span></html:pre>
                                <html:p>If the \endlegalese command is omitted, QDoc will process
                                    the \legalese command but considers the rest of the
                                    documentation page as the license agreement.</html:p>
                                <html:p>Ideally, the license text is located with the licensed
                                    code.</html:p>
                                <html:p>Elsewhere, the documentation identified as
                                        <html:i>\legalese</html:i> command can be accumulated using
                                        <html:a
                                        href="12-0-qdoc-commands-miscellaneous.html#generatelist-command"
                                        >\generatelist</html:a> with
                                        <html:code>legalese-command</html:code> as the argument.
                                    This is useful for generating an overview of the license
                                    agreements associated with the source code.</html:p>
                                <html:a name="warning-command"></html:a><html:a name="warning"></html:a>
                                <html:h2 id="warning">\warning</html:h2>
                                <html:p>The \warning command prepends "Warning:" to the command's
                                    argument, in bold font.</html:p>
                                <html:pre class="cpp">
                                    <html:span class="operator">/</html:span>
                                    <html:span class="operator">*</html:span><html:span
                                        class="operator">!</html:span>
                                    <html:span class="type"><html:a href="qtcore/qt.html"
                                            >Qt</html:a></html:span><html:span class="operator"
                                        >::</html:span>HANDLE is a platform<html:span
                                        class="operator">-</html:span>specific handle type
                                        <html:span class="keyword">for</html:span> system
                                        objects<html:span class="operator">.</html:span> This is
                                    equivalent to \c{<html:span class="type">void</html:span>
                                    <html:span class="operator">*</html:span>} on Windows and Mac OS
                                        X<html:span class="operator">,</html:span> and to
                                        \c{<html:span class="type">unsigned</html:span>
                                    <html:span class="type">long</html:span>} on X11<html:span
                                        class="operator">.</html:span> \warning Using <html:span
                                        class="keyword">this</html:span> type is <html:span
                                        class="keyword">not</html:span> portable<html:span
                                        class="operator">.</html:span>
                                    <html:span class="operator">*</html:span>
                                    <html:span class="operator">/</html:span></html:pre>
                                <html:p>QDoc renders this as:</html:p>
                                <html:blockquote><html:p><html:a
                                            href="qtcore/qt.html#HANDLE-typedef">Qt::HANDLE</html:a>
                                        is a platform-specific handle type for system objects. This
                                        is equivalent to <html:code>void *</html:code> on Windows
                                        and Mac OS X, and to <html:code>unsigned long</html:code> on
                                        X11.</html:p>
                                    <html:p><html:b>Warning:</html:b> Using this type is not
                                        portable.</html:p>
                                </html:blockquote>
                            </html:div>
                            <!-- @@@11-qdoc-commands-specialcontent.html -->
                            <html:p class="naviNextPrevious footerNavi">
                                <html:a class="prevPage" href="10-qdoc-commands-tablesandlists.html"
                                    >Tables and Lists</html:a>
                                <html:a class="nextPage"
                                    href="12-0-qdoc-commands-miscellaneous.html"
                                    >Miscellaneous</html:a>
                            </html:p>
                        </html:div>
                    </html:div>
                </html:div>
            </html:div>
        </html:div>
        <html:div class="footer">
            <html:p>
                <html:acronym title="Copyright">&#169;</html:acronym> 2015 The Qt Company Ltd.
                Documentation contributions included herein are the copyrights of their respective
                owners.<html:br /> The documentation provided herein is licensed under the terms of
                the <html:a href="http://www.gnu.org/licenses/fdl.html">GNU Free Documentation
                    License version 1.3</html:a> as published by the Free Software
                Foundation.<html:br /> Qt and respective logos are trademarks of The Qt Company Ltd.
                in Finland and/or other countries worldwide. All other trademarks are property of
                their respective owners. </html:p>
        </html:div>
    </html:body>
</html:html>