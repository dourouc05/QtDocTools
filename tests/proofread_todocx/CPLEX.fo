<?xml version="1.0" encoding="utf-8"?><fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="serif,Symbol,ZapfDingbats" font-size="10pt" text-align="justify" line-height="normal" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body display-align="center" margin-bottom="0.5in" margin-top="0.5in" region-name="blank-body"/><fo:region-before region-name="xsl-region-before-blank" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-blank" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-blank" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-blank" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in - 0pt" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="1"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-first" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-first" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-odd" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-odd" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="210mm" page-height="297mm" margin-top="0.5in" margin-bottom="0.5in" margin-left="1in" margin-right="1in"><fo:region-body margin-bottom="0.5in" margin-top="0.5in" column-gap="12pt" column-count="2"/><fo:region-before region-name="xsl-region-before-even" extent="0.4in" display-align="before" precedence="true"/><fo:region-after region-name="xsl-region-after-even" extent="0.4in" display-align="after" precedence="true"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" extent="0in"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-odd"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:page-sequence hyphenate="true" master-reference="body"><fo:static-content flow-name="xsl-region-before-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>FIXME:</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block>FIXME:</fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-footnote-separator"><fo:block><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="blank-body"><fo:block text-align="center"/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row height="14pt"><fo:table-cell text-align="left" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><block xmlns="http://www.w3.org/1999/XSL/Format" font-family="sans-serif,Symbol,ZapfDingbats" text-align="center"><block font-size="24.8832pt"><fo:block font-family="sans-serif,Symbol,ZapfDingbats">API CPLEX</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:inline>CPLEX</fo:inline> est un outil commercial d'optimisation mathématique. Il
        doit son nom à l'algorithme du simplexe, un algorithme relativement ancien pour les
        problèmes d'optimisation linéaire, mais il supporte actuellement bien d'autres types de
        programmes mathématiques (programmes entiers, mais également non linéaires – quadratiques).
        Il fait partie <fo:basic-link external-destination="url(http://scip.zib.de/)"><fo:inline>des outils les plus performants à ce
            niveau</fo:inline></fo:basic-link>, de par sa rapidité de traitement. </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Il dispose d'une interface interactive en ligne de commande (<fo:inline>CPLEX
            Interactive Optimizer</fo:inline>), mais également d'interfaces dans divers langages
        de programmation, dont C++ et Java (<fo:inline>Concert Technology</fo:inline>). Ce
        document se focalise sur ces interfaces. </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"><fo:basic-link external-destination="url(http://www-01.ibm.com/software/websphere/products/optimization/cplex-studio-preview-edition/)"><fo:inline>Une version d'évaluation de trois mois</fo:inline></fo:basic-link>, grandement limitée dans la taille des
        problèmes, est disponible gratuitement ; pour le monde académique, <fo:basic-link external-destination="url(http://www-304.ibm.com/ibm/university/academic/pub/page/academic_initiative)"><fo:inline>une licence gratuite sans limite</fo:inline></fo:basic-link> est également proposée. </fo:block><fo:block><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"><block xmlns="http://www.w3.org/1999/XSL/Format" space-before="1.5em"><block font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block font-size="20.736pt" font-family="sans-serif,Symbol,ZapfDingbats">1. Architecture d'une application</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Une application utilisant CPLEX travaillera principalement avec un objet
                <fo:inline font-family="monospace">IloCplex</fo:inline> ou <fo:inline font-family="monospace">IloEnv</fo:inline> : il permet de
            créer des variables (<fo:inline font-family="monospace">IloNumVar</fo:inline>) et des contraintes
                (<fo:inline font-family="monospace">IloConstraint</fo:inline>), mais aussi d'appeler le solveur et de
            récupérer les solutions. Tous les objets créés ne seront que des interfaces vers la
            représentation interne du solveur CPLEX de ces variables et contraintes : le
            fonctionnement interne de CPLEX n'est pas montré, seule une version abstraite est
            disponible – et largement suffisante pour la plupart des besoins. </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Une application se déroulera donc en trois phases : <fo:list-block xmlns:mp="http://docbook.org/xslt/ns/mode/private" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em" id="R.1.5.3.1"><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="R.1.5.3.1.1"><fo:list-item-label end-indent="label-end()"><fo:block font-size="inherit">•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" font-size="inherit"><fo:block><fo:block>la création du modèle ; </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="R.1.5.3.1.2"><fo:list-item-label end-indent="label-end()"><fo:block font-size="inherit">•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" font-size="inherit"><fo:block><fo:block>sa résolution ; </fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" id="R.1.5.3.1.3"><fo:list-item-label end-indent="label-end()"><fo:block font-size="inherit">•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()" font-size="inherit"><fo:block><fo:block>l'utilisation de la solution. </fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Pour de petits modèles, il est envisageable de n'utiliser qu'une fonction qui gère
            l'entièreté du modèle, mais cette solution n'est pas applicable à grande échelle. Pour
            un modèle de taille plus conséquente, le paradigme objet, utilisé pour la conception de
            l'API Concert, se révélera souvent utile. Une analyse du problème à modéliser donne une
            liste de concepts qui y interviennent (par exemple, les ressources disponibles, les
            machines à utiliser, les objets à fabriquer) : chacun deviendra une classe, dont les
            instances seront responsables de la création des variables et des contraintes qui leur
            correspondent (une machine ne gérera que sa propre production). </fo:block></fo:block></fo:block><fo:block><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"><block xmlns="http://www.w3.org/1999/XSL/Format" space-before="1.5em"><block font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block font-size="20.736pt" font-family="sans-serif,Symbol,ZapfDingbats">2. Création d'un modèle</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">La première étape est d'instancier CPLEX. En C++, il s'agira de créer un objet
                <fo:inline font-family="monospace">IloEnv</fo:inline>, puis un modèle <fo:inline font-family="monospace">IloModel</fo:inline> ; en
            Java, une instance de <fo:inline font-family="monospace">IloCplex</fo:inline> gère l'entièreté du processus.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.2.4">IloEnv env;
IloModel model(env);</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.2.5">IloCplex cplex = new IloCplex();</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">De là, il est possible de créer une variable, par exemple entière, qui prend ses
            valeurs entre zéro et quarante-deux, avec un nom <fo:inline font-family="monospace">"x"</fo:inline> (il sera utile pour le
            débogage).
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.3.2">IloNumVar x(env, 0, 42, IloNumVar::Int, "x");</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.3.3">IloNumVar x = cplex.intVar(0, 42, "x");</fo:block>Il
            est également possible de créer des tableaux de variables, par exemple booléennes, dont
            les noms sont donnés par un tableau de chaînes de caractères (en Java).
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.3.4">IloNumVarArray y(env, 2, 0, 1, IloNumVar::Bool);</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.3.5">String[] namesY = new String[] { "y1", "y2" };
IloNumVar[] y = cplex.boolVarArray(2, namesY);</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">De là, l'API permet d'exprimer des contraintes entre ces variables, chacune avec un
            nom
            donné.<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.4.1">model.add(y[0] &lt;= y[1], "c1");
model.add(x &lt;= 1000 * y[1], "c2");</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.4.2">cplex.addLe(y[0], y[1], "c1");
cplex.addLe(y[0], cplex.prod(1000, y[1]), "c2");</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em"> La dernière étape est de créer un objectif.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.5.1">model.add(IloMinimize(env, x));</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.6.5.2">cplex.addMinimize(x);</fo:block></fo:block></fo:block></fo:block><fo:block><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"><block xmlns="http://www.w3.org/1999/XSL/Format" space-before="1.5em"><block font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block font-size="20.736pt" font-family="sans-serif,Symbol,ZapfDingbats">3. Optimisation d'un modèle</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">La résolution du modèle se réduit ensuite à l'appel d'une fonction.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.7.2.1">IloCplex cplex(model);
cplex.solve();</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.7.2.2">cplex.solve();</fo:block>La
            méthode <fo:inline font-family="monospace">solve()</fo:inline> retourne un booléen vrai si l'optimisation
            s'est déroulée sans problème (si une solution a été trouvée).
                <fo:inline font-family="monospace">getStatus()</fo:inline> donne plus de détail (solution optimale
            trouvée, solution faisable mais non optimale trouvée, modèle infaisable, etc.). </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">La valeur de l'objectif est accessible par la méthode
                <fo:inline font-family="monospace">getObjValue()</fo:inline>.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.7.3.2">double objective = cplex.getObjValue(); </fo:block>La valeur d'une
            variable particulière s'obtient en passant son objet <fo:inline font-family="monospace">IloNumVar</fo:inline> en
            paramètre à <fo:inline font-family="monospace">getValue()</fo:inline>.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.7.3.5">double xV = cplex.getValue(x);</fo:block>Pour récupérer les
            valeurs de plusieurs variables, <fo:inline font-family="monospace">getValues()</fo:inline> prend en paramètre
            un tableau.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.7.3.7">double yV[] = cplex.getValues(y);</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.7.3.8">double[] yV = cplex.getValues(y);</fo:block></fo:block></fo:block></fo:block><fo:block><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"><block xmlns="http://www.w3.org/1999/XSL/Format" space-before="1.5em"><block font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block font-size="20.736pt" font-family="sans-serif,Symbol,ZapfDingbats">4. Résolution d'infaisabilité</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">En cas de problème dans la résolution (pas de solution faisable, loin de l'optimalité,
            etc.), il est bien souvent utile d'exporter le modèle créé. CPLEX permet de créer très
            facilement des fichiers LP contenant toutes les contraintes et objectifs, contenant
            notamment leur nom. <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.8.2.1">cplex.exportModel("model.lp");</fo:block>Ce
            fichier peut alors être chargé dans l'interface interactive, où <fo:basic-link external-destination="url(http://pic.dhe.ibm.com/infocenter/cosinfoc/v12r6/index.jsp?topic=%2Filog.odms.ide.help%2Frefcppopl%2Fhtml%2Fconflict.html)"><fo:inline>un outil de détection de conflits</fo:inline></fo:basic-link> peut se révéler précieux (il est également
            accessible par les API CPLEX). </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Dans la console interactive, une fois le modèle chargé et optimisé, la commande
                <fo:inline font-weight="bold">conflict</fo:inline> détermine un sous-ensemble d'inégalités rendant le
            problème non faisable (<fo:inline>IIS</fo:inline>, pour <fo:inline><fo:inline font-style="italic">irreducible
                infeasible set</fo:inline></fo:inline>), qu'il présente grâce à <fo:inline font-weight="bold">display conflict
                all</fo:inline> sous la forme d'un problème de faisabilité reprenant ces quelques
            contraintes (souvent assez peu).
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.8.3.5">CPLEX&gt; read model.lp
Problem 'Problems/model.lp' read.
Read time = 0.02 sec. (0.55 ticks)
CPLEX&gt; optimize
Row 'c4257' infeasible, all entries at implied bounds.
Presolve time = 0.00 sec. (0.89 ticks)
…
CPLEX&gt; conflict
Refine conflict on 4884 members...

 Iteration  Max Members  Min Members
         1         4274            0
         …
        37            7            7

Minimal conflict:    7 linear constraint(s)
                     0 lower bound(s)
                     0 upper bound(s)
Conflict computation time =    0.22 sec.  Iterations = 37
Deterministic time = 38.98 ticks  (177.99 ticks/sec)
CPLEX&gt; display conflict all
Minimize
 obj:
Subject To
 off_t1_th4:              on_t1_th4 + off_t1_th4  = 1
 off_t2_th4:              on_t2_th4 + off_t2_th4  = 1
 timeToStart_t0_th4:      - starting_t0_th4 + off_t1_th4 &gt;= 0
 startConjunction_t0_th4: - on_t2_th4 + starting_t0_th4 &gt;= 0
 stopIfPreviousOn_t0_th4: stopping_t0_th4 &lt;= 0
 stopConjunction_t2_th4:  - on_t1_th4 - off_t2_th4 + stopping_t0_th4 &gt;= -1
 c4225:                   - on_t1_th4 &lt;= -1
\Sum of equality rows in the conflict:
\ sum_eq: on_t1_th4 + on_t2_th4 + off_t1_th4 + off_t2_th4  = 2
Bounds
 0 &lt;= on_t1_th4 &lt;= 1
 0 &lt;= on_t2_th4 &lt;= 1
 0 &lt;= starting_t0_th4 &lt;= 1
 0 &lt;= off_t1_th4 &lt;= 1
 0 &lt;= off_t2_th4 &lt;= 1
 0 &lt;= stopping_t0_th4 &lt;= 1
Binaries
 on_t1_th4  on_t2_th4  starting_t0_th4  off_t1_th4  off_t2_th4
 stopping_t0_th4</fo:block></fo:block></fo:block></fo:block><fo:block><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"><block xmlns="http://www.w3.org/1999/XSL/Format" space-before="1.5em"><block font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block font-size="20.736pt" font-family="sans-serif,Symbol,ZapfDingbats">5. Compilation</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Pour Java, à la compilation, il suffit d'ajouter le fichier JAR de CPLEX. Par exemple,
            sous Windows, en notant <fo:inline font-family="monospace">%CPLEX%</fo:inline> le dossier d'installation de CPLEX (par
            exemple, <fo:inline font-family="monospace">C:\Program Files (x86)\IBM\ILOG\CPLEX_Studio_126</fo:inline>)
            :<fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.9.2.3">&gt; javac… -classpath "%CPLEX%\cplex\lib"</fo:block>Lors de
            l'exécution, il faudra, en plus, spécifier l'emplacement de la bibliothèque partagée
            native CPLEX. Puisque l'interaction se fait par JNI, la plateforme de CPLEX utilisée
            doit parfaitement correspondre avec celle de la machine virtuelle Java (si la machine
            virtuelle est en 32 bits, la version 32 bits de CPLEX devra être utilisée). Par exemple
            :
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.9.2.4">&gt; java… -classpath "%CPLEX%\cplex\lib" -Djava.library.path="%CPLEX%\cplex\bin\x86_win32"</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">En C++, la situation est similaire : il faut indiquer au compilateur le chemin des
            en-têtes (par exemple, <fo:inline font-family="monospace">%CPLEX%\cplex\include</fo:inline> et
                <fo:inline font-family="monospace">%CPLEX%\concert\include</fo:inline>) et des fichiers d'import (par exemple,
                <fo:inline font-family="monospace">%CPLEX%\cplex\lib\x86_windows_vs2010\stat_mda</fo:inline>) de CPLEX, en
            plus de lui indiquer de lier avec une série de fichiers d'import (par exemple, pour
            Visual Studio sous Windows, <fo:inline font-family="monospace">ilocplex.lib</fo:inline>,
                <fo:inline font-family="monospace">concert.lib</fo:inline> et
                <fo:inline font-family="monospace">cplex<fo:inline font-family="monospace" font-style="italic">125</fo:inline>.lib</fo:inline> – il faut veiller à
            remplacer les chiffres par la version de CPLEX utilisée). Les bibliothèques partagées
            devront être disponibles à l'application compilée (par exemple, sous Windows, il faut le
            fichier <fo:inline font-family="monospace">cplex<fo:inline font-family="monospace" font-style="italic">125</fo:inline>.dll</fo:inline>, qui peut se situer
            sous <fo:inline font-family="monospace">%CPLEX%\cplex\bin\x86_win32</fo:inline>). </fo:block></fo:block></fo:block><fo:block><fo:block xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions"><block xmlns="http://www.w3.org/1999/XSL/Format" space-before="1.5em"><block font-family="sans-serif,Symbol,ZapfDingbats" margin-left="0pt"><fo:block font-size="20.736pt" font-family="sans-serif,Symbol,ZapfDingbats">6. Exemple complet</fo:block></block></block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Soit un problème de sac à dos. Le sac à dos sera un objet (ce qui permettra de
            généraliser le modèle à de l'assignation, par exemple, en imposant que chaque objet est
            au plus dans un sac à dos), il n'aura comme attribut que sa capacité.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.2.1">class KnapSack {
private: 
    const int capacity; 

public:
    KnapSack(int c) : capacity(c) {}
};</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.2.2">public class KnapSack {
    private final int capacity;

    public KnapSack(int c) {
        capacity = c;
    }
}</fo:block>Chaque
            objet sera également un objet, avec son poids, sa valeur et un identifiant.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.2.3">class Object {
private:
    const int id, weight, value;

public:
    Object(int i, int w, int v) : id(i), weight(w), value(v) {}
    int getId()      { return id;     }
    int getWeight()  { return weight; }
    int getValue()   { return value;  }
};</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.2.4">public class Object {
    private final int id, weight, value;

    public Object(int i, int w, int v) {
        id = i;    weight = w;    value = v;
    }

    public int getId()      { return id;     }
    public int getWeight()  { return weight; }
    public int getValue()   { return value;  }md
}</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Il faut alors créer une variable dans le modèle mathématique par objet. Il est commode
            d'effectuer cette opération dans une méthode et de stocker la valeur dans l'objet.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.3.1">#include &lt;ilcplex/ilocplex.h&gt;

class Object {
private:
    IloNumVar* x;

public:
    IloNumVar&amp; getX() { return *x; }

    void createVariables(IloEnv&amp; env) {
        x = new IloNumVar(env, 0, 1, IloNumVar::Bool, "x" + id);
    }
};</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.3.2">import ilog.concert.IloException;
import ilog.concert.IloIntVar;
import ilog.cplex.IloCplex;

public class Object {
    private IloIntVar x;
    public IloIntVar getX() { return x; }

    public void createVariables(IloCplex solver) throws IloException {
        x = solver.boolVar("x" + id);
    }
}</fo:block>Côté
            sac à dos, il faudra imposer que les objets pris ne dépassent pas la capacité. Pour ce
            faire, une méthode imposera cette contrainte, elle prendra en argument tous les objets.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.3.3">#include &lt;ilcplex/ilocplex.h&gt;
#include &lt;vector&gt;

class KnapSack {
public:
    void addConstraints(IloModel&amp; model, vector&lt;Object*&gt; objects) {
        IloIntVarArray xs;
        IloIntArray weights;
        for (auto object : objects) {
            xs.add(object-&gt;getX());
            weights.add(object-&gt;getWeight());
        }

        model.add(IloScalProd(weights, xs) &lt;= capacity);
    }
};</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.3.4">import ilog.concert.IloException;
import ilog.concert.IloIntVar;
import ilog.cplex.IloCplex;

public class KnapSack {
    public void addConstraints(IloCplex solver, Object[] objects) throws IloException {
        IloIntVar[] xs = new IloIntVar[objects.length];
        int[] weights = new int[objects.length];
        for(int i = 0; i &lt; objects.length; ++i) {
            xs[i] = objects[i].getX();
            weights[i] = objects[i].getWeight();
        }

        solver.addLe(solver.scalProd(weights, xs), capacity);
    }
}</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">La fonction principale se chargera de créer ces objets, d'instancier le solveur,
            d'appeler les méthodes pour créer un modèle, puis de le résoudre et d'afficher la
            solution.
            <fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.4.1">#include &lt;ilcplex/ilocplex.h&gt;
#include &lt;ilconcert/iloexpression.h&gt;
#include &lt;ilconcert/ilolinear.h&gt;
#include &lt;vector&gt;

int main(int argc, char* argv[]) {
    // Create data.
    vector&lt;Object*&gt; objects;
    objects[0] = new Object(1, 12, 5);
    objects[1] = new Object(2, 25, 9);
    objects[2] = new Object(3, 10, 3);

    KnapSack sack(30);

    // Initialise solver.
    IloEnv env;
    IloModel model(env);


    // Fill the model.
    for (auto o : objects) {
        o-&gt;createVariables(env);
    }
    sack.addConstraints(model, objects);

    IloNumVarArray xs;
    IloIntArray values;
    for (auto object : objects) {
        xs.add(object-&gt;getX());
        values.add(object-&gt;getValue());
    }
    model.add(IloMaximize(env, IloScalProd(xs, values)));

    // Solve it.
    IloCplex solver(model);
    solver.solve();
    solver.exportModel("model.lp");
    solver.setParam(IloCplex::TiLim, 30);

    // Give the solver one feasible solution (useful in large MIP models).
    IloNumArray start(env, 3, 1., 0., 1.); 
    solver.addMIPStart(xs, start, IloCplex::MIPStartAuto, "initial solution");

    // Show the solution.
    for (auto object : objects) {
        cout &lt;&lt; "Object " &lt;&lt; object-&gt;getId() &lt;&lt; ": " &lt;&lt; ((solver.getValue(object-&gt;getX()) &gt; 0.75) ? "taken" : "left");
    }
    cout &lt;&lt; "Value: " &lt;&lt; solver.getObjValue();
}</fo:block><fo:block space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="false" wrap-option="no-wrap" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" text-align="start" keep-with-next.within-column="always" keep-with-previous.within-column="always" font-family="monospace" id="R.1.10.4.2">import ilog.concert.IloException;
import ilog.concert.IloIntVar;
import ilog.cplex.IloCplex;

public class Main {
    public static void main(String[] args) throws IloException {
        // Create data.
        Object[] objects = new Object[3];
        objects[0] = new Object(1, 12, 5);
        objects[1] = new Object(2, 25, 9);
        objects[2] = new Object(3, 10, 3);

        KnapSack sack = new KnapSack(30);

        // Initialise solver.
        IloCplex solver = new IloCplex();

        // Fill the model.
        for(Object o : objects) {
            o.createVariables(solver);
        }
        sack.addConstraints(solver, objects);

        IloIntVar[] xs = new IloIntVar[objects.length];
        int[] values = new int[objects.length];
        for(int i = 0; i &lt; objects.length; ++i) {
            xs[i] = objects[i].getX();
            values[i] = objects[i].getValue();
        }
        solver.addMaximize(solver.scalProd(xs, values));

        // Give the solver one feasible solution (useful in large MIP models).
        solver.addMIPStart(xs, new double[]{1., 0., 1.}, "initial solution");

        // Solve it.
        solver.exportModel("model.lp");
        solver.setParam(IloCplex.DoubleParam.TiLim, 30);
        solver.solve();

        // Show the solution.
        for (Object object : objects) {
            String taken = (solver.getValue(object.getX()) &gt; 0.75) ? "taken" : "left";
            System.out.println("Object " + object.getId() + ": " + taken);
        }
        System.out.println("Value: " + solver.getObjValue());
    }
}</fo:block></fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-left="0.25in" margin-right="0.25in" id="R.1.10.5"><fo:block font-family="sans-serif" font-weight="bold" keep-with-next.within-column="always">Note</fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em"><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">La méthode <fo:inline font-family="monospace">addMIPStart()</fo:inline> n'est utile que pour la
                résolution de problèmes impliquant des nombres entiers (d'où son nom). Elle fournit
                une solution initiale, faisable ou non, complète ou non, qui peut aider le solveur à
                démarrer, à trouver une première solution faisable, afin d'accélérer le
                prétraitement et l'algorithme de séparation et évaluation. Le solveur indiquera,
                lors de son exécution, quelles solutions initiales ont fourni des solutions et ont
                donné une première indication sur la valeur de l'objectif. </fo:block><fo:block space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em">Ce jeu de données peut être déterminé par une connaissance du problème (pour une
                situation à améliorer, l'actuel fonctionne, il donne donc une solution faisable :
                pour déterminer un meilleur horaire des trains, l'horaire actuel est déjà connu et
                fonctionne ; lors de l'ajout de nouveaux trains, la solution optimale pour les
                trains précédents est connue). </fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence></fo:root>