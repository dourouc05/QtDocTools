<html:html xmlns:html="http://www.w3.org/1999/xhtml" lang="en">
    <html:head>
        <html:meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
        <!-- qwidget.cpp -->
        <html:title>List of All Members for QWidget | Qt Widgets 5.4</html:title>
        <html:link href="style/offline.css" rel="stylesheet" type="text/css" />
    </html:head>
    <html:body>
        <html:div class="header" id="qtdocheader">
            <html:div class="main">
                <html:div class="main-rounded">
                    <html:div class="navigationbar">
                        <html:ul>
                            <html:li><html:a href="qtdoc/index.html">Qt 5.4</html:a></html:li>
                            <html:li><html:a href="qtwidgets-index.html">Qt Widgets</html:a></html:li>
                            <html:li><html:a href="qtwidgets-module.html">C++ Classes</html:a></html:li>
                            <html:li>QWidget</html:li>
                            <html:li id="buildversion">Qt 5.4.0 Reference Documentation</html:li>
                        </html:ul>
                    </html:div>
                </html:div>
                <html:div class="content">
                    <html:div class="line">
                        <html:div class="content mainContent">
                            <html:div class="sidebar"><html:div class="sidebar-content" id="sidebar-content"></html:div></html:div>
                            <html:h1 class="title">List of All Members for QWidget</html:h1>
                            <html:p>This is the complete list of members for <html:a href="qwidget.html">QWidget</html:a>, including inherited members.</html:p>
                            <html:div class="table"><html:table class="propsummary">
                                    <html:tbody>
                                        <html:tr>
                                            <html:td class="topAlign"><html:ul>
                                                    <html:li class="fn">enum <html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#PaintDeviceMetric-enum">PaintDeviceMetric</html:a></html:b></html:span></html:li>
                                                    <html:li class="fn">enum <html:span class="name"><html:b><html:a href="qwidget.html#RenderFlag-enum">RenderFlag</html:a></html:b></html:span></html:li>
                                                    <html:li class="fn">flags <html:span class="name"><html:b><html:a href="qwidget.html#RenderFlag-enum">RenderFlags</html:a></html:b></html:span></html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#QWidget">QWidget</html:a></html:b></html:span>(QWidget *, Qt::WindowFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#dtor.QWidget">~QWidget</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#acceptDrops-prop">acceptDrops</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#accessibleDescription-prop">accessibleDescription</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#accessibleName-prop">accessibleName</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#actionEvent">actionEvent</html:a></html:b></html:span>(QActionEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#actions">actions</html:a></html:b></html:span>() const : QList&lt;QAction *&gt;</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#activateWindow">activateWindow</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#addAction">addAction</html:a></html:b></html:span>(QAction *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#addActions">addActions</html:a></html:b></html:span>(QList&lt;QAction *&gt;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#adjustSize">adjustSize</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#autoFillBackground-prop">autoFillBackground</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#backgroundRole">backgroundRole</html:a></html:b></html:span>() const : QPalette::ColorRole</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#backingStore">backingStore</html:a></html:b></html:span>() const : QBackingStore *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#baseSize-prop">baseSize</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#blockSignals">blockSignals</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#changeEvent">changeEvent</html:a></html:b></html:span>(QEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#childAt">childAt</html:a></html:b></html:span>(int, int) const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#childAt-2">childAt</html:a></html:b></html:span>(const QPoint &amp;) const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#childEvent">childEvent</html:a></html:b></html:span>(QChildEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#children">children</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#childrenRect-prop">childrenRect</html:a></html:b></html:span>() const : QRect</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#childrenRegion-prop">childrenRegion</html:a></html:b></html:span>() const : QRegion</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#clearFocus">clearFocus</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#clearMask">clearMask</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#close">close</html:a></html:b></html:span>() : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#closeEvent">closeEvent</html:a></html:b></html:span>(QCloseEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#colorCount">colorCount</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connect">connect</html:a></html:b></html:span>(const QObject *, const char *, const QObject *, const char *, Qt::ConnectionType)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connect-5">connect</html:a></html:b></html:span>(const QObject *, PointerToMemberFunction, Functor)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connect-6">connect</html:a></html:b></html:span>(const QObject *, PointerToMemberFunction, const QObject *, Functor, Qt::ConnectionType)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connect-4">connect</html:a></html:b></html:span>(const QObject *, PointerToMemberFunction, const QObject *, PointerToMemberFunction, Qt::ConnectionType)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connect-2">connect</html:a></html:b></html:span>(const QObject *, const QMetaMethod &amp;, const QObject *, const QMetaMethod &amp;, Qt::ConnectionType)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connect-3">connect</html:a></html:b></html:span>(const QObject *, const char *, const char *, Qt::ConnectionType) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#connectNotify">connectNotify</html:a></html:b></html:span>(const QMetaMethod &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#contentsMargins">contentsMargins</html:a></html:b></html:span>() const : QMargins</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#contentsRect">contentsRect</html:a></html:b></html:span>() const : QRect</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#contextMenuEvent">contextMenuEvent</html:a></html:b></html:span>(QContextMenuEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#contextMenuPolicy-prop">contextMenuPolicy</html:a></html:b></html:span>() const : Qt::ContextMenuPolicy</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#create">create</html:a></html:b></html:span>(WId, bool, bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#createWindowContainer">createWindowContainer</html:a></html:b></html:span>(QWindow *, QWidget *, Qt::WindowFlags) : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#cursor-prop">cursor</html:a></html:b></html:span>() const : QCursor</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#customContextMenuRequested">customContextMenuRequested</html:a></html:b></html:span>(const QPoint &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#customEvent">customEvent</html:a></html:b></html:span>(QEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#d_ptr-var">d_ptr</html:a></html:b></html:span> : </html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#deleteLater">deleteLater</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#depth">depth</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#destroy">destroy</html:a></html:b></html:span>(bool, bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#destroyed">destroyed</html:a></html:b></html:span>(QObject *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#devicePixelRatio">devicePixelRatio</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnect">disconnect</html:a></html:b></html:span>(const QObject *, const char *, const QObject *, const char *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnect-3">disconnect</html:a></html:b></html:span>(const QMetaObject::Connection &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnect-6">disconnect</html:a></html:b></html:span>(const QObject *, PointerToMemberFunction, const QObject *, PointerToMemberFunction)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnect-2">disconnect</html:a></html:b></html:span>(const QObject *, const QMetaMethod &amp;, const QObject *, const QMetaMethod &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnect-5">disconnect</html:a></html:b></html:span>(const QObject *, const char *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnect-4">disconnect</html:a></html:b></html:span>(const char *, const QObject *, const char *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#disconnectNotify">disconnectNotify</html:a></html:b></html:span>(const QMetaMethod &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#dragEnterEvent">dragEnterEvent</html:a></html:b></html:span>(QDragEnterEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#dragLeaveEvent">dragLeaveEvent</html:a></html:b></html:span>(QDragLeaveEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#dragMoveEvent">dragMoveEvent</html:a></html:b></html:span>(QDragMoveEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#dropEvent">dropEvent</html:a></html:b></html:span>(QDropEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#dumpObjectInfo">dumpObjectInfo</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#dumpObjectTree">dumpObjectTree</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#dynamicPropertyNames">dynamicPropertyNames</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#effectiveWinId">effectiveWinId</html:a></html:b></html:span>() const : WId</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#ensurePolished">ensurePolished</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#enterEvent">enterEvent</html:a></html:b></html:span>(QEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#event">event</html:a></html:b></html:span>(QEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#event">event</html:a></html:b></html:span>(QEvent *) : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#eventFilter">eventFilter</html:a></html:b></html:span>(QObject *, QEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#find">find</html:a></html:b></html:span>(WId) : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#findChild">findChild</html:a></html:b></html:span>(const QString &amp;, Qt::FindChildOptions) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#findChildren">findChildren</html:a></html:b></html:span>(const QString &amp;, Qt::FindChildOptions) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#findChildren-2">findChildren</html:a></html:b></html:span>(const QRegExp &amp;, Qt::FindChildOptions) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#findChildren-3">findChildren</html:a></html:b></html:span>(const QRegularExpression &amp;, Qt::FindChildOptions) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusInEvent">focusInEvent</html:a></html:b></html:span>(QFocusEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusNextChild">focusNextChild</html:a></html:b></html:span>() : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusNextPrevChild">focusNextPrevChild</html:a></html:b></html:span>(bool) : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusOutEvent">focusOutEvent</html:a></html:b></html:span>(QFocusEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusPolicy-prop">focusPolicy</html:a></html:b></html:span>() const : Qt::FocusPolicy</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusPreviousChild">focusPreviousChild</html:a></html:b></html:span>() : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusProxy">focusProxy</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusWidget">focusWidget</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#font-prop">font</html:a></html:b></html:span>() const : const QFont &amp;</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#fontInfo">fontInfo</html:a></html:b></html:span>() const : QFontInfo</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#fontMetrics">fontMetrics</html:a></html:b></html:span>() const : QFontMetrics</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#foregroundRole">foregroundRole</html:a></html:b></html:span>() const : QPalette::ColorRole</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#frameGeometry-prop">frameGeometry</html:a></html:b></html:span>() const : QRect</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#frameSize-prop">frameSize</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#geometry-prop">geometry</html:a></html:b></html:span>() const : const QRect &amp;</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#getContentsMargins">getContentsMargins</html:a></html:b></html:span>(int *, int *, int *, int *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#grab">grab</html:a></html:b></html:span>(const QRect &amp;) : QPixmap</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#grabGesture">grabGesture</html:a></html:b></html:span>(Qt::GestureType, Qt::GestureFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#grabKeyboard">grabKeyboard</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#grabMouse">grabMouse</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#grabMouse-2">grabMouse</html:a></html:b></html:span>(const QCursor &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#grabShortcut">grabShortcut</html:a></html:b></html:span>(const QKeySequence &amp;, Qt::ShortcutContext) : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#graphicsEffect">graphicsEffect</html:a></html:b></html:span>() const : QGraphicsEffect *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#graphicsProxyWidget">graphicsProxyWidget</html:a></html:b></html:span>() const : QGraphicsProxyWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#hasEditFocus">hasEditFocus</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focus-prop">hasFocus</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#hasHeightForWidth">hasHeightForWidth</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mouseTracking-prop">hasMouseTracking</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#height">height</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#height-prop">height</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#heightForWidth">heightForWidth</html:a></html:b></html:span>(int) const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#heightMM">heightMM</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#hide">hide</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#hideEvent">hideEvent</html:a></html:b></html:span>(QHideEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#inherits">inherits</html:a></html:b></html:span>(const char *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#initPainter">initPainter</html:a></html:b></html:span>(QPainter *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#inputMethodEvent">inputMethodEvent</html:a></html:b></html:span>(QInputMethodEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#inputMethodHints-prop">inputMethodHints</html:a></html:b></html:span>() const : Qt::InputMethodHints</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#inputMethodQuery">inputMethodQuery</html:a></html:b></html:span>(Qt::InputMethodQuery) const : QVariant</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#insertAction">insertAction</html:a></html:b></html:span>(QAction *, QAction *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#insertActions">insertActions</html:a></html:b></html:span>(QAction *, QList&lt;QAction *&gt;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#installEventFilter">installEventFilter</html:a></html:b></html:span>(QObject *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#isActiveWindow-prop">isActiveWindow</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#isAncestorOf">isAncestorOf</html:a></html:b></html:span>(const QWidget *) const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#enabled-prop">isEnabled</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#isEnabledTo">isEnabledTo</html:a></html:b></html:span>(const QWidget *) const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#fullScreen-prop">isFullScreen</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#isHidden">isHidden</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximized-prop">isMaximized</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimized-prop">isMinimized</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#modal-prop">isModal</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#isSignalConnected">isSignalConnected</html:a></html:b></html:span>(const QMetaMethod &amp;) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#visible-prop">isVisible</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#isVisibleTo">isVisibleTo</html:a></html:b></html:span>(const QWidget *) const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#isWidgetType">isWidgetType</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#isWindow">isWindow</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowModified-prop">isWindowModified</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#isWindowType">isWindowType</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#keyPressEvent">keyPressEvent</html:a></html:b></html:span>(QKeyEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#keyReleaseEvent">keyReleaseEvent</html:a></html:b></html:span>(QKeyEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#keyboardGrabber">keyboardGrabber</html:a></html:b></html:span>() : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#killTimer">killTimer</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#layout">layout</html:a></html:b></html:span>() const : QLayout *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#layoutDirection-prop">layoutDirection</html:a></html:b></html:span>() const : Qt::LayoutDirection</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#leaveEvent">leaveEvent</html:a></html:b></html:span>(QEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#locale-prop">locale</html:a></html:b></html:span>() const : QLocale</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#logicalDpiX">logicalDpiX</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#logicalDpiY">logicalDpiY</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#lower">lower</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#macCGHandle">macCGHandle</html:a></html:b></html:span>() const : Qt::HANDLE</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#macQDHandle">macQDHandle</html:a></html:b></html:span>() const : Qt::HANDLE</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mapFrom">mapFrom</html:a></html:b></html:span>(const QWidget *, const QPoint &amp;) const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mapFromGlobal">mapFromGlobal</html:a></html:b></html:span>(const QPoint &amp;) const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mapFromParent">mapFromParent</html:a></html:b></html:span>(const QPoint &amp;) const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mapTo">mapTo</html:a></html:b></html:span>(const QWidget *, const QPoint &amp;) const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mapToGlobal">mapToGlobal</html:a></html:b></html:span>(const QPoint &amp;) const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mapToParent">mapToParent</html:a></html:b></html:span>(const QPoint &amp;) const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mask">mask</html:a></html:b></html:span>() const : QRegion</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumHeight-prop">maximumHeight</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumSize-prop">maximumSize</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumWidth-prop">maximumWidth</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#metaObject">metaObject</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#metric">metric</html:a></html:b></html:span>(PaintDeviceMetric) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#metric">metric</html:a></html:b></html:span>(PaintDeviceMetric) const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumHeight-prop">minimumHeight</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumSize-prop">minimumSize</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumSizeHint-prop">minimumSizeHint</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumWidth-prop">minimumWidth</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mouseDoubleClickEvent">mouseDoubleClickEvent</html:a></html:b></html:span>(QMouseEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mouseGrabber">mouseGrabber</html:a></html:b></html:span>() : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mouseMoveEvent">mouseMoveEvent</html:a></html:b></html:span>(QMouseEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mousePressEvent">mousePressEvent</html:a></html:b></html:span>(QMouseEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mouseReleaseEvent">mouseReleaseEvent</html:a></html:b></html:span>(QMouseEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#pos-prop">move</html:a></html:b></html:span>(const QPoint &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#pos-prop">move</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#moveEvent">moveEvent</html:a></html:b></html:span>(QMoveEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#moveToThread">moveToThread</html:a></html:b></html:span>(QThread *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#nativeEvent">nativeEvent</html:a></html:b></html:span>(const QByteArray &amp;, void *, long *) : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#nativeParentWidget">nativeParentWidget</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#nextInFocusChain">nextInFocusChain</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#normalGeometry-prop">normalGeometry</html:a></html:b></html:span>() const : QRect</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#objectName-prop">objectName</html:a></html:b></html:span>() const</html:li>
                                                </html:ul></html:td>
                                            <html:td class="topAlign"><html:ul>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#objectName-prop">objectNameChanged</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#overrideWindowFlags">overrideWindowFlags</html:a></html:b></html:span>(Qt::WindowFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#paintEngine">paintEngine</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#paintEngine">paintEngine</html:a></html:b></html:span>() const : QPaintEngine *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#paintEvent">paintEvent</html:a></html:b></html:span>(QPaintEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#painters-var">painters</html:a></html:b></html:span> : </html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#paintingActive">paintingActive</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#palette-prop">palette</html:a></html:b></html:span>() const : const QPalette &amp;</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#parent">parent</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#parentWidget">parentWidget</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#physicalDpiX">physicalDpiX</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#physicalDpiY">physicalDpiY</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#pos-prop">pos</html:a></html:b></html:span>() const : QPoint</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#previousInFocusChain">previousInFocusChain</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#property">property</html:a></html:b></html:span>(const char *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#raise">raise</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#receivers">receivers</html:a></html:b></html:span>(const char *) const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#rect-prop">rect</html:a></html:b></html:span>() const : QRect</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#redirected">redirected</html:a></html:b></html:span>(QPoint *) const : QPaintDevice *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#releaseKeyboard">releaseKeyboard</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#releaseMouse">releaseMouse</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#releaseShortcut">releaseShortcut</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#removeAction">removeAction</html:a></html:b></html:span>(QAction *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#removeEventFilter">removeEventFilter</html:a></html:b></html:span>(QObject *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#render">render</html:a></html:b></html:span>(QPaintDevice *, const QPoint &amp;, const QRegion &amp;, RenderFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#render-2">render</html:a></html:b></html:span>(QPainter *, const QPoint &amp;, const QRegion &amp;, RenderFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#repaint">repaint</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#repaint-2">repaint</html:a></html:b></html:span>(int, int, int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#repaint-3">repaint</html:a></html:b></html:span>(const QRect &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#repaint-4">repaint</html:a></html:b></html:span>(const QRegion &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#size-prop">resize</html:a></html:b></html:span>(const QSize &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#size-prop">resize</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#resizeEvent">resizeEvent</html:a></html:b></html:span>(QResizeEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#restoreGeometry">restoreGeometry</html:a></html:b></html:span>(const QByteArray &amp;) : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#saveGeometry">saveGeometry</html:a></html:b></html:span>() const : QByteArray</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#scroll">scroll</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#scroll-2">scroll</html:a></html:b></html:span>(int, int, const QRect &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#sender">sender</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#senderSignalIndex">senderSignalIndex</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#acceptDrops-prop">setAcceptDrops</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#accessibleDescription-prop">setAccessibleDescription</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#accessibleName-prop">setAccessibleName</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setAttribute">setAttribute</html:a></html:b></html:span>(Qt::WidgetAttribute, bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#autoFillBackground-prop">setAutoFillBackground</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setBackgroundRole">setBackgroundRole</html:a></html:b></html:span>(QPalette::ColorRole)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#baseSize-prop">setBaseSize</html:a></html:b></html:span>(const QSize &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#baseSize-prop">setBaseSize</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setContentsMargins">setContentsMargins</html:a></html:b></html:span>(int, int, int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setContentsMargins-2">setContentsMargins</html:a></html:b></html:span>(const QMargins &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#contextMenuPolicy-prop">setContextMenuPolicy</html:a></html:b></html:span>(Qt::ContextMenuPolicy)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#cursor-prop">setCursor</html:a></html:b></html:span>(const QCursor &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setDisabled">setDisabled</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setEditFocus">setEditFocus</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#enabled-prop">setEnabled</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFixedHeight">setFixedHeight</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFixedSize">setFixedSize</html:a></html:b></html:span>(const QSize &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFixedSize-2">setFixedSize</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFixedWidth">setFixedWidth</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFocus">setFocus</html:a></html:b></html:span>(Qt::FocusReason)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFocus-2">setFocus</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#focusPolicy-prop">setFocusPolicy</html:a></html:b></html:span>(Qt::FocusPolicy)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setFocusProxy">setFocusProxy</html:a></html:b></html:span>(QWidget *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#font-prop">setFont</html:a></html:b></html:span>(const QFont &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setForegroundRole">setForegroundRole</html:a></html:b></html:span>(QPalette::ColorRole)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#geometry-prop">setGeometry</html:a></html:b></html:span>(const QRect &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#geometry-prop">setGeometry</html:a></html:b></html:span>(int, int, int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setGraphicsEffect">setGraphicsEffect</html:a></html:b></html:span>(QGraphicsEffect *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setHidden">setHidden</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#inputMethodHints-prop">setInputMethodHints</html:a></html:b></html:span>(Qt::InputMethodHints)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setLayout">setLayout</html:a></html:b></html:span>(QLayout *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#layoutDirection-prop">setLayoutDirection</html:a></html:b></html:span>(Qt::LayoutDirection)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#locale-prop">setLocale</html:a></html:b></html:span>(const QLocale &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setMask">setMask</html:a></html:b></html:span>(const QBitmap &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setMask-2">setMask</html:a></html:b></html:span>(const QRegion &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumHeight-prop">setMaximumHeight</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumSize-prop">setMaximumSize</html:a></html:b></html:span>(const QSize &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumSize-prop">setMaximumSize</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#maximumWidth-prop">setMaximumWidth</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumHeight-prop">setMinimumHeight</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumSize-prop">setMinimumSize</html:a></html:b></html:span>(const QSize &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumSize-prop">setMinimumSize</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#minimumWidth-prop">setMinimumWidth</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#mouseTracking-prop">setMouseTracking</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#objectName-prop">setObjectName</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#palette-prop">setPalette</html:a></html:b></html:span>(const QPalette &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#setParent">setParent</html:a></html:b></html:span>(QObject *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setParent">setParent</html:a></html:b></html:span>(QWidget *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setParent-2">setParent</html:a></html:b></html:span>(QWidget *, Qt::WindowFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#setProperty">setProperty</html:a></html:b></html:span>(const char *, const QVariant &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setShortcutAutoRepeat">setShortcutAutoRepeat</html:a></html:b></html:span>(int, bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setShortcutEnabled">setShortcutEnabled</html:a></html:b></html:span>(int, bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizeIncrement-prop">setSizeIncrement</html:a></html:b></html:span>(const QSize &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizeIncrement-prop">setSizeIncrement</html:a></html:b></html:span>(int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizePolicy-prop">setSizePolicy</html:a></html:b></html:span>(QSizePolicy)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizePolicy-prop">setSizePolicy</html:a></html:b></html:span>(QSizePolicy::Policy, QSizePolicy::Policy)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#statusTip-prop">setStatusTip</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setStyle">setStyle</html:a></html:b></html:span>(QStyle *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#styleSheet-prop">setStyleSheet</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setTabOrder">setTabOrder</html:a></html:b></html:span>(QWidget *, QWidget *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#toolTip-prop">setToolTip</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#toolTipDuration-prop">setToolTipDuration</html:a></html:b></html:span>(int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#updatesEnabled-prop">setUpdatesEnabled</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#visible-prop">setVisible</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#whatsThis-prop">setWhatsThis</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowFilePath-prop">setWindowFilePath</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowFlags-prop">setWindowFlags</html:a></html:b></html:span>(Qt::WindowFlags)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowIcon-prop">setWindowIcon</html:a></html:b></html:span>(const QIcon &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowIconText-prop">setWindowIconText</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowModality-prop">setWindowModality</html:a></html:b></html:span>(Qt::WindowModality)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowModified-prop">setWindowModified</html:a></html:b></html:span>(bool)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowOpacity-prop">setWindowOpacity</html:a></html:b></html:span>(qreal)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setWindowRole">setWindowRole</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setWindowState">setWindowState</html:a></html:b></html:span>(Qt::WindowStates)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowTitle-prop">setWindowTitle</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#setupUi">setupUi</html:a></html:b></html:span>(QWidget *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sharedPainter">sharedPainter</html:a></html:b></html:span>() const : QPainter *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#show">show</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#showEvent">showEvent</html:a></html:b></html:span>(QShowEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#showFullScreen">showFullScreen</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#showMaximized">showMaximized</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#showMinimized">showMinimized</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#showNormal">showNormal</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#signalsBlocked">signalsBlocked</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#size-prop">size</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizeHint-prop">sizeHint</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizeIncrement-prop">sizeIncrement</html:a></html:b></html:span>() const : QSize</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#sizePolicy-prop">sizePolicy</html:a></html:b></html:span>() const : QSizePolicy</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#stackUnder">stackUnder</html:a></html:b></html:span>(QWidget *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#startTimer">startTimer</html:a></html:b></html:span>(int, Qt::TimerType)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#staticMetaObject-var">staticMetaObject</html:a></html:b></html:span> : </html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#staticQtMetaObject-var">staticQtMetaObject</html:a></html:b></html:span> : </html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#statusTip-prop">statusTip</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#style">style</html:a></html:b></html:span>() const : QStyle *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#styleSheet-prop">styleSheet</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#tabletEvent">tabletEvent</html:a></html:b></html:span>(QTabletEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#testAttribute">testAttribute</html:a></html:b></html:span>(Qt::WidgetAttribute) const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#thread">thread</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#timerEvent">timerEvent</html:a></html:b></html:span>(QTimerEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#toolTip-prop">toolTip</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#toolTipDuration-prop">toolTipDuration</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtcore/qobject.html#tr">tr</html:a></html:b></html:span>(const char *, const char *, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#underMouse">underMouse</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#ungrabGesture">ungrabGesture</html:a></html:b></html:span>(Qt::GestureType)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#cursor-prop">unsetCursor</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#layoutDirection-prop">unsetLayoutDirection</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#locale-prop">unsetLocale</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#update">update</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#update-2">update</html:a></html:b></html:span>(int, int, int, int)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#update-3">update</html:a></html:b></html:span>(const QRect &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#update-4">update</html:a></html:b></html:span>(const QRegion &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#updateGeometry">updateGeometry</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#updateMicroFocus">updateMicroFocus</html:a></html:b></html:span>()</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#updatesEnabled-prop">updatesEnabled</html:a></html:b></html:span>() const : bool</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#visibleRegion">visibleRegion</html:a></html:b></html:span>() const : QRegion</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#whatsThis-prop">whatsThis</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#wheelEvent">wheelEvent</html:a></html:b></html:span>(QWheelEvent *)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#width">width</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#width-prop">width</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qtgui/qpaintdevice.html#widthMM">widthMM</html:a></html:b></html:span>() const</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#winId">winId</html:a></html:b></html:span>() const : WId</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#window">window</html:a></html:b></html:span>() const : QWidget *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowFilePath-prop">windowFilePath</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowFlags-prop">windowFlags</html:a></html:b></html:span>() const : Qt::WindowFlags</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowHandle">windowHandle</html:a></html:b></html:span>() const : QWindow *</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowIcon-prop">windowIcon</html:a></html:b></html:span>() const : QIcon</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowIcon-prop">windowIconChanged</html:a></html:b></html:span>(const QIcon &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowIconText-prop">windowIconText</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowIconText-prop">windowIconTextChanged</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowModality-prop">windowModality</html:a></html:b></html:span>() const : Qt::WindowModality</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowOpacity-prop">windowOpacity</html:a></html:b></html:span>() const : qreal</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowRole">windowRole</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowState">windowState</html:a></html:b></html:span>() const : Qt::WindowStates</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowTitle-prop">windowTitle</html:a></html:b></html:span>() const : QString</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowTitle-prop">windowTitleChanged</html:a></html:b></html:span>(const QString &amp;)</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#windowType">windowType</html:a></html:b></html:span>() const : Qt::WindowType</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#x-prop">x</html:a></html:b></html:span>() const : int</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#x11Info">x11Info</html:a></html:b></html:span>() const : const QX11Info &amp;</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#x11PictureHandle">x11PictureHandle</html:a></html:b></html:span>() const : Qt::HANDLE</html:li>
                                                    <html:li class="fn"><html:span class="name"><html:b><html:a href="qwidget.html#y-prop">y</html:a></html:b></html:span>() const : int</html:li>
                                                </html:ul>
                                            </html:td>
                                        </html:tr>
                                    </html:tbody>
                                </html:table></html:div>
                        </html:div>
                    </html:div>
                </html:div>
            </html:div>
        </html:div>
        <html:div class="footer">
            <html:p>
                <html:acronym title="Copyright">&#169;</html:acronym> 2014 Digia Plc and/or its subsidiaries. Documentation contributions included herein are the copyrights of their respective owners.<html:br /> The documentation provided herein is licensed under the terms of the <html:a href="http://www.gnu.org/licenses/fdl.html">GNU Free Documentation License version 1.3</html:a> as published by the Free Software Foundation.<html:br /> Digia, Qt and their respective logos are trademarks of Digia Plc in Finland and/or other countries worldwide. All other trademarks are property of their respective owners. </html:p>
        </html:div>
    </html:body>
</html:html>
